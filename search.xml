<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>esp32学习与开发-墨水屏桌面小屏幕</title>
      <link href="/2024/09/04/esp32-xue-xi-yu-kai-fa-mo-shui-ping-zhuo-mian-xiao-ping-mu/"/>
      <url>/2024/09/04/esp32-xue-xi-yu-kai-fa-mo-shui-ping-zhuo-mian-xiao-ping-mu/</url>
      
        <content type="html"><![CDATA[<h1 id="1、学习"><a href="#1、学习" class="headerlink" title="1、学习"></a>1、学习</h1><p><strong>参考</strong>：<a href="https://www.bilibili.com/video/BV1wV4y1G7Vk?p=1&vd_source=c2fe15d5282e5de556b5fccfc70e9600">【有手就行系列】嵌入式单片机教程-桌面小屏幕实战教学 从设计、硬件、焊接到代码编写、调试 ESP32 持续更新2022</a></p><p>​<a href="https://x509p6c8to.feishu.cn/docx/NQCTdjUFJoYoZ1xYHS9cIlbwnxh">对应在线文档</a></p><p>​<a href="https://docs.espressif.com/projects/arduino-esp32/en/latest/index.html">Welcome to ESP32 Arduino Core’s documentation - - — Arduino ESP32 latest documentation (espressif.com)</a></p><h2 id="1、需求分析"><a href="#1、需求分析" class="headerlink" title="1、需求分析"></a>1、需求分析</h2><p>​需求–&gt;需求细化–&gt;流程化–&gt;外设方案化–&gt;软硬件接口梳理；</p><h2 id="2、-方案选型"><a href="#2、-方案选型" class="headerlink" title="2、 方案选型"></a>2、 方案选型</h2><p>​外设选型（封装、通用&#x2F;稳定性、电池容量&#x2F;充电电流&#x2F;保护、主控主频&#x2F;RAM&#x2F;ROM&#x2F;IO）;</p><p>​<a href="https://www.bilibili.com/read/cv15539489/">ESP32选型一文就够，ESP32-WROOM-32、ESP32-WROVER、ESP32-S衍生模组、ESP32-PICO差异 - 哔哩哔哩 (bilibili.com)</a></p><h2 id="3、绘制PCB"><a href="#3、绘制PCB" class="headerlink" title="3、绘制PCB"></a>3、绘制PCB</h2><p><strong>参考</strong>：<a href="https://blog.csdn.net/weixin_73588765/article/details/135441822">ESP32自动下载电路究竟是如何巧妙实现的-CSDN博客</a>)</p><p>​原理图–&gt;PCB（layout规范、绘制板框尺寸、布局、走线规范、过孔&#x2F;测试点&#x2F;泪滴&#x2F;丝印、DRC检查。（PS：CH340添加防倒灌电路、预留测试&#x2F;下载点、电源线要粗点.立创EDA绘制自己的元件（无符号&#x2F;封装）：新建元件库–&gt;新建符号–新建封装–&gt;关联符号与封装）;</p><h2 id="4、设计梳理，绘制流程图"><a href="#4、设计梳理，绘制流程图" class="headerlink" title="4、设计梳理，绘制流程图"></a>4、设计梳理，绘制流程图</h2><h2 id="5、-开发环境搭建"><a href="#5、-开发环境搭建" class="headerlink" title="5、 开发环境搭建"></a>5、 开发环境搭建</h2><h3 id="1、Linux"><a href="#1、Linux" class="headerlink" title="1、Linux:"></a>1、Linux:</h3><p><strong>方案</strong>：虚拟机(ubuntu2 + ssh+samba + vscode(windows) +esp32开发依赖环境（ESP-IDF v5.3）；</p><p><strong>参考</strong>：<a href="https://docs.espressif.com/projects/esp-idf/zh_CN/stable/esp32/get-started/linux-macos-setup.html">Linux 和 macOS 平台工具链的标准设置 - ESP32 - — ESP-IDF 编程指南 v5.3 文档 (espressif.com)</a></p><p>​<a href="https://x509p6c8to.feishu.cn/docs/doccnk1gfc2Ddes4jzGDzm7L7tf">Embeded 2 环境搭建 - 飞书云文档 (feishu.cn)</a></p><ol><li><p>安装编译所需软件包：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install git wget flex bison gperf python3 python3-pip python3-venv cmake ninja-build ccache libffi-dev libssl-dev dfu-util libusb-1.0-0</span><br></pre></td></tr></table></figure></li><li><p>获取ESP-IDF:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p ~/esp</span><br><span class="line">cd ~/esp</span><br><span class="line">git clone -b v5.3 --recursive https://github.com/espressif/esp-idf.git</span><br></pre></td></tr></table></figure></li><li><p>设置工具（编译器、调试器、Python包等）：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">ESP-IDF 工具安装器会下载 Github 发布版本中附带的一些工具，如果访问 Github 较为缓慢，可以设置一个环境变量，从而优先选择 Espressif 的下载服务器进行 Github 资源下载。</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">推荐国内用户使用国内的下载服务器，以加快下载速度</span></span><br><span class="line">cd ~/esp/esp-idf</span><br><span class="line">export IDF_GITHUB_ASSETS=&quot;dl.espressif.cn/github_assets&quot;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">仅为 ESP32 安装所需工具</span></span><br><span class="line">./install.sh esp32</span><br></pre></td></tr></table></figure></li><li><p>设置环境变量：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">. $HOME/esp/esp-idf/export.sh</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">可为执行 . <span class="variable">$HOME</span>/esp/esp-idf/export.sh创建一个别名</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">在.bashrc文件中添加</span></span><br><span class="line">alias get_idf=&#x27;. $HOME/esp/esp-idf/export.sh&#x27;</span><br></pre></td></tr></table></figure></li><li><p>开始使用：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">get_idf</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">将 get-started/hello_world 工程复制至本地的 ~/esp 目录下：</span></span><br><span class="line">cd ~/esp</span><br><span class="line">cp -r $IDF_PATH/examples/get-started/hello_world .</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">进入 hello_world 目录，设置 ESP32 为目标芯片，然后运行工程配置工具 menuconfig</span></span><br><span class="line">cd ~/esp/hello_world</span><br><span class="line">idf.py set-target esp32</span><br><span class="line">idf.py menuconfig</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">清楚先前编译产生的文件（涉及分区操作时最好执行一次）</span></span><br><span class="line">idf.py fullclean</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">编译</span></span><br><span class="line">idf.py build</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">烧录&amp;监视输出</span></span><br><span class="line">idf.py -p /dev/ttyUSB0 -b 115200 flash moitor</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">退出ESP-IDF监视器</span></span><br><span class="line">ctr+]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">擦除整个 flash</span></span><br><span class="line">idf.py -p PORT erase-flash</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">若存在需要擦除的 OTA 数据</span></span><br><span class="line">idf.py -p PORT erase-otadata</span><br></pre></td></tr></table></figure></li><li><p>(可选)更新ESP-IDF:</p></li></ol><h3 id="2、windows"><a href="#2、windows" class="headerlink" title="2、windows:"></a>2、windows:</h3><h3 id="3、iats-pro-esp-idf3-0-windows"><a href="#3、iats-pro-esp-idf3-0-windows" class="headerlink" title="3、iats_pro @esp-idf3.0 @windows"></a>3、iats_pro @esp-idf3.0 @windows</h3><ol><li>设置工具链：<a href="https://dl.espressif.com/dl/esp32_win32_msys2_environment_and_toolchain-20181001.zip">下载集成在一起的工具链和 MSYS2 压缩文件</a>，将 zip 压缩文件解压到 <code>C:\</code> (或其它路径，这里假设是 <code>C:\</code>)，它会使用预先准备的环境创建一个 <code>msys32</code> 目录，运行 <code>C:\msys32\mingw32.exe</code> 打开一个 MSYS2 的终端窗口，在此窗口下开发；</li><li>获取ESP-IDF；</li><li>设置ESP-IDF环境变量(这里使用单次：<code>export IDF_PATH=&quot;D:/South/iAts_pro/lib/esp-idf&quot;</code>)：<a href="https://docs.espressif.com/projects/esp-idf/zh-cn/v3.3.1/get-started/add-idf_path-to-profile.html">在用户配置文件中添加 IDF_PATH — ESP-IDF 编程指南 v3.3.1 文档 (espressif.com)</a>;</li><li>安装依赖的Python 软件包：<code>python2.7 -m pip install --user -r D\:/South/iAts_pro/lib/esp-idf/requirements</code>;</li><li>示例工程：<code>cp -r D\:/South/iAts_pro/lib/esp-idf/examples/get-started/hello_world/ .</code>;</li><li>配置：<code>make menuconfig</code>；</li><li>编译、烧写、监视。</li></ol><h2 id="6、程序编写"><a href="#6、程序编写" class="headerlink" title="6、程序编写"></a>6、程序编写</h2><p><strong>参考</strong>：<a href="https://docs.espressif.com/projects/esp-idf/zh_CN/v5.3/esp32/get-started/index.html">快速入门 - ESP32 - — ESP-IDF 编程指南 v5.3 文档 (espressif.com)</a></p><h3 id="1、日志打印"><a href="#1、日志打印" class="headerlink" title="1、日志打印"></a>1、日志打印</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;esp_log.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">const</span> <span class="type">char</span> *TAG = <span class="string">&quot;MAIN APP&quot;</span>;</span><br><span class="line"></span><br><span class="line">ESP_LOGI(TAG,<span class="string">&quot;test&quot;</span>);</span><br><span class="line"><span class="comment">//ESP_LOGW();</span></span><br><span class="line"><span class="comment">//ESP_LOGE();</span></span><br></pre></td></tr></table></figure><h3 id="2-、多任务"><a href="#2-、多任务" class="headerlink" title="2 、多任务"></a>2 、多任务</h3><h3 id="3、Timer-消息队列"><a href="#3、Timer-消息队列" class="headerlink" title="3、Timer+消息队列"></a>3、Timer+消息队列</h3><h3 id="4、文件系统"><a href="#4、文件系统" class="headerlink" title="4、文件系统"></a>4、文件系统</h3><p>​后续供http service使用，存储html等文件。spiffs文件系统移植，复制分区表<code>esp-idf/examples/storage/spiffs/partitions.csv</code>，到项目文件夹下，<code>idf.py menuconfig</code>设置参数：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CONFIG_PARTITION_TABLE_CUSTOM=y</span><br><span class="line">CONFIG_PARTITION_TABLE_CUSTOM_FILENAME=<span class="string">&quot;partitions.csv&quot;</span></span><br><span class="line">CONFIG_PARTITION_TABLE_FILENAME=<span class="string">&quot;partition.csv&quot;</span></span><br></pre></td></tr></table></figure><h3 id="5、NVS-非易失性存储"><a href="#5、NVS-非易失性存储" class="headerlink" title="5、NVS-非易失性存储"></a>5、NVS-非易失性存储</h3><p>​KeyMap，供Wifi账号密码存储使用</p><h3 id="6、GPIO"><a href="#6、GPIO" class="headerlink" title="6、GPIO"></a>6、GPIO</h3><h3 id="7、I2C"><a href="#7、I2C" class="headerlink" title="7、I2C"></a>7、I2C</h3><h3 id="8、SPI"><a href="#8、SPI" class="headerlink" title="8、SPI"></a>8、SPI</h3><p>​高速、全双工、同步</p><h3 id="9、AP-mode-http-service"><a href="#9、AP-mode-http-service" class="headerlink" title="9、AP mode + http service"></a>9、AP mode + http service</h3><ol><li><p>SSID 与 passwd在menuconfig中配置</p></li><li><p>http service 参考：esp-idf&#x2F;examples&#x2F;protocols&#x2F;http_service</p><p>编写setting.html文件，添加到main&#x2F;CMakeLists.txt–&gt;EMBED_FILES  “setting.html”，分区表添加spiffs，用于存储setting.html文件</p></li></ol><p>HTTP与HTTPS请求服务器数据：</p><p>HTTP:参考esp-idf&#x2F;examples&#x2F;protocols&#x2F;http_request</p><p>心知天气、苏宁时间、B站粉丝数</p><p>HTTPS: 获取网站ca证书：openssl s_client-showcerts-connect api seniverse.com:443 &lt;&#x2F;dev&#x2F;null    复制—-BEGIN CERTIFICATE—后内容到pem文件</p><p>Makefile添加证书EMBED_TXTFILES “server_root_cert.pem”</p><p>main&#x2F;component.mk添加COMPONENT_EMBED_TXTFILES :&#x3D;server_root_cert.pem</p><h3 id="10、STA-mode-wifi-connect"><a href="#10、STA-mode-wifi-connect" class="headerlink" title="10、STA mode + wifi connect"></a>10、STA mode + wifi connect</h3><p>STA参考：esp-idf&#x2F;examples&#x2F;wifi&#x2F;getting_start&#x2F;station</p><p>STA scan</p><h3 id="11、显示字库图标"><a href="#11、显示字库图标" class="headerlink" title="11、显示字库图标"></a>11、显示字库图标</h3><p>图标–&gt;取模—&gt;数组</p><p>字库：字体文件.TTF—-&gt;LVGL工具：LvglFontTool–&gt;加入常用汉字—&gt;XBF字体，外部bin文件</p><p>字库下载到Flash:</p><ul><li>添加分区（partitions.csv）:storages1, 0x40, 0x01, 0x15D000, 0x2000000</li><li>idf.py menuconfig 修改flash大小为实际大小</li><li>下载字体库到flash：python esptool.py –chip esp32 –port &#x2F;dev&#x2F;ttyUSB0 –baud</li></ul><p> write_flash -z 0x15D000 DesktopScreenFont.bin</p><p>画笔相关实现，将图标文字放在同一个页面</p><h2 id="7、关于ESP-IDF"><a href="#7、关于ESP-IDF" class="headerlink" title="7、关于ESP-IDF"></a>7、关于ESP-IDF</h2><h3 id="1、相关术语："><a href="#1、相关术语：" class="headerlink" title="1、相关术语："></a>1、相关术语：</h3><ol><li><strong>SMP</strong>（对称多处理）；</li><li><strong>ESP-IDF FreeRTOS</strong>：是基于原生 （Vanilla）FreeRTOS v10.5.1 的 FreeRTOS 实现，其中包含支持 SMP 的大量更新。最多支持两个核（即<em>双核</em> SMP），但在设计上对这种场景进行了优化；</li><li><strong>Amazon SMP FreeRTOS</strong>：是由 Amazon 官方支持的 FreeRTOS SMP 实现，能够支持 <em>N 核</em>，即双核以上；</li><li><strong>核亲和性</strong>：尽管 SMP 系统支持线程切换核，但在某些情况下，线程必须或应该仅在特定核上运行。因此，在 SMP 系统中，线程也具备核亲和性，指定线程在哪个特定核上运行；</li><li><strong>PRO_CPU</strong>和<strong>APP_CPU</strong>：核 0 和核 1别名，反映了典型 ESP-IDF 应用程序使用这两个 CPU 的方式。负责处理 Wi-Fi 或蓝牙等协议相关处理程序的任务通常会分配给核 0，而处理应用程序其余部分的任务会分配给核 1；</li><li>任务创建：内存动态&#x2F;静态分配，核亲和性；</li><li><strong>Vanilla FreeRTOS 调度器</strong>：<strong>具有时间分片和固定优先级的抢占式调度器</strong>；</li><li><strong>临界区</strong> (Critical Section)：在 SMP 系统中，仅<strong>禁用中断</strong>并不能构成临界区，因为存在其他核意味着共享资源仍可以同时访问。因此，IDF FreeRTOS 中的临界区使用<strong>自旋锁</strong>实现，自旋锁可以静态或动态分配；</li><li></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 嵌入式开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Type-C</title>
      <link href="/2024/08/30/type-c/"/>
      <url>/2024/08/30/type-c/</url>
      
        <content type="html"><![CDATA[<h1 id="1、参考资料"><a href="#1、参考资料" class="headerlink" title="1、参考资料"></a>1、参考资料</h1><p><a href="https://blog.csdn.net/AirCity123/article/details/103554177">Type-C协议简介（CC检测原理)</a></p><h1 id="2、实际应用"><a href="#2、实际应用" class="headerlink" title="2、实际应用"></a>2、实际应用</h1><h2 id="1、5V取电"><a href="#1、5V取电" class="headerlink" title="1、5V取电"></a>1、5V取电</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Git</title>
      <link href="/2024/07/23/git/"/>
      <url>/2024/07/23/git/</url>
      
        <content type="html"><![CDATA[<p>​<a href="https://www.runoob.com/git/git-tutorial.html">Git 教程 | 菜鸟教程 (runoob.com)</a></p><h1 id="1、-Git-简介"><a href="#1、-Git-简介" class="headerlink" title="1、 Git 简介"></a>1、 Git 简介</h1><p>​Git 是一个开源的<strong>分布式版本控制系统</strong>，用于敏捷高效地处理任何或小或大的项目。Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。Git 与常用的版本控制工具 CVS, Subversion 等不同，它采用了<strong>分布式版本库</strong>的方式，<strong>不必服务器端软件支持</strong>。</p><p>​Git 不仅仅是个版本控制系统，它也是个<strong>内容管理系统</strong>(CMS)，<strong>工作管理系统</strong>等。如果你是一个具有使用 SVN 背景的人，你需要做一定的思想转换，来适应 Git 提供的一些概念和特征。Git 与 SVN 区别点：</p><ul><li><strong>Git 是分布式的，SVN 不是</strong>：这是 Git 和其它非分布式的版本控制系统，例如 SVN，CVS 等，最核心的区别。</li><li><strong>Git 把内容按元数据方式存储，而 SVN 是按文件：</strong>所有的资源控制系统都是把文件的元信息隐藏在一个类似 .svn、.cvs 等的文件夹里。</li><li><strong>Git 分支和 SVN 的分支不同：</strong>分支在 SVN 中一点都不特别，其实它就是版本库中的另外一个目录。</li><li><strong>Git 没有一个全局的版本号，而 SVN 有：</strong>目前为止这是跟 SVN 相比 Git 缺少的最大的一个特征。</li><li><strong>Git 的内容完整性要优于 SVN：</strong>Git 的内容存储使用的是 SHA-1 哈希算法。这能确保代码内容的完整性，确保在遇到磁盘故障和网络问题时降低对版本库的破坏。</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 软件开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TI-RTOS</title>
      <link href="/2024/07/19/ti-rtos/"/>
      <url>/2024/07/19/ti-rtos/</url>
      
        <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/little_grapes/article/details/121484599">电源控制（三种低功耗模式：sleep、stop、standby待机)</a>  </p><h1 id="1、学习"><a href="#1、学习" class="headerlink" title="1、学习"></a>1、学习</h1><h2 id="1、任务"><a href="#1、任务" class="headerlink" title="1、任务"></a>1、任务</h2><p><strong>①创建任务：</strong><br>（1）Task_Handle Task_creat(Task_FuncPtr,const Tak_Param *params,Eror_Blovck *eb);<br>（2）Task_Struct taskStruct;<br>     void Task_construct(Task_Struct *structP,Task_FuncPtr fxn,const Task_Params *params,Error-Block *eb);<br> PS：Task_Handle 与 Task_Struct 可以相互转换<br>    Task_Handle Task_handle(Task_struct *structP);<br>    Task_Struct *Task_struct(Task_Handle handle);<br> TI-RTOS 中不能在中断函数中创建任务<br><strong>②删除任务：</strong><br>（1）Void Task_delete(Task_Handle *handleP); &#x2F;&#x2F;指向任务实例指针<br>（2）Void Task_destruct(Task_Struct *structP);&#x2F;&#x2F;指向任务 Task_Struct 结构指针<br> PS：删除任务之前，一定要将所有占用的资源都释放掉<br><strong>③任务抢占：</strong><br>（1）Key &#x3D; Task_disable();&#x2F;&#x2F;此时任何高优先级任务都无法进行抢占，但是 HWI 和 SWI 仍可以抢占<br>      &#x2F;&#x2F; 临界区代码<br>      ….<br>     Task_restore(key);<br>（2）Void Task_sleep(UInt32 nticks)  &#x2F;&#x2F;系统 tick 数<br>  &#x2F;&#x2F;不要在main()、idle、 Hwi，Swi 和 disable&#x2F;restore 结构中调用<br>（3）Void Task_yield();<br><strong>④更改任务优先级：</strong><br>  Task_setPri();</p><h2 id="2、任务间同步"><a href="#2、任务间同步" class="headerlink" title="2、任务间同步"></a>2、任务间同步</h2><h3 id="1、信号量"><a href="#1、信号量" class="headerlink" title="1、信号量"></a>1、信号量</h3><p>​二值信号量（可用&amp;不可用）或记数信号量。默认为记数信号量（根据实际资源数来确定）</p><p>​semParams.mode &#x3D;（Semaphore_Mode_COUNTING | Semaphore_Mode_BINARY）</p><p>FIFO方式排队<br>                                 |（Semaphore_Mode_COUNTING_PRIORITY | Semaphore_Mode_BINARY_PRIORITY）优先级排队<br>创建、删除信号量：<br>PS:先初始化参数Void Semaphore_Params_init(Semaphore_Params *params);然后设置模式（不设置则默认）<br>（1）Semaphore_Handle Semaphore_create(Int count,Semaphore_Params *attrs,Error_Block *eb);<br>     Void Semaphore_delete(Samaphore_Handle *handleP);<br>（2）Void Semaphore_construct(Semaphore_Struct *structP,Int count,const Semaphore_Params *params);<br>     Void Semaphore_destruct(Semaphore_Struct *structP);<br>（3）Semsphonre_Handle Semaphore_handle(Semaphore_Struct *structP);&#x2F;&#x2F;Semaphore_handle函数从Semaphore_Struct结构中获得Semaphore_Handle信息<br>     Semaphore_Struct *Sempahore_struct(Semaphore_Handle handel);  &#x2F;&#x2F;Semaphore_struct函数从Semaphore_Handle获得Semaphore_Struct结构指针<br>信号申请与释放：<br>（1）Bool Semaphore_pend(Semaphore_Handle handle,UInt32 timeout);&#x2F;&#x2F;申请（timeout&#x3D;BIOS_WAIT_DOREVER一直等待信号量可用；time&#x3D;BIOS_NO_WAIT没有可用信号量，立即返回）<br>（2）Void Semaphore_post(Semaphore_Handle handle);&#x2F;&#x2F;释放<br>（3）Int Semaphore_getCount(Semaphore_Hnadle handle);&#x2F;&#x2F;查询当前信号count值<br>②事件：二值；任务与其它线程 OR 任务与其他SYS&#x2F;BIOS对象（包括信号量、邮箱、消息队列等）之间通信。任务可以等待事件，任务、HWI、SWI或SYS&#x2F;BIOS对象可以发布事件；<br>        对象先注册事件对象。<br>        Event_post()&#x2F;&#x2F;对应ID事件可用<br>        根据andMask OR orMask调用Event_pend()&#x2F;&#x2F;对应ID事件不可用<br>      每个对象实例可管理32个事件<br>        任务才能调用Event_pend();Event_post()所有线程可调用<br>创建&#x2F;删除事件对象：<br>（1）Void Event_construct(Event_Struct *structP, const Event_Params *params);<br>     Void Event_destruct(Event_Struct *structP);<br>（2）Event_Handle Event_create(const Event_Params *params, Error_Block *eb);<br>     Void Event_delete(Event_Handle *handleP);<br>  PS:Event_Handle 与 Event_Struct 结构指针可以相互转换<br>      Event_Handle Event_handle(Event_Struct *structP)<br>      Event_Struct *Event_struct(Event_Handle handle)<br>事件pend&#x2F;post:<br>（1）UInt Event_pend(Event_Handle handle, UInt andMask, UInt orMask, UInt32 timeout);&#x2F;&#x2F;timeout&#x3D;BIOS_WAIT_FOREVER|具体时间|BIOS_NO_WAIT<br>（2）Void Event_post(Event_Handle handle, UInt eventMask);&#x2F;&#x2F;多个事件可以通过“+”或“|”进行连接<br>（3）UInt Event_getPostedEvents(Event_Handle handle);<br>③队列： 双向链接列表：Queue_next 或 Queue_prev 的调用可以在 Queue 上连续循环。修改队列前禁用中断的API：”原子”；不禁用中断的API:”非原子的”<br>队列创建&#x2F;删除：<br>     先初始化参数：Void Queue_Params_init(Queue_Params *params)<br>（1）Queue_Handle Queue_create(const Queue_Params *params, Error_Block *eb);<br>     Void Queue_delete(Queue_Handle *handleP);<br>（2）Void Queue_construct(Queue_Struct *structP, const Queue_Params *params);<br>     Void Queue_destruct(Queue_Struct *structP);<br>  PS：Queue_Handle 与 Queue_Struct 结构进行互相转换：<br>      Queue_Handle Queue_handle(Queue_Struct *structP)；Queue_Struct *Queue_struct(Queue_Handle handle)<br>队列操作：<br>（1）Void Queue_enqueue(Queue_Handle handle, Queue_Elem *elem);&#x2F;&#x2F;将指定的元素加入到队列后面<br>（2）Ptr Queue_dequeue(Queue_Handle handle);&#x2F;&#x2F;从队列上删除第一个元素并返回(返回值为指向元素的指针)（调用 Queue_dequeue()之前，使用Queue_empty()进行判断，再决定是否调用 Queue_dequeue()）<br>（3）Bool Queue_empty(Queue_Handle handle)<br>（4）Ptr Queue_head(Queue_Handle handle);&#x2F;&#x2F;返回指向队列第一个元素的指针;调用 Queue_head ()之前，使用 Queue_empty()进行判断，再决定是否调用 Queue_head()<br>遍历队列：<br>（1）Ptr Queue_prev(Queue_Elem *qelem);&#x2F;&#x2F;数返回 qelem(队列中的元素指针)之前元素指针。<br>（2）Ptr Queue_next(Queue_Elem *qelem);&#x2F;&#x2F;返回 qelem 之后元素指针<br>插入删除元素：<br>（1）Void Queue_insert(Queue_Elem *qelem, Queue_Elem *elem);&#x2F;&#x2F;将 elem 元素插入到 qelem 元素的前面<br>（2）Void Queue_remove(Queue_Elem *qelem);&#x2F;&#x2F;从队列中删除指定的元素<br>④邮箱：<br>邮箱创建&#x2F;删除：<br>    Void Mailbox_Params_init(Mailbox_Params *params);&#x2F;&#x2F;初始化邮箱参数<br>（1）Mailbox_Handle Mailbox_create(SizeT msgSize, UInt numMsgs, const Mailbox_Params *params, Error_Block *eb);&#x2F;&#x2F;空间大小为（msgSize * numMsgs）<br>     Void Mailbox_delete(Mailbox_Handle *handleP)<br>（2）Void Mailbox_construct(Mailbox_Struct *structP, SizeT msgSize, UInt numMsgs, constMailbox_Params *params, Error_Block *eb)<br>     Void Mailbox_destruct(Mailbox_Struct *structP)<br>邮件发送&#x2F;接受：<br>（1）Bool Mailbox_pend(Mailbox_Handle handle, Ptr msg, UInt32 timeout);&#x2F;&#x2F;将邮箱第一个消息拷贝出来<br>（2）Bool Mailbox_post(Mailbox_Handle handle, Ptr msg, UInt32 timeout);&#x2F;&#x2F;将消息拷贝到邮箱(提前检查是否有空位)<br>  SizeT Mailbox_getMsgSize(Mailbox_Handle handle);&#x2F;&#x2F;邮箱对象单个消息所占用的空间大小<br>  Int Mailbox_getNumFreeMsgs(Mailbox_Handle handle);&#x2F;&#x2F;邮箱对象当前空闲消息个数<br>  Int Mailbox_getNumPendingMsgs(Mailbox_Handle handle);&#x2F;&#x2F;邮箱对象当前内部消息个数，即被占用了多少个消息<br>三、HWI<br>四、SWI<br>五、门：设备禁止并发访问临界区代码<br>        Gate_enter()返回的 key 被传给 Gate_leave()，抢占才会恢复<br>七、时间服务：<br>            ti.sysbios.knl.Clock模块<br>            ti.sysbios.hal,Timer模块<br>            ti.sysbios.hal.Seconds模块<br>   SYS&#x2F;BIOS中，系统 Clock 管理所有的时间服务；tick 周期决定系统的心跳；Clock.tickPeriod 时间单位是微秒</p><h2 id="3、RTOS-典型线程：ISR中断服务例程、任务、idle空闲"><a href="#3、RTOS-典型线程：ISR中断服务例程、任务、idle空闲" class="headerlink" title="3、RTOS(典型线程：ISR中断服务例程、任务、idle空闲)"></a>3、<a href="https://blog.csdn.net/Chase_xkx/article/details/127227335">RTOS(典型线程：ISR中断服务例程、任务、idle空闲)</a></h2><p><strong>调度进程</strong>：抢占(Preempted)式（正在运行的线程将一直持续到：①完成；②较高优先级的线程准备就绪；③线程在等待资源时放弃处理器）、时间片  （每一线程都有要执行的槽）</p><p><strong>线程安全</strong>：一段代码以保证多个线程同时正确访问（读取、写入）的方式操作共享数据结构，则该代码段是线程安全的。</p><p><strong>Blocked</strong>: 任务正在等待资源且未消耗任何CPU，则阻止该任务。</p><p><strong>裸机</strong>：初始化、超级循环状态机、ISR  </p><p><strong>软实时与硬实时</strong>:尽可能快地完成&amp;规定的时间内必须完成</p><p><strong>实时操作系统组件</strong>：计划进程：保证最高优先级线程正在运行的抢占式计划进程。</p><p><strong>通信机制</strong>：<strong>信号量</strong>、<strong>消息队列</strong>、队列等。<br>关键区域机制：互斥体、门、锁等。<br>​计时服务：时钟、定时器等。<br>​电源管理：对于低功耗设备，电源管理通常是RTOS的一部分，因为它知道设备的状态。<br>内存管理：可变大小的堆、固定大小的堆等。<br>​外设驱动器：UART、SPI、I2C等。<br>​协议栈：蓝牙、无线网络等。<br>​文档系统：FatFs等。<br>​设备管理：异常处理、启动等。    </p><p><strong>POSIX</strong>（Portable Operating System Interface）：可移植操作系统接口。是一个操作系统兼容性层，允许应用进程在操作系统之间轻松移植。  </p>]]></content>
      
      
      
        <tags>
            
            <tag> RTOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言</title>
      <link href="/2024/07/19/c-yu-yan/"/>
      <url>/2024/07/19/c-yu-yan/</url>
      
        <content type="html"><![CDATA[<p>​<a href="https://blog.csdn.net/weixin_43831728/article/details/104537195?spm=1001.2101.3001.6650.1&utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-1-104537195-blog-126960941.235%5Ev38%5Epc_relevant_sort&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-1-104537195-blog-126960941.235%5Ev38%5Epc_relevant_sort&utm_relevant_index=2"> 《C和指针》总结</a>  </p><p>​<a href="https://blog.51cto.com/u_14114084/3652776">#Pragma Pack(n)内存分配</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 嵌入式开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电子产品外壳制作-Solidworks</title>
      <link href="/2024/07/14/dian-zi-chan-pin-wai-ke-zhi-zuo-solidworks/"/>
      <url>/2024/07/14/dian-zi-chan-pin-wai-ke-zhi-zuo-solidworks/</url>
      
        <content type="html"><![CDATA[<h1 id="1、学习"><a href="#1、学习" class="headerlink" title="1、学习"></a>1、学习</h1><p><a href="https://www.bilibili.com/video/BV1DW4y1K7Ww?p=1&vd_source=c2fe15d5282e5de556b5fccfc70e9600">宣导课：一起设计桌面小屏幕外壳！_哔哩哔哩_bilibili</a></p><h2 id="1、绘制屏幕"><a href="#1、绘制屏幕" class="headerlink" title="1、绘制屏幕"></a>1、绘制屏幕</h2><ul><li>系统设置–&gt;草图–&gt;选中<strong>在创建草图以及编辑草图时自动旋转试图以垂直于草图基准面</strong>;</li><li>系统设置–&gt;外部参考–&gt;选中当编辑装配体时，<strong>允许零件具有多个关联</strong>；</li><li>根据手册和实际测量绘制简易屏幕零件</li><li>绘制显示区域：平面上绘制草图–&gt;<strong>包覆</strong>（刻画、样条曲线、选择包覆草图的面），设置面的颜色。</li><li>边线提取到草图：<strong>转换实体引用</strong>–&gt;选中边线–&gt;包覆；</li></ul><h2 id="2、绘制电池"><a href="#2、绘制电池" class="headerlink" title="2、绘制电池"></a>2、绘制电池</h2><ul><li>简化电池，绘制截面–&gt;<strong>拉伸凸台</strong>；</li><li>批量添加圆角：<strong>线架图</strong>模式–&gt;框选所有边线–&gt;<strong>圆角</strong>;</li><li>添加电线：<strong>参考几何体</strong>–&gt;<strong>基准面</strong>，找到合适的基准面；草图绘制一段圆弧–&gt;<strong>扫描</strong>(圆形轮廓)；<strong>线性阵列</strong>复制另一条电线，绘制完毕可以隐藏基准面；</li></ul><h2 id="3、导入电路板"><a href="#3、导入电路板" class="headerlink" title="3、导入电路板"></a>3、导入电路板</h2><ul><li>导出STEP文件</li><li>另存为SLDPRT零件格式文件，打开时不进行特征识别；</li></ul><h2 id="4、简单装配"><a href="#4、简单装配" class="headerlink" title="4、简单装配"></a>4、简单装配</h2><ul><li>新建装配体，导入零件；</li><li><strong>配合</strong>，标准、高级（<strong>宽度配合</strong>可实现左右等宽）；</li><li>设计外壳，画草稿：</li></ul><p><a href="https://imgse.com/i/pkTuxsS"><img src="https://s21.ax1x.com/2024/07/19/pkTuxsS.md.webp" class="lazyload placeholder" data-srcset="https://s21.ax1x.com/2024/07/19/pkTuxsS.md.webp" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="pkTuxsS.md.webp"></a></p><h2 id="5、绘制前壳"><a href="#5、绘制前壳" class="headerlink" title="5、绘制前壳"></a>5、绘制前壳</h2><ul><li>在装配体中，<strong>插入零部件</strong>–&gt;<strong>新零件</strong>;</li><li><strong>拉伸切除</strong>绘制前面板，画屏幕槽（屏幕–&gt;<strong>转换实体引用</strong>–&gt;作为构造线–&gt;<strong>等距实体</strong>，0.1mm）；</li><li>面板增加圆角，<strong>轮廓</strong>–&gt;<strong>曲率连续</strong>；</li><li>增加前壳厚度，前壳背面–&gt;草图绘制–&gt;<strong>转换实体引用</strong>–&gt;<strong>拉伸凸台</strong>（薄壁特征，成形到一面）；</li><li>边线圆角处理；</li></ul><h2 id="6、绘制压板"><a href="#6、绘制压板" class="headerlink" title="6、绘制压板"></a>6、绘制压板</h2><ul><li>新建零件，绘制压板</li><li>检查干涉， （通过剖片视图检查电路板上最高元件），解决干涉（切除）；</li><li>绘制屏幕排线，检查干涉（<strong>孤立</strong>）；</li><li>绘制压板与电路板的支撑，并限制电路板位置；</li></ul><h2 id="7、绘制后壳、螺丝孔"><a href="#7、绘制后壳、螺丝孔" class="headerlink" title="7、绘制后壳、螺丝孔"></a>7、绘制后壳、螺丝孔</h2><ul><li>新建后壳零件—&gt;点击前壳背面进入草图–&gt;<strong>转换实体引用</strong>–&gt;选择前壳合适的面—&gt;拉伸凸台—&gt;后壳背部圆角</li><li>选型合适的螺丝(2mm沉头自攻螺丝)—&gt;编辑后壳–&gt;<strong>异性孔向导</strong>（锥形沉头孔、GB、开槽半沉头木螺钉、M2、紧密、完全贯穿）–&gt;确定孔位置(辅助矩形)</li><li>绘制前壳螺丝底孔：前壳背部草图绘制两个同心圆（底孔1.8mm@M2）–&gt;<strong>裁剪实体</strong>裁剪干涉部分–&gt;拉伸；</li><li>生成螺丝：<strong>迈迪工具集</strong>生成&#x2F;自绘；迈迪:标准件库–&gt;通用标准件库，可以修改螺丝参数；</li><li>抽壳，留出放置电池槽：（<strong>退回条</strong>退回异性孔特征）–&gt;<strong>抽壳</strong>–&gt;退回条恢复（此时导致孔轮廓异常）–&gt;草图拉伸（<strong>父子关系解决</strong>：先依赖，再取消依赖，选中使固定）—&gt;退回条退回异性孔特征–&gt;<strong>凸台拉伸</strong>（<strong>成形到实体</strong>）—&gt;退回恢复</li></ul><h2 id="8、绘制支架"><a href="#8、绘制支架" class="headerlink" title="8、绘制支架"></a>8、绘制支架</h2><ul><li>选轴@M2不锈钢<strong>滚花销轴</strong></li><li>在后壳面上新建零件—&gt;选中支架槽面—&gt;转换实体引用—&gt;拉伸凸台–&gt;圆角；</li><li>装配体中新建零件都有<strong>在位配合</strong>（删除即可）–&gt;使固定</li></ul><h2 id="9、生产组装"><a href="#9、生产组装" class="headerlink" title="9、生产组装"></a>9、生产组装</h2><ul><li>3D打印</li><li>喷漆（厚度会怎加）</li></ul><h1 id="2、常用操作及常见问题解决"><a href="#2、常用操作及常见问题解决" class="headerlink" title="2、常用操作及常见问题解决"></a>2、常用操作及常见问题解决</h1><ol><li>草图绘制时鼠标到原点不凸显：设置–&gt;草图–&gt;几何关系&#x2F;捕捉–&gt;激活捕捉；</li><li>评估–&gt;测量；</li><li>3D打印制造最薄厚度<strong>0.8mm</strong>；</li><li>装配要留有制造误差eg: 0.1mm@3D打印；</li><li></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 机械设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ExpressLRS</title>
      <link href="/2024/07/14/expresslrs/"/>
      <url>/2024/07/14/expresslrs/</url>
      
        <content type="html"><![CDATA[<h1 id="1、ELRS工程编译及固件下载"><a href="#1、ELRS工程编译及固件下载" class="headerlink" title="1、ELRS工程编译及固件下载"></a>1、ELRS工程编译及固件下载</h1><p><em><strong>参考：</strong></em><a href="https://blog.csdn.net/lida2003/article/details/132518813">ExpressLRS开源之接收机固件编译烧录步骤_elrs configurator-CSDN博客</a></p><p>​vscode+platformIO+Arduino框架，本次使用<strong>ExpressLRS-3.3.2</strong>版本，分别编译了DIY-915-ESP32-TX（开源硬件）、DIY-915-esp8285-RX（开源硬件）、BETAFPV-915-RX（eps8285）。</p><ul><li><p>DIY-915-ESP32-TX修改了<code>DIY 900 E19.json</code>中<code>&quot;misc_fan_en&quot;: 4,  &quot;led_green&quot;: 27</code>;</p></li><li><p>DIY-915-esp8285-RX修改了<code>Generic 900.json</code>中<code>&quot;radio_dio1&quot;: 5</code>为<code>&quot;power_rxen&quot;: 5</code>（应为E32模块收发控制改为外部引脚控制）；</p></li><li><p>最好在外网情况下编译，固件烧录出错可以使用<code>flash_download_tool</code>进行全片擦除，或者用该工具烧录编译生成的固件，如下图：</p><p><a href="https://imgse.com/i/pkozHlq"><img src="https://s21.ax1x.com/2024/07/19/pkozHlq.md.webp" class="lazyload placeholder" data-srcset="https://s21.ax1x.com/2024/07/19/pkozHlq.md.webp" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="pkozHlq.md.webp"></a></p></li></ul><h1 id="2、常见问题"><a href="#2、常见问题" class="headerlink" title="2、常见问题"></a>2、常见问题</h1><ol><li>elrs接收机开启SBUS输出飞控无反馈：在TX与飞控RX间串联1K电阻；</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 航模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>esp32s3</title>
      <link href="/2024/07/13/esp32s3/"/>
      <url>/2024/07/13/esp32s3/</url>
      
        <content type="html"><![CDATA[<h1 id="1、乐鑫ESP32S3"><a href="#1、乐鑫ESP32S3" class="headerlink" title="1、乐鑫ESP32S3"></a>1、乐鑫ESP32S3</h1><ol><li><a href="https://www.espressif.com.cn/zh-hans/products/socs/esp32-s3">ESP32-S3 Wi-Fi &amp; BLE 5 SoC｜乐鑫科技 (espressif.com.cn)</a></li><li><a href="https://docs.espressif.com/projects/esp-idf/zh_CN/stable/esp32s3/get-started/index.html">快速入门 - ESP32-S3 - — ESP-IDF 编程指南 v5.2.2 文档 (espressif.com)</a></li></ol><h1 id="2、立创-esp32s3R8N8开发板"><a href="#2、立创-esp32s3R8N8开发板" class="headerlink" title="2、立创-esp32s3R8N8开发板"></a>2、立创-esp32s3R8N8开发板</h1><p><a href="https://lceda001.feishu.cn/wiki/PICgwjcDsiN7TjkWw5tc3OzbnHb">【立创·ESP32S3R8N8】开发板 - 飞书云文档 (feishu.cn)</a></p><h1 id="3、合宙-esp32s3开发板"><a href="#3、合宙-esp32s3开发板" class="headerlink" title="3、合宙-esp32s3开发板"></a>3、合宙-esp32s3开发板</h1><p><a href="https://wiki.luatos.com/chips/esp32s3/index.html">📡 ESP32-S3 - LuatOS 文档</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 嵌入式开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux常用命令及树莓派使用</title>
      <link href="/2024/07/11/linux-chang-yong-ming-ling-ji-shu-mei-pai-shi-yong/"/>
      <url>/2024/07/11/linux-chang-yong-ming-ling-ji-shu-mei-pai-shi-yong/</url>
      
        <content type="html"><![CDATA[<h1 id="1、树莓派"><a href="#1、树莓派" class="headerlink" title="1、树莓派"></a>1、树莓派</h1><h2 id="1、常用命令"><a href="#1、常用命令" class="headerlink" title="1、常用命令"></a>1、常用命令</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查看树莓派信息</span></span><br><span class="line"><span class="number">1.</span> pinout</span><br><span class="line"><span class="number">2.</span> cat /proc/device-tree/model</span><br><span class="line"></span><br><span class="line"><span class="comment">//查看cpu</span></span><br><span class="line"><span class="number">1</span>、cat /proc/cpuinfo</span><br><span class="line"></span><br><span class="line"><span class="comment">//打印温度</span></span><br><span class="line"><span class="number">1</span>、echo $[$(cat /sys/class/thermal/thermal_zone0/temp)/<span class="number">1000</span>]</span><br></pre></td></tr></table></figure><h2 id="2、树莓派使用摄像头"><a href="#2、树莓派使用摄像头" class="headerlink" title="2、树莓派使用摄像头"></a>2、树莓派使用摄像头</h2><p>[微雪电子RPi Camera V2](<a href="https://www.waveshare.net/wiki/RPi_Camera_V2#.E8.BD.AF.E4.BB.B6.E9.85.8D.E7.BD.AE">RPi Camera V2 - Waveshare Wiki</a>)</p><h2 id="3、安装中文输入法"><a href="#3、安装中文输入法" class="headerlink" title="3、安装中文输入法"></a>3、安装中文输入法</h2><p><a href="https://blog.csdn.net/f245775274/article/details/136246989?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522172053845616800225522603%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=172053845616800225522603&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-136246989-null-null.142%5Ev100%5Epc_search_result_base9&utm_term=%E6%A0%91%E8%8E%93%E6%B4%BE%E6%80%8E%E4%B9%88%E5%AE%89%E8%A3%85%E4%B8%AD%E6%96%87%E8%BE%93%E5%85%A5%E6%B3%95&spm=1018.2226.3001.4187">树莓派怎么安装中文输入法</a></p><h2 id="4、文件传输"><a href="#4、文件传输" class="headerlink" title="4、文件传输"></a>4、文件传输</h2><h3 id="1、FTP"><a href="#1、FTP" class="headerlink" title="1、FTP"></a>1、FTP</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">FTP</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装vsftpd服务器</span></span><br><span class="line">sudo apt-get install vsftpd</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动ftp服务</span></span><br><span class="line">sudo service vsftpd start </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重启</span></span><br><span class="line">sudo reboot</span><br></pre></td></tr></table></figure><p><em><strong>ps</strong></em>: <a href="https://blog.csdn.net/u014691333/article/details/115227957">ftp上传文件出错：550 Permission denied</a></p><h3 id="2、-Samba"><a href="#2、-Samba" class="headerlink" title="2、 Samba"></a>2、 Samba</h3><p><a href="https://developer.baidu.com/article/details/3248075">树莓派上的Samba NAS系统：搭建步骤与实用指南</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install samba</span><br><span class="line">sudo gedit /etc/samba/smb.conf</span><br><span class="line">#末尾添加</span><br><span class="line">[share]</span><br><span class="line">comment = samba home directory</span><br><span class="line">path = /home/xxx/xxx</span><br><span class="line">public = yes</span><br><span class="line">browseable = yes</span><br><span class="line">read only = no</span><br><span class="line">writable = yes</span><br><span class="line">create mask = 0777</span><br><span class="line">directory mask = 0777</span><br><span class="line">available = yes</span><br><span class="line">security = share</span><br><span class="line">#重启</span><br><span class="line">sudo service smbd restart</span><br><span class="line">sudo ufw allow samba</span><br></pre></td></tr></table></figure><p>windows系统此电脑—右击—&gt;映射网络驱动器</p><h3 id="3、ssh"><a href="#3、ssh" class="headerlink" title="3、ssh"></a>3、ssh</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装</span></span><br><span class="line">sudo apt-get install openssh-server</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看是否开启</span></span><br><span class="line">ps -e|grep ssh</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">开启服务</span></span><br><span class="line">sudo /etc/init.d/ssh start</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">root登录ssh</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">给root设置密码</span></span><br><span class="line">sudo passwd root   #此时可切换root权限:su  #退出root:exit</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">root登录提示权限问题，修改:</span> </span><br><span class="line">vim etc/ssh/sshd_config</span><br><span class="line">PermitRootLogin yes</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">重启ssh</span></span><br><span class="line">sudo /etc/init.d/ssh restart</span><br></pre></td></tr></table></figure><p>vscode安装Remote-SSH插件，配置config文件</p><h2 id="5、OELD显示"><a href="#5、OELD显示" class="headerlink" title="5、OELD显示"></a>5、OELD显示</h2><ul><li><p><strong>–</strong>&gt;<a href="https://github.com/rm-hull/luma.examples">luma.examples</a></p></li><li><p><a href="https://blog.csdn.net/2202_75762088/article/details/134625775">进阶篇——树莓派OLED模块的使用 大量例程详解</a></p></li><li><p><a href="https://blog.csdn.net/2202_75762088/article/details/134625775">解决运行pip install时提示错误：error: externally-managed-environment</a>, 使用&#96;&#96;&#96;sudo apt-get install python-luma.oled解决;</p></li></ul><h2 id="6、开机自动运行python脚本"><a href="#6、开机自动运行python脚本" class="headerlink" title="6、开机自动运行python脚本"></a>6、开机自动运行python脚本</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/rc.local</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">在exit0前增加一行</span></span><br><span class="line">sudo python3 /home/pi/stats.py &amp;</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/qq_43698730/article/details/121323743">树莓派开机自动运行python程序的两种方式</a></p><h1 id="2、Linux常用命令"><a href="#2、Linux常用命令" class="headerlink" title="2、Linux常用命令"></a>2、Linux常用命令</h1><p><a href="https://wwww.linuxcool.com/">Liunx命令大全</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查看IP地址</span></span><br><span class="line"><span class="number">1</span>、hostname -I</span><br><span class="line"></span><br><span class="line"><span class="comment">//监控系统信息</span></span><br><span class="line"><span class="number">1</span>、top</span><br><span class="line"><span class="number">2</span>、htop</span><br><span class="line"></span><br><span class="line"><span class="comment">//安装.deb文件</span></span><br><span class="line"><span class="number">1</span>、sudo dpkg -i xxxxx.deb</span><br><span class="line"></span><br><span class="line"><span class="comment">//卸载.deb文件</span></span><br><span class="line"><span class="number">1</span>、sudo dpkg -r xxxxx</span><br><span class="line"></span><br><span class="line"><span class="comment">//查看已安装.deb文件（过滤:含&quot;a&quot;的文件）</span></span><br><span class="line"><span class="number">1</span>、sudo dpkg -l|grep <span class="string">&quot;a&quot;</span></span><br></pre></td></tr></table></figure><h1 id="3、树莓派小电脑"><a href="#3、树莓派小电脑" class="headerlink" title="3、树莓派小电脑"></a>3、树莓派小电脑</h1><p>​树莓派4B4GV1.2，7寸ISP无触摸屏幕，树莓派官方桌面版带推荐软件版本。</p><p><a href="https://imgtu.com/i/cXqGPU"><img src="https://z3.ax1x.com/2021/04/23/cXqGPU.md.jpg" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/04/23/cXqGPU.md.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="cXqGPU.md.jpg" style="zoom: 150%;" /></a></p><p><a href="https://imgtu.com/i/cXq0Vx"><img src="https://z3.ax1x.com/2021/04/23/cXq0Vx.md.jpg" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/04/23/cXq0Vx.md.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="cXq0Vx.md.jpg" style="zoom:150%;" /></a></p><p><a href="https://imgtu.com/i/cXqDIK"><img src="https://z3.ax1x.com/2021/04/23/cXqDIK.md.jpg" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/04/23/cXqDIK.md.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="cXqDIK.md.jpg" style="zoom:150%;" /></a></p><h1 id="4、双系统"><a href="#4、双系统" class="headerlink" title="4、双系统"></a>4、双系统</h1><h2 id="1、系统分区"><a href="#1、系统分区" class="headerlink" title="1、系统分区"></a>1、系统分区</h2><p>​若存储空间充足且为大容量硬盘时，可以将安装Linux_Ubuntu系统的硬盘分区为四个分区，分别为<strong>efi</strong>（Ubuntu系统引导区）、<strong>swap</strong>（内存交换空间，内存数据溢出或计算机准备休眠时会将数据存入该区）、<strong>ext4.&#x2F;<strong>（Ubuntu根部挂载点，可以对比理解为Windows系统下的C系统盘）、</strong>ext4.&#x2F;home</strong>（Ubuntu根部子挂载点，用于存放用户数据，可以对比理解为Windows系统下的非系统盘）。</p><p>​参考：<a href="https://blog.csdn.net/Jcb1906824038/article/details/134950127">Windows&#x2F;Linux双系统安装（双系统独立分盘）-CSDN博客</a></p><h2 id="2、双系统删除一个系统"><a href="#2、双系统删除一个系统" class="headerlink" title="2、双系统删除一个系统"></a>2、双系统删除一个系统</h2><p>​删除系统分区（包括该系统对应的EFI引导）。</p><p>​参考：<a href="https://blog.csdn.net/lele_god/article/details/109046860">Windows+Ubuntu双系统如何彻底删除Ubuntu操作系统_win和ubuntu系统怎么删除ubuntu系统-CSDN博客</a></p><h1 id="5、虚拟机"><a href="#5、虚拟机" class="headerlink" title="5、虚拟机"></a>5、虚拟机</h1><p>​参考：<a href="https://blog.csdn.net/KRISNAT/article/details/124100113">超详细VMware安装Ubuntu虚拟机步骤_vmware虚拟机安装ubuntu教程-CSDN博客</a></p><p>​<a href="https://blog.csdn.net/qq_27462573/article/details/130484723">电脑本机连了VPN 在虚拟机中没有连接 如何虚拟机共享主机VPN连接-CSDN博客</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>内存管理-堆栈</title>
      <link href="/2024/07/05/nei-cun-guan-li-dui-zhan/"/>
      <url>/2024/07/05/nei-cun-guan-li-dui-zhan/</url>
      
        <content type="html"><![CDATA[<h1 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h1><ul><li>The data stored on the stack is static, of fixed size, and a fixed life cycle, and cannot be referenced across the stack.</li><li>The data stored on the heap is dynamic, not fixed size, not fixed life cycle, and can be referensced across stacks.</li></ul><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ol><li><a href="https://webdeveloper.beehiiv.com/p/memory-management-every-programmer-know">Memory Management Every Developer Should Know</a></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 计算机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客搭建</title>
      <link href="/2023/12/24/hexo-bo-ke-da-jian/"/>
      <url>/2023/12/24/hexo-bo-ke-da-jian/</url>
      
        <content type="html"><![CDATA[<h1 id="1、背景-目标"><a href="#1、背景-目标" class="headerlink" title="1、背景&amp;目标"></a>1、背景&amp;目标</h1><p>由于很长时间没有记录、更换github账号、本地电脑重置、使用的<a href="https://blinkfox.github.io/">主题</a>有所更新等原因，<a href="https://xuzhiwei-create.github.io/">原来的博客</a>显得有点杂乱，所以趁空闲时间重新做一下，正好经过一段时间学习，对相关概念有了更深的了解。</p><p>​<strong>Hexo</strong> 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。Hexo基于Node.js，支持多进程，几百篇文章也可以秒生成。 支持GitHub Flavored Markdown和所有Octopress的插件。 Hexo支持EJS、Swig和Stylus。通过插件支持Haml、Jade和Less。</p><p>​之前第一次搭建的博客总结：</p><p>​首先电脑上下载，git和node（版本不要太高12.几的就可以了），在本地建立一个文件夹，用来放置要部署到github上的内容，新建github仓库，注意命名规范（与用户名一致.github.io),执行hexo命令（hexo new””新建博客，hexo g生成博客，hexo s 本地预览，hexo d部署到github）博客文件存在sourse文件夹的post中，接下来就可以根据自己的喜好，安装相关功能，博客的配置文件为根目录下的config.yml文件，主题的配置文件为根目录下的themes文件夹中的config.yml文件（不要搞混），这里我选用的是next主题方案。</p><p>[<img src="https://z3.ax1x.com/2021/04/11/c0sRAI.md.png" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/04/11/c0sRAI.md.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="c0sRAI.md.png" style="zoom:150%;" /></p><h1 id="2、参考-工具"><a href="#2、参考-工具" class="headerlink" title="2、参考&amp;工具"></a>2、参考&amp;工具</h1><ol><li><p><a href="https://hexo.io/zh-cn/">Hexo框架</a></p></li><li><p><a href="https://blinkfox.github.io/2018/09/28/qian-duan/hexo-bo-ke-zhu-ti-zhi-hexo-theme-matery-de-jie-shao/">Hexo主题之hexo-theme-matery的介绍</a></p></li><li><p><a href="https://zhuanlan.zhihu.com/p/60578464">使用 Hexo+GitHub 搭建个人免费博客教程</a></p></li><li><p><a href="https://imgse.com/">路过图床:imgse</a>@<a href="mailto:&#120;&#x75;&#x7a;&#x68;&#105;&#x77;&#101;&#x69;&#x72;&#x6f;&#x40;&#x31;&#x36;&#51;&#46;&#x63;&#x6f;&#x6d;">&#120;&#x75;&#x7a;&#x68;&#105;&#x77;&#101;&#x69;&#x72;&#x6f;&#x40;&#x31;&#x36;&#51;&#46;&#x63;&#x6f;&#x6d;</a> —&gt; 使用picGo+gitee建立图床<a href="https://blog.csdn.net/duleilewuhen/article/details/139478827">利用 PicGo 搭建基于 gitee 的个人图床，详细攻略！_picgo gitee-CSDN博客</a></p></li></ol><p>开始准备将Hexo静态博客部署在gitee的gitpage上。</p><p><a href="https://imgse.com/i/pkozwwD"><img src="https://s21.ax1x.com/2024/07/19/pkozwwD.md.webp" class="lazyload placeholder" data-srcset="https://s21.ax1x.com/2024/07/19/pkozwwD.md.webp" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="pkozwwD.md.webp"></a></p><p>但是经过了解，除了访问速度快外，存在很多缺陷，还要实名认真。以下是几种方案对比</p><p><a href="https://imgse.com/i/pkozdeO"><img src="https://s21.ax1x.com/2024/07/19/pkozdeO.md.webp" class="lazyload placeholder" data-srcset="https://s21.ax1x.com/2024/07/19/pkozdeO.md.webp" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="pkozdeO.md.webp"></a></p><h1 id="3、在树莓派上搭建hexo博客"><a href="#3、在树莓派上搭建hexo博客" class="headerlink" title="3、在树莓派上搭建hexo博客"></a>3、在树莓派上搭建hexo博客</h1><ol><li><p>安装git，安装nodejs（内部含npm）;</p></li><li><p>git连接Github;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;GitHub 用户名&quot;</span><br><span class="line">git config --global user.email &quot;GitHub 邮箱&quot;</span><br></pre></td></tr></table></figure></li><li><p>创建SSH密钥<code>ssh-keygen -t rsa -C &quot;GitHub 邮箱&quot;</code>，添加公钥<code>id_rsa.pub</code>到Github，测试SSH是否连接成功<code>ssh -T git@github.com</code>；</p></li><li><p>创建Github仓库，仓库名<code>用户名.github.io</code>;</p></li><li><p>本地安装Hexo博客</p></li></ol><ul><li><p><strong>PS</strong>: npm速度慢（两种方法，推荐第一种）</p><ol><li>换源:<code> npm config set registry https://registry.npmmirror.com</code>。（<strong>nrm是npm源管理器</strong>，安装nrm：<code>npm install -g nrm</code>，查看可选源：<code>nrm ls</code>,测试源：<code>nrm test</code>,切换源：<code>nrm use xxx(eg.taobao)</code>）</li><li>用cnpm替换npm：<code>sudo npm install -g cnpm --registry=https://registry.npm.taobao.org</code></li></ol></li><li><p><strong>操作步骤</strong>：</p><ol><li><p>安装hexo博客<code>sudo npm install -g hexo-cli</code></p></li><li><p>初始化（在博客空文件夹中）<code>hexo init</code>并安装组件<code>npm install</code></p></li><li><p>测试，启动本地服务器预览<code>hexo generate</code> <code>hexo server</code></p></li><li><p>部署Hexo到Github Pages上。</p><ul><li><p>安装hexo-deployer-git <code>npm install hexo-deployer-git --save</code></p></li><li><p>修改_config.yml文件末尾deploy内容</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">&#x27;git&#x27;</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">git@github.com:former-south-wind/former-south-wind.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure></li><li><p>部署<code>hexo deployer</code></p></li></ul></li></ol></li></ul><h1 id="4、主题"><a href="#4、主题" class="headerlink" title="4、主题"></a>4、主题</h1><p>  <a href="https://hexo-theme-bamboo.netlify.app/">Bamboo</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>本科毕设--基于STM32/Jetson平台的无人机目标跟踪</title>
      <link href="/2022/11/04/ben-ke-bi-she-ji-yu-stm32-jetson-ping-tai-de-wu-ren-ji-mu-biao-gen-zong/"/>
      <url>/2022/11/04/ben-ke-bi-she-ji-yu-stm32-jetson-ping-tai-de-wu-ren-ji-mu-biao-gen-zong/</url>
      
        <content type="html"><![CDATA[<h1 id="1、资料"><a href="#1、资料" class="headerlink" title="1、资料"></a>1、资料</h1><p><a href="https://bbs.csdn.net/topics/607199151?utm_source=702048761">我的NVIDIA开发者之旅——Jetson平台上基于YOLOV5-TRT-DeepSort目标检测跟踪应用</a></p><p><a href="https://zhuanlan.zhihu.com/p/520887006">使用高速视觉反馈的无人机自主目标跟踪</a></p><p>亚博智能</p><p><a href="https://www.jianshu.com/p/a9579f469f84">SLAM系列</a></p><p><a href="https://www.cnblogs.com/jins-note/p/10215511.html">KCF跟踪算法原理 入门详解</a><br>无人机与飞控协议<br><a href="https://space.bilibili.com/453020436">UP主：OpenJetson</a><br>**UP：晨哥搞飞机<br><a href="https://blog.csdn.net/qq_45589658/article/details/109440786">CIFAR100数据集介绍及使用方法</a><br><a href="http://link.zhihu.com/?target=https://kns.cnki.net/KCMS/detail/detail.aspx?dbcode=CMFD&dbname=CMFDTEMP&filename=1019626215.nh&v=MDMxMzNwRWJQSVI4ZVgxTHV4WVM3RGgxVDNxVHJXTTFGckNVUjdxZlp1ZG9GeTNuVkw3TVZGMjZGN1c2R05QTnE=">基于深度学习的无人机单目标识别与跟踪算法研究</a><br><a href="https://www.bilibili.com/video/av68085629/?vd_source=c2fe15d5282e5de556b5fccfc70e9600">jetson nano 控制大疆tello 实现无人机追逐目标</a><br>可以租英伟达GPU</p><h1 id="2、实际操作"><a href="#2、实际操作" class="headerlink" title="2、实际操作"></a>2、实际操作</h1><p><a href="https://gitee.com/an-qianjun/kcf-algorithm-uav-tracking">KCF系列算法无人机跟踪: 自己搭建的无人机跟踪实验，主要讲软件，硬件的需要等等，为初学者提供学习建议及需要学习的内容，讲解使用到的代码等 (gitee.com)</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 项目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开源航模遥控器--萝莉控</title>
      <link href="/2021/08/14/kai-yuan-hang-mo-yao-kong-qi-luo-li-kong/"/>
      <url>/2021/08/14/kai-yuan-hang-mo-yao-kong-qi-luo-li-kong/</url>
      
        <content type="html"><![CDATA[<p>​大一时做了开源项目，萝莉3代航模遥控器，虽然做的不算太丑，但还是有点太大了，洞洞板焊的，还有点不稳定，这次找了出来，准备画块板子再做一遍（现在看来JLC的10*10板子是真小，为了薅羊毛，做的有点丑，限制了太多）这是之前的（纯手工切割打磨的亚克力，也还不错）<a href="https://imgtu.com/i/f66RN6"><img src="https://z3.ax1x.com/2021/08/14/f66RN6.jpg" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/08/14/f66RN6.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="f66RN6.jpg"></a></p><p>​下面三张图是今天画的（受板子限制，挤的很紧凑，再说也没必要再花40多块钱打几张玩的板子，另外JLC真良心，点赞！）。立创EDA画的，接下来准备学习用AD画。</p><p><a href="https://imgtu.com/i/f66HHI"><img src="https://z3.ax1x.com/2021/08/14/f66HHI.png" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/08/14/f66HHI.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="f66HHI.png"></a></p><p><a href="https://imgtu.com/i/f6cur9"><img src="https://z3.ax1x.com/2021/08/14/f6cur9.png" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/08/14/f6cur9.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="f6cur9.png"></a></p><p>​通过按照产品设计的追求去做一件东西，虽然感觉很好，但确实有点浪费时间，因为现在自己的能力差的太多了，不能追求于表面，要专心的研究本质的技术。</p><p><a href="http://www.moz8.com/forum.php?mod=viewthread&tid=142710">PS:原版萝莉教程：（感谢开源大神）</a></p><p>​成品：</p><p><a href="https://imgtu.com/i/heulX6"><img src="https://z3.ax1x.com/2021/08/25/heulX6.jpg" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/08/25/heulX6.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="heulX6.jpg"></a></p><p>​12通道接收机：</p><p><a href="https://imgtu.com/i/heKKUg"><img src="https://z3.ax1x.com/2021/08/25/heKKUg.jpg" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/08/25/heKKUg.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="heKKUg.jpg"></a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 航模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32</title>
      <link href="/2021/08/12/stm32/"/>
      <url>/2021/08/12/stm32/</url>
      
        <content type="html"><![CDATA[<p>​<a href="https://www.fangzhenxiu.com/post/6947348/">STM32学习笔记</a>  </p><p>​<a href="https://blog.csdn.net/huang_527/article/details/127719181">嵌入式STM32深入之RTOS编程</a>  </p><h1 id="1、芯片选型"><a href="#1、芯片选型" class="headerlink" title="1、芯片选型"></a>1、芯片选型</h1><p><a href="https://imgtu.com/i/f0LXkj"><img src="https://z3.ax1x.com/2021/08/12/f0LXkj.png" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/08/12/f0LXkj.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="f0LXkj.png"></a></p><p><a href="https://imgtu.com/i/f0OiBF"><img src="https://z3.ax1x.com/2021/08/12/f0OiBF.png" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/08/12/f0OiBF.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="f0OiBF.png"></a></p><h1 id="2、串口"><a href="#2、串口" class="headerlink" title="2、串口"></a>2、串口</h1><p>​<strong>USART</strong> ：UniversalSychronous Asychronous Receiver&#x2F;Transmitter，通用同步异步接收器&#x2F;发送器，能完成异步和同步通信。</p><p>​<strong>USRT</strong> ：UniversalSychronous Receiver&#x2F;Transmitter，通用同步接收器&#x2F;发送器，能够完成同步通信。</p><p>此外串口还有<strong>UART</strong>:UniversalAsychronous Receiver&#x2F;Transmitter，通用异步接收器&#x2F;发送器，能够完成异步通信。</p><p>a.异步通讯           Asynchronous</p><p>b.同步通讯           Synchronous</p><p>c.半双工模式        Single Wire(Half-Duple)</p><p>d.多处理器通讯MultiprocessorCommunication</p><p>e.红外通讯           IrDA</p><p>f.局域互联网         LIN</p><p>g.智能卡模式        SmartCard</p><p>h.智能卡+时钟   SmartCard with Card Clock</p>]]></content>
      
      
      
        <tags>
            
            <tag> 嵌入式开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OpenHD-树莓派数字图传</title>
      <link href="/2021/08/03/openhd-shu-mei-pai-shu-zi-tu-chuan/"/>
      <url>/2021/08/03/openhd-shu-mei-pai-shu-zi-tu-chuan/</url>
      
        <content type="html"><![CDATA[<h1 id="1、OpenHD"><a href="#1、OpenHD" class="headerlink" title="1、OpenHD"></a>1、OpenHD</h1><p><a href="https://imgse.com/i/pkT3kKP"><img src="https://s21.ax1x.com/2024/07/19/pkT3kKP.md.webp" class="lazyload placeholder" data-srcset="https://s21.ax1x.com/2024/07/19/pkT3kKP.md.webp" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="pkT3kKP.md.webp"></a></p><p>​ez固件，还有ruby固件</p>]]></content>
      
      
      
        <tags>
            
            <tag> 航模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ESP8266</title>
      <link href="/2021/07/25/esp8266/"/>
      <url>/2021/07/25/esp8266/</url>
      
        <content type="html"><![CDATA[<h1 id="1、esp8266系列模块"><a href="#1、esp8266系列模块" class="headerlink" title="1、esp8266系列模块"></a>1、esp8266系列模块</h1><p>​ESP8266 系列模组是深圳市安信可科技有限公司开发的一系列基于乐鑫ESP8266EX的低功耗UART-WiFi芯片模组，可以方便地进行二次开发，接入云端服务，实现手机3&#x2F;4G全球随时随地的控制，加速产品原型设计。</p><p>　　模块核心处理器 ESP8266 在较小尺寸封装中集成了业界领先的 Tensilica L106 超低功耗 32 位微型 MCU，带有 16 位精简模式，主频支持 80 MHz 和 160 MHz，支持 RTOS，集成 Wi-Fi MAC&#x2F; BB&#x2F;RF&#x2F;PA&#x2F;LNA，板载天线。支持标准的 IEEE802.11 b&#x2F;g&#x2F;n 协议，完整的 TCP&#x2F;IP 协议栈。用户可以使用该模块为现有的设备添加联网功能，也可以构建独立的网络控制器。</p><pre><code> **特点:**</code></pre><ul><li>802.11 b&#x2F;g&#x2F;n</li><li>内置Tensilica L106 超低功耗 32 位微型 MCU，主频支持 80 MHz 和160 MHz，支持 RTOS</li><li>内置10 bit高精度ADC</li><li>内置TCP&#x2F;IP协议栈</li><li>内置TR 开关、balun、LNA、功率放大器和匹配网络</li><li>内置PLL、稳压器和电源管理组件，802.11b 模式下+18 dBm的输出功率</li><li>A-MPDU 、 A-MSDU 的聚合和 0.4 s的保护间隔</li><li>Wi-Fi @ 2.4 GHz，支持 WPA&#x2F;WPA2 安全模式</li><li>支持AT本地升级及云端OTA升级</li><li>支持 STA&#x2F;AP&#x2F;STA+AP 工作模式</li><li>支持 Smart Config 功能（包括 Android 和 IOS 设备）</li><li>HSPI 、UART、I2C、I2S、IR Remote Control、PWM、GPIO</li><li>深度睡眠保持电流为 20 uA，关断电流小于 5 uA</li><li>2 ms 之内唤醒、连接并传递数据包</li><li>待机状态消耗功率小于1.0 mW (DTIM3)</li><li>工作温度范围：详情请见具体型号规格书</li></ul><p><a href="https://imgtu.com/i/fCFrdK"><img src="https://z3.ax1x.com/2021/08/02/fCFrdK.png" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/08/02/fCFrdK.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="fCFrdK.png"  /></a></p><h1 id="2、固件下载错误进行擦除"><a href="#2、固件下载错误进行擦除" class="headerlink" title="2、固件下载错误进行擦除"></a>2、固件下载错误进行擦除</h1><p>​ESPtool.py是一个python开发的针对ESP8266的小工具，可以实现底层的操作，弥补ESP8266官方工具的不足。flash的小工具，可以弥补ESP8266官方工具的不足。它也是一个开源项目，项目在github上进行托管：<a href="https://github.com/themadinventor/esptool">https://github.com/themadinventor/esptool</a></p><p>​虽然可以直接从github上下载使用，但是更好的方法是通过网络的方式进行安装，这样不会缺少依赖模块，减少运行中的故障。下面就介绍它的安装方法。</p><ol><li><p>因为esptool.py需要使用python2，所以我们先需要安装python2，并将python加入系统路径（path）。</p></li><li><p>安装python的包管理器pip，通常是使用get-pip.py进行安装。在 <a href="https://pip.pypa.io/en/latest/installing/">https://pip.pypa.io/en/latest/installing/</a> 可以找到安装的说明和需要下载的文件，按照说明可以很容易安装pip。（如果同时安装了python2和python3，pip可能默认是pip3，需要用pip2来代替下面的pip，在Linux上需要用sudo权限安装）。</p></li><li><p>用pip安装esptool<br><code>pip install esptool</code></p></li><li><p>因为esptool需要使用串口，所以还需要安装pyserial。</p></li></ol><p><code>pip install pyserial</code></p><ol start="5"><li>安装后，在Linux下，通常就可以直接运行esptool.py，在Windwos下，esptool一般安装在python2\Scripts\目录下，需要输入完整目录才能运行，如：</li></ol><p><code>c:\Python27\Scripts\esptool.py</code></p><p>​如果不清楚esptool.py的用法，可以输入-h查看帮助，如</p><p> <code>esptool.py -h</code></p><p>​甚至可以查看某个用法的帮助：</p><p> <code>esptool.py read_flash -h</code></p><ol start="6"><li>擦除flash。<br>首先要确认一下8266所连接的串口号，要以串口号作为指令的参数，如我的设备是在COM4，我运行的指令就是esptool.py –port COM4 erase_flash<br><img src="http://bbs.eeworld.com.cn/data/attachment/forum/201608/14/002734julv7tylu4hae44a.png.thumb.jpg" class="lazyload placeholder" data-srcset="http://bbs.eeworld.com.cn/data/attachment/forum/201608/14/002734julv7tylu4hae44a.png.thumb.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="img"><br>此处需要注意，执行擦除的指令前，需要像烧录固件一样，让8266进入升级模式，即按住板上的flash键不放，按下rst键，等待两秒，松开rst键，再松开flash键。否则会出现如下的错误提示：<img src="http://bbs.eeworld.com.cn/forum.php?mod=image&aid=253737&size=300x300&key=d2d7d3e3ef4b0dda&nocache=yes&type=fixnone" class="lazyload placeholder" data-srcset="http://bbs.eeworld.com.cn/forum.php?mod=image&aid=253737&size=300x300&key=d2d7d3e3ef4b0dda&nocache=yes&type=fixnone" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="img"  />这样flash的擦除工作就完成了，重新再烧录固件之后即可解决固件运行异常的问题。</li></ol><h1 id="3、环境准备（Arduino开发）"><a href="#3、环境准备（Arduino开发）" class="headerlink" title="3、环境准备（Arduino开发）"></a>3、环境准备（Arduino开发）</h1><h2 id="1、硬件准备"><a href="#1、硬件准备" class="headerlink" title="1、硬件准备"></a>1、硬件准备</h2><p>GPIO0决定板子处于什么模式（上电低电平为进入下载模式）</p><h3 id="1、ESP-01系列"><a href="#1、ESP-01系列" class="headerlink" title="1、ESP-01系列"></a>1、ESP-01系列</h3><p><a href="https://imgtu.com/i/WhEJnU"><img src="https://z3.ax1x.com/2021/07/26/WhEJnU.md.png" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/07/26/WhEJnU.md.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="WhEJnU.md.png" style="zoom: 80%;" /></a><a href="https://imgtu.com/i/fCZ14f"><img src="https://z3.ax1x.com/2021/08/02/fCZ14f.png" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/08/02/fCZ14f.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="fCZ14f.png" style="zoom: 80%;" /></a></p><h3 id="2、用的最多的12F"><a href="#2、用的最多的12F" class="headerlink" title="2、用的最多的12F"></a>2、用的最多的12F</h3><p><a href="https://imgtu.com/i/Whud4e"><img src="https://z3.ax1x.com/2021/07/26/Whud4e.md.png" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/07/26/Whud4e.md.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Whud4e.md.png"></a><br>SMD-22封装，GPIO0-GPIO16共17个通用IO口，一个单通道ADC，GPIO6-GPIO11用于连接外部flash，不可用，支持SPI总线通信：GPIO12-GPIO15，支持I2C总线：GPIO4-GPIO5,串口通信：GPIO1-GPIO3。</p><ul><li><p>12F一般D0-D8（除D3口即GPIO0下载用）；</p></li><li><p>D0：INPUT（输入）、OUTPUT（输出）、INPUT_PULLDOWN（输入，默认下拉，低电平）；</p></li><li><p>其余IO口：INPUT（输入）、OTPUT（输出）、INPUT_PULLUP（输入，默认上拉，高电平）；</p></li></ul><p><a href="https://imgtu.com/i/WhEdhR"><img src="https://z3.ax1x.com/2021/07/26/WhEdhR.md.png" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/07/26/WhEdhR.md.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="WhEdhR.md.png"></a></p><p>注意：烧录模式GPIO0接地，正常模式GPIO悬空。</p><h3 id="3、NodeMcu（ESP-12F开发板）"><a href="#3、NodeMcu（ESP-12F开发板）" class="headerlink" title="3、NodeMcu（ESP-12F开发板）"></a>3、NodeMcu（ESP-12F开发板）</h3><p><a href="https://imgtu.com/i/WhKk5D"><img src="https://z3.ax1x.com/2021/07/26/WhKk5D.md.png" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/07/26/WhKk5D.md.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="WhKk5D.md.png"  /></a><br><a href="https://imgtu.com/i/WhKla8"><img src="https://z3.ax1x.com/2021/07/26/WhKla8.md.png" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/07/26/WhKla8.md.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="WhKla8.md.png"  /></a></p><h3 id="4、8266-12E"><a href="#4、8266-12E" class="headerlink" title="4、8266-12E"></a>4、8266-12E</h3><p><a href="https://imgtu.com/i/fCJX6I"><img src="https://z3.ax1x.com/2021/08/02/fCJX6I.jpg" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/08/02/fCJX6I.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="fCJX6I.jpg" style="zoom: 50%;" /></a></p><h2 id="2、软件准备"><a href="#2、软件准备" class="headerlink" title="2、软件准备"></a>2、软件准备</h2><h3 id="1、Arduino安装-8266包安装"><a href="#1、Arduino安装-8266包安装" class="headerlink" title="1、Arduino安装+8266包安装"></a>1、Arduino安装+8266包安装</h3><p><a href="https://imgtu.com/i/fCmCY6"><img src="https://z3.ax1x.com/2021/08/02/fCmCY6.png" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/08/02/fCmCY6.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="fCmCY6.png"></a></p><h3 id="2、芯片检测程序"><a href="#2、芯片检测程序" class="headerlink" title="2、芯片检测程序"></a>2、芯片检测程序</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *    测试ESP8266 demo,打印ESP8266模块信息</span></span><br><span class="line"><span class="comment"> *    1.打印Arduino Core For ESP8266 版本</span></span><br><span class="line"><span class="comment"> *    2.打印Flash的唯一性芯片id</span></span><br><span class="line"><span class="comment"> *    3.打印Flash实际大小</span></span><br><span class="line"><span class="comment"> *    4.打印IDE配置的使用Flash大小</span></span><br><span class="line"><span class="comment"> *    5.打印IDE配置的Flash连接通信的频率</span></span><br><span class="line"><span class="comment"> *    6.打印Flash连接模式：QIO QOUT DIO DOUT，可以理解为Flash传输速率</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">  Serial.begin(<span class="number">115200</span>);</span><br><span class="line">  <span class="comment">//使能软件看门狗的触发间隔</span></span><br><span class="line">  <span class="comment">//规定时间（5S）内不喂狗，系统复位</span></span><br><span class="line">  ESP.wdtEnable(<span class="number">5000</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="comment">//喂狗</span></span><br><span class="line">  ESP.wdtFeed();</span><br><span class="line">  FlashMode_t ideMode = ESP.getFlashChipMode();</span><br><span class="line">  String coreVersion = ESP.getCoreVersion();</span><br><span class="line">  Serial.print(F(<span class="string">&quot;Arduino Core For ESP8266 Version: &quot;</span>));</span><br><span class="line">  Serial.println(coreVersion);</span><br><span class="line">  Serial.<span class="built_in">printf</span>(<span class="string">&quot;Flash real id（唯一标识符）:   %08X\n&quot;</span>, ESP.getFlashChipId());</span><br><span class="line">  Serial.<span class="built_in">printf</span>(<span class="string">&quot;Flash 实际大小: %u KBytes\n&quot;</span>, ESP.getFlashChipRealSize()/<span class="number">1024</span>);</span><br><span class="line">  Serial.<span class="built_in">printf</span>(<span class="string">&quot;IDE配置Flash大小: %u KBytes,往往小于实际大小\n&quot;</span>, ESP.getFlashChipSize()/<span class="number">1024</span>);</span><br><span class="line">  Serial.<span class="built_in">printf</span>(<span class="string">&quot;IDE配置Flash频率 : %u MHz\n&quot;</span>, ESP.getFlashChipSpeed()/<span class="number">1000000</span>);</span><br><span class="line">  Serial.<span class="built_in">printf</span>(<span class="string">&quot;Flash ide mode:  %s\n\n&quot;</span>, (ideMode == FM_QIO ? <span class="string">&quot;QIO&quot;</span> : ideMode == FM_QOUT ? <span class="string">&quot;QOUT&quot;</span> : ideMode == FM_DIO ? <span class="string">&quot;DIO&quot;</span> : ideMode == FM_DOUT ? <span class="string">&quot;DOUT&quot;</span> : <span class="string">&quot;UNKNOWN&quot;</span>));  </span><br><span class="line">  delay(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://z3.ax1x.com/2021/07/26/WhVRqU.md.png" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/07/26/WhVRqU.md.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="WhVRqU.md.png"></p><h1 id="4、相关外设使用"><a href="#4、相关外设使用" class="headerlink" title="4、相关外设使用"></a>4、相关外设使用</h1><h2 id="1、计时和延时"><a href="#1、计时和延时" class="headerlink" title="1、计时和延时"></a>1、计时和延时</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*     计时和延时：</span></span><br><span class="line"><span class="comment">*     delay(ms);</span></span><br><span class="line"><span class="comment">*     delayMicroseconds(us);延时中不能做其他事</span></span><br><span class="line"><span class="comment">*     millis(); //返回重启后所经过的毫秒数</span></span><br><span class="line"><span class="comment">*     micros(); //返回重启后所经过的微秒数</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="type">long</span> debouncdDelay = <span class="number">60</span>;<span class="comment">//延时间隔</span></span><br><span class="line"><span class="type">long</span> lastDebounceTime = <span class="number">0</span>; <span class="comment">//最近记录的一次时间</span></span><br><span class="line"><span class="comment">// 判断时间间隔是否大于设定的时间间隔。</span></span><br><span class="line"><span class="keyword">if</span>(millis()-lastDebounceTime&gt;debouncdDelay)&#123;</span><br><span class="line">    lastDebounceTime = millis();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2、IO口（Blink）"><a href="#2、IO口（Blink）" class="headerlink" title="2、IO口（Blink）"></a>2、IO口（Blink）</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * LED灯闪烁实验</span></span><br><span class="line"><span class="comment"> * 12E模块，LED在GPIO2口，即NodeMCU的D4</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">    pinMode(D4, OUTPUT);   <span class="comment">// 初始化D1引脚为输出引脚</span></span><br><span class="line">&#125; </span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">    digitalWrite(D4, LOW); <span class="comment">// 亮灯</span></span><br><span class="line">    delay(<span class="number">1000</span>); <span class="comment">// 延时1s</span></span><br><span class="line">    digitalWrite(D4, HIGH);<span class="comment">// 灭灯</span></span><br><span class="line">    delay(<span class="number">1000</span>); <span class="comment">// 延时1s</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3、中断"><a href="#3、中断" class="headerlink" title="3、中断"></a>3、中断</h2><p>（除了DO&#x2F;GPIO16，中断可以绑到任意GPIO脚）</p><p>相关函数：</p><ol><li><code>attachInterrupt(pin,function,mode);</code> 在指定引脚设置为响应中断。pin:要设置的中断号，function:中断时执行的函数，不带任何参数，无返回,Interrupt type&#x2F;mode:中断触发条件（CHANGE:改变沿；RISING：上升沿；FALLING：下降沿）</li><li><code>detachInterrupt(pin);</code> 禁用指定GPIO引脚上的中断。pin:要禁用的中断的GPIO引脚，无返回值。</li><li><code>digitalPinToInterrupt(pin);</code> 获取指定GPIO引脚的中断号。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 功能描述：ESP8266中断演示</span></span><br><span class="line"><span class="comment"> * D2口接下拉电阻到地，同时也通过一个按键开关接到VCC</span></span><br><span class="line"><span class="comment"> * 当开关按下，D2接到上升沿，开启中断，进入中断函数</span></span><br><span class="line"><span class="comment"> */</span> </span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line"> Serial.begin(<span class="number">115200</span>);<span class="comment">//设置串口波特率</span></span><br><span class="line"> attachInterrupt(digitalPinToInterrupt(D2), InterruptFunc, RISING);<span class="comment">//设置中断号、响应函数、触发方式</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 中断响应函数</span></span><br><span class="line"><span class="comment"> */</span> </span><br><span class="line">ICACHE_RAM_ATTR <span class="type">void</span> <span class="title function_">InterruptFunc</span><span class="params">()</span>&#123;</span><br><span class="line"> Serial.println(<span class="string">&quot;Hello ESP8266&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4、模拟输入（ADC）"><a href="#4、模拟输入（ADC）" class="headerlink" title="4、模拟输入（ADC）"></a>4、模拟输入（ADC）</h2><p>esp8266只用一个10位ADC通道（和芯片供电电压复用：即可设置为测量系统电压或者外部电压）</p><h3 id="1、测量外部电压"><a href="#1、测量外部电压" class="headerlink" title="1、测量外部电压"></a>1、测量外部电压</h3><ul><li>方法：<code>analogRead(A0);</code></li><li>0-1.0V</li><li>测量精度：10位ADC：0~$2^{10}$​​​</li><li>注意：开发板上做了电阻分压器，使其能够测量0 ~ 3.3V（220K与100K电阻分压）</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 功能描述：ESP8266 ADC 读取外部电压</span></span><br><span class="line"><span class="comment"> * 在串口调试器查看效果</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">  Serial.begin(<span class="number">115200</span>);<span class="comment">//配置波特率</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">  Serial.print(<span class="string">&quot;ADC Value: &quot;</span>);</span><br><span class="line">  Serial.println(analogRead(A0));<span class="comment">//输出0-1023 对应 外部输入电压 0-1.0v</span></span><br><span class="line">  <span class="comment">//延时1s</span></span><br><span class="line">  delay(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2、测量系统外部电压"><a href="#2、测量系统外部电压" class="headerlink" title="2、测量系统外部电压"></a>2、测量系统外部电压</h3><ul><li><p>方法： ESP.getVcc()      </p></li><li><p>单位： mv</p></li><li><p>ADC引脚要悬空。读取前要更改ADC模式（在#include行后面）<code>ADC_TOUT</code> (对外部电压），<code>ADC_VCC</code>（对系统电压），默认读取外部</p>  <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 功能描述：ESP8266 ADC 读取系统电压</span></span><br><span class="line"><span class="comment"> * 在串口调试器查看效果</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">ADC_MODE(ADC_VCC);<span class="comment">//设置ADC模式为读取系统电压</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">  Serial.begin(<span class="number">115200</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">  Serial.print(<span class="string">&quot;ESP8266当前系统电压(mV): &quot;</span>);</span><br><span class="line">  Serial.println(ESP.getVcc());</span><br><span class="line">  delay(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="5、模拟输出（PWM）"><a href="#5、模拟输出（PWM）" class="headerlink" title="5、模拟输出（PWM）"></a>5、模拟输出（PWM）</h2><ul><li><p><code>analogWrite(pin,val)</code>在指定引脚上启用PWM；pin:GPIO;    val:一般0 ~ PWMRANGE,默认PWMRANGE&#x3D;1023;无返回值；<code>analogWrite(pin,0)</code>相当于禁用指定引脚上的PWM；</p></li><li><p><code>analogWriteRange(new_range)</code>  改变PWMRANGE数值；new_range:新的PWMRANGE数值；无返回值；（可以调节PWM精度）；</p></li><li><p><code>analogWriteFreq(new_frequency)</code>  改变PWM频率；默认1KHz</p><ul><li><p>Arduino For ESP8266的PWM频率范围为100Hz ~40KHz:</p><p>  源码：</p>  <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">static</span> <span class="type">uint16_t</span> analogFreq = <span class="number">1000</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">void</span> __analogWriteFreq(<span class="type">uint32_t</span> freq) &#123;</span><br><span class="line">  <span class="keyword">if</span> (freq &lt; <span class="number">100</span>) &#123;</span><br><span class="line">    analogFreq = <span class="number">100</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (freq &gt; <span class="number">40000</span>) &#123;</span><br><span class="line">    analogFreq = <span class="number">40000</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    analogFreq = freq;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><p>例程（呼吸灯）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 功能描述：ESP8266 PWM演示例程</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PIN_LED D6</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">  pinMode(PIN_LED,OUTPUT);</span><br><span class="line">  analogWrite(PIN_LED,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> val=<span class="number">0</span>;val&lt;<span class="number">1024</span>;val++)&#123;</span><br><span class="line">     <span class="comment">//占空比不断增大  亮度渐亮</span></span><br><span class="line"> analogWrite(PIN_LED,val);</span><br><span class="line"> delay(<span class="number">2</span>);</span><br><span class="line">  &#125; </span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> val=<span class="number">1023</span>;val&gt;=<span class="number">0</span>;val--)&#123;</span><br><span class="line">     <span class="comment">//占空比不断变小  亮度渐暗</span></span><br><span class="line"> analogWrite(PIN_LED,<span class="number">1023</span>);</span><br><span class="line"> delay(<span class="number">2</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6、串口通信"><a href="#6、串口通信" class="headerlink" title="6、串口通信"></a>6、串口通信</h2><p>与传统Arduino设备完全一样。除硬件FIFO（128字节用于TX和RX）之外，硬件串口还有额外的256字节的TX和RX缓存。发送和接受全部由中断驱动。当FIFO&#x2F;缓存满时，Write函数会阻塞工程代码执行，等待空闲空间。当FIFO&#x2F;缓存空时，read函数也会阻塞工程代码的执行，等待串口数据进来。</p><ul><li><p>NodeMcu上有两组串口，Serial和Serial1（都是硬件串口）。</p><ul><li><p><strong>Serial使用UART0</strong>，默认GPIO1（TX）和GPIO3（RX）；Serial.begin执行之后，调用<code>Serial.swap()</code>可以将Serial重新映射到GPIO15（TX）和GPIO13（RX）。可来回调用。一般默认</p>  <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 功能描述：ESP8266 Serial映射例程</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">  Serial.begin(<span class="number">115200</span>);</span><br><span class="line">  Serial.println(<span class="string">&quot;GPIO1(TX),GPIO3(RX)&quot;</span>);</span><br><span class="line">  <span class="comment">//调用映射方法</span></span><br><span class="line">  Serial.swap();</span><br><span class="line">  Serial.println(<span class="string">&quot;GPIO15(TX),GPIO13(RX)&quot;</span>);</span><br><span class="line">  <span class="comment">//重新映射回来</span></span><br><span class="line">  Serial.swap();</span><br><span class="line">  Serial.println(<span class="string">&quot;GPIO1(TX),GPIO3(RX)&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>Serial1使用UART1</strong>，默认对应GPIO2（TX）。Serial1不能接收数据（RX被flash芯片占用）,<code>Serial1.begin(baudrate)</code>。</p>  <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">  Serial.begin(<span class="number">115200</span>);</span><br><span class="line">  Serial.println(<span class="string">&quot;Hello Serial&quot;</span>);</span><br><span class="line">  Serial1.begin(<span class="number">115200</span>);</span><br><span class="line">  Serial1.println(<span class="string">&quot;Hello Serial1&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>若不用Serial1且不映射串口，可将UART0的TX映射到GPIO2：在<code>Serial.begin()</code>之后调用<code>Serial.set_tx(2)</code>或者直接调用<code>Serial.begin(baud,config,mode,2)</code> ;</p></li><li><p>默认当调用Serial.begin后，将禁用WIFI库的诊断输出，再次启动：<code>Serial.setDebugOutput(true)</code>若将调试输出映射到Serial1时：<code>Serial1.setDebugOutput(true)</code> ;</p></li><li><p><code>Serial.setRxBufferSize(size_t size)</code>定义接收缓冲区大小，默认256；</p></li><li><p>Serial和Serial1对象都支持5，6，7，8个数据位，奇数（O），偶数（E）和无（N）奇偶校验，1或2个停止位：<code>Serial.begin(baudrate,SERIAL_8N1)</code></p></li><li><p>获取当前波特率设置：<code>Serial.baudRate()</code>或<code>Serial1.baudRate()</code></p></li><li><p><a href="https://github.com/plerup/espsoftwareserial">ESP8266软件串口功能</a></p></li><li><p>检测进入Serial的未知波特率的数据：<code>Serial.detectBaudrate(time_t timeoutMillis)</code> : 尝试在timeoutMillis ms的时间内检测波特率，检测成功返回波特率，失败返回0。<code>detectBaudrate()</code>方法在<code>Serial.begin()</code>之前调用。可使用<code>Serial.begin(detectedBaudrate)</code></p></li></ul><p>示例（WIFI连接）：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * statin模式下，创建一个连接到可接入点（wifi热点），并且打印IP地址</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WiFi.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="keyword">define</span> AP_SSID <span class="string">&quot;xxxxx&quot;</span> <span class="comment">//这里改成你的wifi名字</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> AP_PSW  <span class="string">&quot;xxxxx&quot;</span><span class="comment">//这里改成你的wifi密码</span></span></span><br><span class="line"><span class="comment">//以下三个定义为调试定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugBegin(baud_rate)    Serial.begin(baud_rate)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrintln(message)    Serial.println(message)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrint(message)    Serial.print(message)</span></span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span>&#123;</span><br><span class="line">  <span class="comment">//设置串口波特率，以便打印信息</span></span><br><span class="line">  DebugBegin(<span class="number">115200</span>);</span><br><span class="line">  <span class="comment">//延时2s 为了演示效果</span></span><br><span class="line">  delay(<span class="number">2000</span>);</span><br><span class="line">  DebugPrintln(<span class="string">&quot;Setup start&quot;</span>);</span><br><span class="line">  <span class="comment">//启动STA模式，并连接到wifi网络</span></span><br><span class="line">  WiFi.begin(AP_SSID, AP_PSW);</span><br><span class="line"> </span><br><span class="line">  DebugPrint(String(<span class="string">&quot;Connecting to &quot;</span>)+AP_SSID);</span><br><span class="line">  <span class="comment">//判断网络状态是否连接上，没连接上就延时500ms，并且打出一个点，模拟连接过程</span></span><br><span class="line">  <span class="comment">//笔者扩展：加入网络一直都连不上 是否可以做个判断，由你们自己实现</span></span><br><span class="line">  <span class="keyword">while</span> (WiFi.status() != WL_CONNECTED)&#123;</span><br><span class="line">    delay(<span class="number">500</span>);</span><br><span class="line">    DebugPrint(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  DebugPrintln(<span class="string">&quot;&quot;</span>);</span><br><span class="line"> </span><br><span class="line">  DebugPrint(<span class="string">&quot;Connected, IP address: &quot;</span>);</span><br><span class="line">  <span class="comment">//输出station IP地址，这里的IP地址由DHCP分配</span></span><br><span class="line">  DebugPrintln(WiFi.localIP());</span><br><span class="line">  DebugPrintln(<span class="string">&quot;Setup End&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="7、ESP8266与EEPROM"><a href="#7、ESP8266与EEPROM" class="headerlink" title="7、ESP8266与EEPROM"></a>7、ESP8266与EEPROM</h1><h2 id="1、写数据"><a href="#1、写数据" class="headerlink" title="1、写数据"></a>1、写数据</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 功能描述：该代码向EEPROM写入100字节数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;EEPROM.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> addr = <span class="number">0</span>; <span class="comment">//EEPROM数据地址</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> </span><br><span class="line">&#123;</span><br><span class="line">  Serial.begin(<span class="number">9600</span>);</span><br><span class="line">  Serial.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">  Serial.println(<span class="string">&quot;Start write&quot;</span>);</span><br><span class="line"></span><br><span class="line">  EEPROM.begin(<span class="number">100</span>);  <span class="comment">//申请size大小的内存大小</span></span><br><span class="line">  <span class="keyword">for</span>(addr = <span class="number">0</span>; addr&lt;<span class="number">100</span>; addr++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="type">int</span> data = addr;</span><br><span class="line">    EEPROM.write(addr, data); <span class="comment">//写数据</span></span><br><span class="line">  &#125;</span><br><span class="line">  EEPROM.end(); <span class="comment">//写入flash并释放内存空间  保存更改的数据</span></span><br><span class="line"></span><br><span class="line">  Serial.println(<span class="string">&quot;End write&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> </span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2、读数据"><a href="#2、读数据" class="headerlink" title="2、读数据"></a>2、读数据</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 功能描述：该代码从EEPROM读取100字节数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;EEPROM.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> addr = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> </span><br><span class="line">&#123;</span><br><span class="line">  Serial.begin(<span class="number">9600</span>);</span><br><span class="line">  Serial.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">  Serial.println(<span class="string">&quot;Start read&quot;</span>);</span><br><span class="line"></span><br><span class="line">  EEPROM.begin(<span class="number">100</span>); </span><br><span class="line">  <span class="keyword">for</span>(addr = <span class="number">0</span>; addr&lt;<span class="number">100</span>; addr++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="type">int</span> data = EEPROM.read(addr); <span class="comment">//读数据</span></span><br><span class="line">    Serial.print(data);</span><br><span class="line">    Serial.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line">    delay(<span class="number">2</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//释放内存</span></span><br><span class="line">  EEPROM.end();</span><br><span class="line">  Serial.println(<span class="string">&quot;End read&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> </span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3、清除数据"><a href="#3、清除数据" class="headerlink" title="3、清除数据"></a>3、清除数据</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">   EEPROM Clear</span></span><br><span class="line"><span class="comment">   Sets all of the bytes of the EEPROM to 0.</span></span><br><span class="line"><span class="comment">   This example code is in the public domain.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;EEPROM.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">  EEPROM.begin(<span class="number">100</span>);</span><br><span class="line">  <span class="comment">// write a 0 to all 100 bytes of the EEPROM</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">    EEPROM.write(i, <span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//释放内存</span></span><br><span class="line">  EEPROM.end();</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4、结构体操作"><a href="#4、结构体操作" class="headerlink" title="4、结构体操作"></a>4、结构体操作</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 功能描述：eeprom结构体操作</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;EEPROM.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DEFAULT_STASSID <span class="string">&quot;danpianjicainiao&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DEFAULT_STAPSW  <span class="string">&quot;boge&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">config_type</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="type">char</span> stassid[<span class="number">32</span>];</span><br><span class="line">  <span class="type">char</span> stapsw[<span class="number">64</span>];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">config_type config;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 保存参数到EEPROM</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">saveConfig</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  Serial.println(<span class="string">&quot;Save config!&quot;</span>);</span><br><span class="line">  Serial.print(<span class="string">&quot;stassid:&quot;</span>);</span><br><span class="line">  Serial.println(config.stassid);</span><br><span class="line">  Serial.print(<span class="string">&quot;stapsw:&quot;</span>);</span><br><span class="line">  Serial.println(config.stapsw);</span><br><span class="line"></span><br><span class="line">  EEPROM.begin(<span class="number">1024</span>);</span><br><span class="line">  <span class="type">uint8_t</span> *p = (<span class="type">uint8_t</span>*)(&amp;config);</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">sizeof</span>(config); i++)</span><br><span class="line">  &#123;</span><br><span class="line">    EEPROM.write(i, *(p + i));</span><br><span class="line">  &#125;</span><br><span class="line">  EEPROM.commit();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 从EEPROM加载参数</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">loadConfig</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  EEPROM.begin(<span class="number">1024</span>);</span><br><span class="line">  <span class="type">uint8_t</span> *p = (<span class="type">uint8_t</span>*)(&amp;config);</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">sizeof</span>(config); i++)</span><br><span class="line">  &#123;</span><br><span class="line">    *(p + i) = EEPROM.read(i);</span><br><span class="line">  &#125;</span><br><span class="line">  EEPROM.commit();</span><br><span class="line">  Serial.println(<span class="string">&quot;-----Read config-----&quot;</span>);</span><br><span class="line">  Serial.print(<span class="string">&quot;stassid:&quot;</span>);</span><br><span class="line">  Serial.println(config.stassid);</span><br><span class="line">  Serial.print(<span class="string">&quot;stapsw:&quot;</span>);</span><br><span class="line">  Serial.println(config.stapsw);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*初始化</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">  ESP.wdtEnable(<span class="number">5000</span>);</span><br><span class="line">  <span class="built_in">strcpy</span>(config.stassid, DEFAULT_STASSID);</span><br><span class="line">  <span class="built_in">strcpy</span>(config.stapsw, DEFAULT_STAPSW);</span><br><span class="line">  saveConfig();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*主循环</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">  ESP.wdtFeed();</span><br><span class="line">  loadConfig();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="8、SPI通信"><a href="#8、SPI通信" class="headerlink" title="8、SPI通信"></a>8、SPI通信</h1><h2 id="1、概述"><a href="#1、概述" class="headerlink" title="1、概述"></a>1、概述</h2><p>​串行外设接口（Serial Peripheral Interface），高速、全双工、同步通信总线（同一时刻只有一主一从进行通信），四线（MISO:主入从出；MOSI：主出从入；SCK：同步时钟信号；SS或CS：片选使能）。（Quad SPI&#x3D;2Dual SPI&#x3D;4标准SPI）。</p><h2 id="2、ESP8266-SPI类库成员函数"><a href="#2、ESP8266-SPI类库成员函数" class="headerlink" title="2、ESP8266 SPI类库成员函数"></a>2、ESP8266 SPI类库成员函数</h2><p>SPI.h头文件中，该类库只提供主设备API</p><ol><li><code>SPI.begin()</code>  初始化SPI通信；无参，无返回值；</li><li><code>SPI.end()</code>关闭SPI通信；无参，无返回值；</li><li><code>SPI.setBitOrder(order)</code>设置数据传输顺序；<ul><li>参数（order）：<ul><li>~ LSBFIRST，低位在前；</li><li>~ MSBFIRST，高位在前；</li></ul></li><li>无返回值；</li></ul></li><li><code>SPI.setClockDivider(divider)</code>设置通信时钟（由系统时钟分频）<ul><li>参数（divider）:<ul><li>~ SPI_CLOCK_DIV2, 2分频；</li><li>~ SPI_CLOCK_DIV4, 4分频；</li><li>~ SPI_CLOCK_DIV8, 8分频；</li><li>~ SPI_CLOCK_DIV16, 16分频；</li><li>~ SPI_CLOCK_DIV32, 32分频；</li><li>~ SPI_CLOCK_DIV64, 64分频；</li><li>~ SPI_CLOCK_DIV128, 128分频；</li></ul></li><li>无返回值；</li></ul></li><li><code>SPI.setDataMode(mode)</code>设置数据模式<ul><li>参数（mode）:<ul><li>~ SPI_MODE0;即：CPOL&#x3D;0,CPHA&#x3D;0</li><li>~ SPI_MODE1;                即：CPOL&#x3D;0,CPHA&#x3D;1</li><li>~ SPI_MODE2;                即：CPOL&#x3D;1,CPHA&#x3D;0</li><li>~ SPI_MODE3;                即：CPOL&#x3D;1,CPHA&#x3D;1</li></ul></li><li>无返回值</li><li>补充：四种模式，即SPI相位（CPHA）和极性（CPOL）分别为0或1;<ul><li>CPOL：即SPI空闲时，SCLK的电平（1高，0低）；</li><li>CPHA：即SPI在SCLK的第几个边沿开始采样（0第一个，1第二个）；</li></ul></li></ul></li><li><code>SPI.transfer(val)</code>传输1B的数据。全双工，发1B收1B数据</li><li><code>SPI.transfer16(val)</code>传输2B数据，从机返回2B作为返回值；</li><li><code>SPI.transferBuf(buf,count)</code>传输一个缓冲区数据，参数为发送的缓冲区buf（<code>uint8_t*</code>数据），count位缓冲区大小，无返回值（但从机传输来的数据会替换掉buf缓冲区的数据）</li><li><code>SPI.pins(sck,miso,mosi,ss)</code>切换SPI引脚映射，需在<code>SPI.begin()</code>前调用</li></ol><h2 id="3、SPI寄存器"><a href="#3、SPI寄存器" class="headerlink" title="3、SPI寄存器"></a>3、SPI寄存器</h2><p>所有SPI设置都是由Arduino SPI控制寄存器（SPCR）决定。该寄存器就是MCU内存的一个字节，可读写。寄存器提供服务：控制、数据、状态。</p><ol><li><p>控制寄存器（SPCR）：</p><p>8位，（如单片机的中断允许控制寄存器IE、中断优先级控制寄存器IP、定时器&#x2F;计数器控制寄存器）</p><p><a href="https://imgtu.com/i/fFaWEn"><img src="https://z3.ax1x.com/2021/08/03/fFaWEn.png" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/08/03/fFaWEn.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="fFaWEn.png"></a></p></li><li><p>数据寄存器（SPDR）：</p><p>（如串行口锁存器SBUF，仅hold住一个字节）</p></li><li><p>状态寄存器（SPSR）:</p><p>​根据多种微控制器的条件改变其状态</p></li></ol><h1 id="10、Ticker-—ESP8266定时库"><a href="#10、Ticker-—ESP8266定时库" class="headerlink" title="10、Ticker —ESP8266定时库"></a>10、Ticker —ESP8266定时库</h1><h2 id="1、概述-1"><a href="#1、概述-1" class="headerlink" title="1、概述"></a>1、概述</h2><ul><li>用于规定时间后调用函数；</li></ul><p><a href="https://imgtu.com/i/fAfIxg"><img src="https://z3.ax1x.com/2021/08/04/fAfIxg.png" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/08/04/fAfIxg.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="fAfIxg.png"></a></p><ul><li>一个方法的示例（为了说明三个参数时的意义，两个参数时好理解）</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 每隔xx毫秒周期性执行</span></span><br><span class="line"><span class="comment"> * @param seconds 秒数</span></span><br><span class="line"><span class="comment"> * @param callback 回调函数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">attach_ms</span><span class="params">(<span class="type">float</span> seconds, <span class="type">callback_function_t</span> callback)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 每隔xx毫秒周期性执行</span></span><br><span class="line"><span class="comment"> * @param seconds 秒数</span></span><br><span class="line"><span class="comment"> * @param callback 回调函数</span></span><br><span class="line"><span class="comment"> * @param arg 回调函数的参数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">attach_ms</span><span class="params">(<span class="type">uint32_t</span> milliseconds, <span class="type">void</span> (*callback)(TArg), TArg arg)</span></span><br></pre></td></tr></table></figure><ul><li>不建议使用Ticker回调函数来阻塞IO操作（网络、串口、文件）；可以在Ticker回调函数中设置一个标记，在loop函数中检测这个标记；</li><li>对于arg，必须时char, short, int, float, void* , char* 之一；</li></ul><h2 id="2、示例"><a href="#2、示例" class="headerlink" title="2、示例"></a>2、示例</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 代码功能：板载LED开始0.3秒闪，闪20次开始以0.1秒快闪，总共闪120次后最后常亮 </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Ticker.h&gt;</span></span></span><br><span class="line">Ticker flipper;</span><br><span class="line"><span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">flip</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="type">int</span> state = digitalRead(LED_BUILTIN);  <span class="comment">// get the current state of GPIO1 pin</span></span><br><span class="line">  digitalWrite(LED_BUILTIN, !state);     <span class="comment">// set pin to the opposite state</span></span><br><span class="line">  ++count;</span><br><span class="line">  <span class="comment">// 当翻转次数达到20次的时候，切换led的闪烁频率，每隔0.1s翻转一次</span></span><br><span class="line">  <span class="keyword">if</span> (count == <span class="number">20</span>) &#123;</span><br><span class="line">    flipper.attach(<span class="number">0.1</span>, flip);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 当次数达到120次的时候关闭ticker</span></span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (count == <span class="number">120</span>) &#123;</span><br><span class="line">    flipper.detach();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="comment">//LED_BUILTIN 对应板载LED的IO口</span></span><br><span class="line">  pinMode(LED_BUILTIN, OUTPUT);</span><br><span class="line">  digitalWrite(LED_BUILTIN, LOW);</span><br><span class="line">  <span class="comment">//每隔0.3s 翻转一下led状态</span></span><br><span class="line">  flipper.attach(<span class="number">0.3</span>, flip);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*板载LED每隔25ms灭，每隔26ms亮</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Ticker.h&gt;</span></span></span><br><span class="line">Ticker tickerSetHigh;</span><br><span class="line">Ticker tickerSetLow;</span><br><span class="line"><span class="type">void</span> <span class="title function_">setPin</span><span class="params">(<span class="type">int</span> state)</span> &#123;</span><br><span class="line">  digitalWrite(LED_BUILTIN, state);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">  pinMode(LED_BUILTIN, OUTPUT);</span><br><span class="line">  digitalWrite(LED_BUILTIN, LOW);</span><br><span class="line">  <span class="comment">// 每隔25ms调用一次 setPin(0)</span></span><br><span class="line">  tickerSetLow.attach_ms(<span class="number">25</span>, setPin, <span class="number">0</span>);</span><br><span class="line">  <span class="comment">// 每隔26ms调用一次 setPin(1)</span></span><br><span class="line">  tickerSetHigh.attach_ms(<span class="number">26</span>, setPin, <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="11、Arduino-Core-For-ESP8266"><a href="#11、Arduino-Core-For-ESP8266" class="headerlink" title="11、Arduino Core For ESP8266"></a>11、Arduino Core For ESP8266</h1><ul><li><p>源码：<a href="https://github.com/esp8266/Arduino">Arduino Core For ESP8266 github</a></p></li><li><p>资料：<a href="https://arduino-esp8266.readthedocs.io/en/latest/index.html">ESP8266 Arduino Core </a></p></li><li><p>概述：</p></li></ul><p><a href="https://imgtu.com/i/fECKd1"><img src="https://z3.ax1x.com/2021/08/04/fECKd1.png" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/08/04/fECKd1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="fECKd1.png" style="zoom: 150%;" /></a></p><h1 id="12、ESP8266工作模式与ESP8266WIFI库"><a href="#12、ESP8266工作模式与ESP8266WIFI库" class="headerlink" title="12、ESP8266工作模式与ESP8266WIFI库"></a>12、ESP8266工作模式与ESP8266WIFI库</h1><h2 id="1、ESP8266工作模式"><a href="#1、ESP8266工作模式" class="headerlink" title="1、ESP8266工作模式"></a>1、ESP8266工作模式</h2><ol><li><p>Station模式（STA）：</p><p>ESP8266模块连接WIFI网络（通过接入点（Access Point））</p><p><strong>特点</strong>：</p><ul><li>连接丢失，ESP8266会自动重连最近使用的接入点（会出问题，连不上）；</li><li>模块重启也会这样；</li><li>ESP8266将最后使用的接入点认证信息（ssid , psw）保存到Flash（非易失性）存储器中；</li><li>若在Arduino IDE修改代码，但不更改WIFI工作模式或接入点认证信息，ESP8266使用保存在Flash上的数据重新连接。</li></ul></li><li><p>AP模式（soft-AP）:</p><p>(Access Point) ESP8266作为接入点建立WIFI网络，供Station模式下的模块连接</p><p><strong>特点</strong>：</p><ul><li>AP模式可用作STA模式的模块之间交换中转站（让模块处于同一WIFI网络下）；</li><li>可先在AP模式下发出WIFI信号，手机连接，高速该模块家里的WIFI认证信息，模块转为STA模式，连接目标WIFI。</li></ul></li><li><p>AP兼STA模式：</p><p>以上两种模式的整合（应该是做软路由那个意思）</p></li></ol><h2 id="2、ESP8266WIFI库"><a href="#2、ESP8266WIFI库" class="headerlink" title="2、ESP8266WIFI库"></a>2、ESP8266WIFI库</h2><p>概述：</p><p><a href="https://imgtu.com/i/fEDZ5Q"><img src="https://z3.ax1x.com/2021/08/04/fEDZ5Q.png" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/08/04/fEDZ5Q.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="fEDZ5Q.png"></a></p><p><strong>相关知识</strong>：</p><ol><li><p>名字里带Secure、SSL、TLS的，和安全校验有关（https）；</p></li><li><p>带Client，和tcp客户端（发送端）有关；</p></li><li><p>带Server，和tcp服务端（接收端）有关；</p></li><li><p>带8266，针对ESP8266的代码封装；</p></li><li><p>带Scan，和WIFI扫描有关；</p></li><li><p>带STA，和ESP8266 Station模式有关；</p></li><li><p>带AP，和ESP8266 AP模式（AP热点）有关；</p></li><li><p>ESP8266WiFiGeneric（8266模块通用库）包括：处理程序来管理WIFI事件，如连接、断开或获得ip，WIFI模式的变化，管理模块睡眠模式的功能，以ip地址解析hostName等；</p></li><li><p>ESP8266WiFiGType.h文件，主要用来定义各种配置选项，如WIFI工作模式（WiFiMode）,WiFi睡眠模式（WiFiSleep Type）,wifi物理模式（WiFiPhyMode）,wifi事件（WiFiEvent），wifi断开原因等；</p></li><li><p>ESP8266WiFi库不仅仅局限于ESP8266WIFi.h和ESP8266WiFi.cpp这两个文件，但他们是最核心的统一入口；</p></li><li><p>WiFiUdp库，在ESP8266WiFi功能基础上包装了UDP广播协议，适用于UDP通信，需另加头文件</p><p><strong>引入<code>#include&lt;ESP8266WiFi.h&gt;</code>一步到位</strong></p></li></ol><p><strong>详解</strong>：</p><h3 id="1、WIFI通用功能库（ESP8266WiFiGeneric）："><a href="#1、WIFI通用功能库（ESP8266WiFiGeneric）：" class="headerlink" title="1、WIFI通用功能库（ESP8266WiFiGeneric）："></a>1、WIFI通用功能库（ESP8266WiFiGeneric）：</h3><p><a href="https://imgtu.com/i/fErOte"><img src="https://z3.ax1x.com/2021/08/04/fErOte.png" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/08/04/fErOte.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="fErOte.png"></a></p><h3 id="2、STA库（ESP8266WiFiSTA）："><a href="#2、STA库（ESP8266WiFiSTA）：" class="headerlink" title="2、STA库（ESP8266WiFiSTA）："></a>2、STA库（ESP8266WiFiSTA）：</h3><ol><li><p>配置连接：</p><p><strong>注意</strong>：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">WiFi.mode(WIFI_STA);<span class="comment">//最好人为加上STA设置（虽然默认是STA模式）</span></span><br><span class="line">WiFi.disconnect();<span class="comment">//最好调用一下断连</span></span><br><span class="line"><span class="comment">/*如果之前处于AP模式，再调begin()可能会进入STA+softAp模式</span></span><br><span class="line"><span class="comment">*可检测当前模式（WiFi.getMode()）</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><ul><li>切换到STA模式（<code>begin()</code>）</li></ul><p><strong>源码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 切换工作模式到STA模式，并自动连接到最近接入的wifi热点</span></span><br><span class="line"><span class="comment">* @param void</span></span><br><span class="line"><span class="comment">* @return void</span></span><br><span class="line"><span class="comment">* @note 调用这个方法就会切换到STA模式，并且连接到最近使用的接入点（会从flash中读取之前存储的配置信息）</span></span><br><span class="line"><span class="comment">* 如果没有配置信息，那么这个方法基本上没有什么用。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">wl_status_t</span> <span class="title function_">begin</span><span class="params">()</span></span><br></pre></td></tr></table></figure><p><strong>应用：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WiFi.begin();</span><br></pre></td></tr></table></figure><ul><li>切换到STA模式（<code>begin(ssid,psw)</code>）</li></ul><p><strong>应用：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WiFi.begin(AP_SSID, AP_PSW);</span><br></pre></td></tr></table></figure><ul><li>切换到STA模式（<code>begin(ssid,psw,channel,bssid,connect)</code>）</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 切换工作模式到STA模式，并根据connect属性来判断是否连接wifi</span></span><br><span class="line"><span class="comment">* @param ssid       wifi热点名字</span></span><br><span class="line"><span class="comment">* @param password   wifi热点密码</span></span><br><span class="line"><span class="comment">* @param channel    wifi热点的通道号，用特定通信通信，可选参数</span></span><br><span class="line"><span class="comment">* @param bssid      wifi热点的mac地址，可选参数</span></span><br><span class="line"><span class="comment">* @param connect    boolean参数，默认等于true，当设置为false，不会去连接wifi热点，会建立module保存上面参数</span></span><br><span class="line"><span class="comment">* @return wl_status_t  wifi状态</span></span><br><span class="line"><span class="comment">* @note 调用这个方法就会切换到STA模式。</span></span><br><span class="line"><span class="comment">*       如果connect等于true，会连接到ssid的wifi热点。</span></span><br><span class="line"><span class="comment">*       如果connect等于false，不会连接到ssid的wifi热点，会建立module保存上面参数。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">wl_status_t</span> <span class="title function_">begin</span><span class="params">(<span class="type">char</span>* ssid, <span class="type">char</span> *passphrase = <span class="literal">NULL</span>, <span class="type">int32_t</span> channel =<span class="number">0</span>, <span class="type">const</span> <span class="type">uint8_t</span>* bssid = <span class="literal">NULL</span>, <span class="type">bool</span> connect = <span class="literal">true</span></span></span><br><span class="line"><span class="params"></span></span><br></pre></td></tr></table></figure><ul><li>配置IP信息（<code>config(local_ip,gateway,subnet,dns1,dns2)</code>）</li></ul><p><strong>源码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 禁止DHCP client，设置station 模式下的IP配置</span></span><br><span class="line"><span class="comment">* @param  local_ip    station固定的ip地址(连接快)</span></span><br><span class="line"><span class="comment">* @param  gateway     网关</span></span><br><span class="line"><span class="comment">* @param  subnet      子网掩码（前3个参数都设置为0.0.0.0，则重启DHCP）</span></span><br><span class="line"><span class="comment">* @param  dns1，dns2  可选参数定义域名服务器（dns）的ip地址，这些域名服务器</span></span><br><span class="line"><span class="comment">*                     维护一个域名目录（如www.google.co.uk），并将它们翻译成ip地址  </span></span><br><span class="line"><span class="comment">* @return boolean值，如果配置成功，返回true；</span></span><br><span class="line"><span class="comment">*         如果配置没成功（模块没处于station或者station+soft AP模式），返回false；</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">config</span><span class="params">(IPAddress local_ip, IPAddress gateway, IPAddress subnet, IPAddress dns1 = (<span class="type">uint32_t</span>)<span class="number">0x00000000</span>, IPAddress dns2 = (<span class="type">uint32_t</span>)<span class="number">0x00000000</span>)</span></span><br></pre></td></tr></table></figure></li><li><p>管理连接：</p><ul><li>重新连接网络（<code>reconnect()</code>）</li></ul><p><strong>源码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 断开连接并且重新连接station到同一个AP</span></span><br><span class="line"><span class="comment">* @param void</span></span><br><span class="line"><span class="comment">* @return false or true</span></span><br><span class="line"><span class="comment">*         返回false，意味着ESP8266不处于STA模式或者说Station在此之前没有连接到一个可接入点。</span></span><br><span class="line"><span class="comment">*         返回true，意味着已经成功重新启动连接，但是用户仍应该去检测网络连接状态指导WL_CONNECTED。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">reconnect</span><span class="params">()</span></span><br></pre></td></tr></table></figure><p><strong>应用：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">WiFi.reconnect();</span><br><span class="line"><span class="keyword">while</span> (WiFi.status() != WL_CONNECTED)</span><br><span class="line">&#123;</span><br><span class="line">  delay(<span class="number">500</span>);</span><br><span class="line">  Serial.print(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>断开网络连接（<code>disconnect()</code>）</li></ul><p><strong>源码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 断开wifi连接，设置当前配置SSID和pwd为null</span></span><br><span class="line"><span class="comment">* @param wifioff 可选参数，设置为true，那么就会关闭Station模式</span></span><br><span class="line"><span class="comment">* @return false or true 返回wl_status_t状态</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">disconnect</span><span class="params">(<span class="type">bool</span> wifioff = <span class="literal">false</span>)</span>;</span><br></pre></td></tr></table></figure><ul><li>是否连接网络（<code>isConnected()</code>）</li></ul><p><strong>源码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 判断STA模式下是否连接上AP</span></span><br><span class="line"><span class="comment">* @return 如果STA连接上AP，那么就返回true</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">isConnected</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><ul><li>设置是否自动连接到最近接入点（<code>setAutoConnect(bool autoReconnect)</code>）</li></ul><p><strong>源码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 当电源启动后，设置ESP8266在STA模式下是否自动连接flash中存储的AP</span></span><br><span class="line"><span class="comment">* @param autoConnect bool 默认是自动连接</span></span><br><span class="line"><span class="comment">* @return 返回保存状态 true or false</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">setAutoConnect</span><span class="params">(<span class="type">bool</span> autoConnect)</span>;</span><br></pre></td></tr></table></figure><ul><li>判断是否自动设置自动连接（<code>getAutoConnect()</code>）</li></ul><p><strong>源码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 检测ESP8266 station模式下是否启动自动连接</span></span><br><span class="line"><span class="comment">* @return 返回自动连接状态 true or false</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">getAutoConnect</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><ul><li>设置是否自动重连到最近接入点（<code>setAutoReconnect(bool autoReconnect)</code>）</li></ul><p><strong>源码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 设置当断开连接的时候是否自动重连</span></span><br><span class="line"><span class="comment">*  网络断开后再设置无效</span></span><br><span class="line"><span class="comment">* @param autoConnect bool</span></span><br><span class="line"><span class="comment">* @return 返回保存状态 true or false</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">setAutoReconnect</span><span class="params">(<span class="type">bool</span> autoReconnect)</span>;</span><br></pre></td></tr></table></figure><ul><li>判断网络连接状态（<code>waitForConnectResult()</code>）</li></ul><p><strong>源码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 等待直到ESP8266连接AP返回结果</span></span><br><span class="line"><span class="comment">* @return uint8_t 连接结果</span></span><br><span class="line"><span class="comment">*         1.WL_CONNECTED 成功连接</span></span><br><span class="line"><span class="comment">*         2.WL_NO_SSID_AVAIL  匹配SSID失败（账号错误）</span></span><br><span class="line"><span class="comment">*         3.WL_CONNECT_FAILED psw错误</span></span><br><span class="line"><span class="comment">*         4.WL_IDLE_STATUS 当wi-fi正在不同的状态中变化</span></span><br><span class="line"><span class="comment">*         5.WL_DISCONNECTED 这个模块没有配置STA模式</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">waitForConnectResult</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure></li><li><p>station信息：</p><ul><li>获取mac地址<ul><li><code>macAddress(macAddr)</code></li><li><code>macAddress()</code></li></ul></li></ul><p><strong>源码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取ESP station下的Mac地址</span></span><br><span class="line"><span class="comment"> * @param mac   uint8_t数组的指针，数组长度为Mac地址的长度，这里为6</span></span><br><span class="line"><span class="comment"> * @return      返回uint8_t数组的指针</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">uint8_t</span> * <span class="title function_">macAddress</span><span class="params">(<span class="type">uint8_t</span>* mac)</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取ESP station下的Mac地址</span></span><br><span class="line"><span class="comment"> * @return  返回String的Mac地址</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String <span class="title function_">macAddress</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><p><strong>应用：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//实例代码1 这只是部分代码 不能直接使用</span></span><br><span class="line"><span class="keyword">if</span> (WiFi.status() == WL_CONNECTED)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">uint8_t</span> macAddr[<span class="number">6</span>];</span><br><span class="line">  WiFi.macAddress(macAddr);</span><br><span class="line">  Serial.<span class="built_in">printf</span>(<span class="string">&quot;Connected, mac address: %02x:%02x:%02x:%02x:%02x:%02x\n&quot;</span>, macAddr[<span class="number">0</span>], macAddr[<span class="number">1</span>], macAddr[<span class="number">2</span>], macAddr[<span class="number">3</span>], macAddr[<span class="number">4</span>], macAddr[<span class="number">5</span>]);</span><br><span class="line">  <span class="comment">//Connected, mac address: 5C:CF:7F:08:11:17</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//实例代码2 这只是部分代码 不能直接使用</span></span><br><span class="line"><span class="keyword">if</span> (WiFi.status() == WL_CONNECTED)</span><br><span class="line">&#123;</span><br><span class="line">  Serial.<span class="built_in">printf</span>(<span class="string">&quot;Connected, mac address: %s\n&quot;</span>, WiFi.macAddress().c_str());</span><br><span class="line">  Connected, mac address: <span class="number">5</span>C:CF:<span class="number">7F</span>:<span class="number">08</span>:<span class="number">11</span>:<span class="number">17</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>获取ip地址（<code>localIP()</code>）</li></ul><p><strong>源码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 返回ESP8266 STA模式下的IP地址</span></span><br><span class="line"><span class="comment"> * @return IP地址</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">IPAddress <span class="title function_">localIP</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><p><strong>应用：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (WiFi.status() == WL_CONNECTED)</span><br><span class="line">&#123;</span><br><span class="line">  Serial.print(<span class="string">&quot;Connected, IP address: &quot;</span>);</span><br><span class="line">  Serial.println(WiFi.localIP());</span><br><span class="line">  <span class="comment">//Connected, IP address: 192.168.1.10</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>获取子网掩码（<code>subnetMask()</code>）</li></ul><p><strong>源码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取子网掩码的地址</span></span><br><span class="line"><span class="comment"> * @return 返回子网掩码的IP地址</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">IPAddress <span class="title function_">subnetMask</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><p><strong>应用：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Serial.print(<span class="string">&quot;Subnet mask: &quot;</span>);</span><br><span class="line">Serial.println(WiFi.subnetMask());</span><br><span class="line"><span class="comment">//Subnet mask: 255.255.255.0</span></span><br></pre></td></tr></table></figure><ul><li>获取网关地址（<code>getwayIP()</code>）</li></ul><p><strong>源码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取网关IP地址</span></span><br><span class="line"><span class="comment"> * @return 返回网关IP地址</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">IPAddress <span class="title function_">gatewayIP</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><p><strong>应用：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//实例代码 这只是部分代码 不能直接使用</span></span><br><span class="line">Serial.<span class="built_in">printf</span>(<span class="string">&quot;Gataway IP: %s\n&quot;</span>, WiFi.gatewayIP().toString().c_str());</span><br><span class="line"><span class="comment">//Gataway IP: 192.168.1.9</span></span><br></pre></td></tr></table></figure><ul><li>获取dns地址（<code>dnsIP()</code>）</li></ul><p><strong>源码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取DNS ip地址</span></span><br><span class="line"><span class="comment"> * @param dns_no dns序列号</span></span><br><span class="line"><span class="comment"> * @return 返回DNS服务的IP地址</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">IPAddress <span class="title function_">dnsIP</span><span class="params">(<span class="type">uint8_t</span> dns_no = <span class="number">0</span>)</span>;</span><br></pre></td></tr></table></figure><p><strong>应用：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Serial.print(<span class="string">&quot;DNS #1, #2 IP: &quot;</span>);</span><br><span class="line">WiFi.dnsIP().printTo(Serial);</span><br><span class="line">Serial.print(<span class="string">&quot;, &quot;</span>);</span><br><span class="line">WiFi.dnsIP(<span class="number">1</span>).printTo(Serial);</span><br><span class="line">Serial.println();</span><br><span class="line"><span class="comment">//DNS #1, #2 IP: 62.179.1.60, 62.179.1.61</span></span><br></pre></td></tr></table></figure><ul><li>获取host名字（<code>hostname()</code>）</li></ul><p><strong>源码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取ESP8266 station DHCP的主机名</span></span><br><span class="line"><span class="comment"> * @return 主机名</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String <span class="title function_">hostname</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><ul><li>设置host名字（<code>hostname(hostname)</code>）（3种）</li></ul><p><strong>源码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 设置ESP8266 station DHCP的主机名</span></span><br><span class="line"><span class="comment"> * @param aHostname 最大长度:32</span></span><br><span class="line"><span class="comment"> * @return ok</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">hostname</span><span class="params">(<span class="type">char</span>* aHostname)</span>;</span><br><span class="line"><span class="type">bool</span> <span class="title function_">hostname</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* aHostname)</span>;</span><br><span class="line"><span class="type">bool</span> <span class="title function_">hostname</span><span class="params">(String aHostname)</span>;</span><br></pre></td></tr></table></figure><p><strong>应用：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Serial.<span class="built_in">printf</span>(<span class="string">&quot;Default hostname: %s\n&quot;</span>, WiFi.hostname().c_str());</span><br><span class="line">WiFi.hostname(<span class="string">&quot;Station_Tester_02&quot;</span>);</span><br><span class="line">Serial.<span class="built_in">printf</span>(<span class="string">&quot;New hostname: %s\n&quot;</span>, WiFi.hostname().c_str());</span><br><span class="line"><span class="comment">//Default hostname: ESP_081117</span></span><br><span class="line"><span class="comment">//New hostname: Station_Tester_02</span></span><br></pre></td></tr></table></figure><ul><li>获取当前wifi连接状态（<code>status()</code>）</li></ul><p><strong>源码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 返回wifi的连接状态</span></span><br><span class="line"><span class="comment"> * @return 返回wl_status_t中定义的其中一值，wl_status_t在 wl_definitions.h中定义</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">wl_status_t</span> <span class="title function_">status</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><ul><li>获取wifi网络名字（<code>SSID()</code>）</li></ul><p><strong>源码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 返回当前通信网络的SSID</span></span><br><span class="line"><span class="comment"> * @return SSID</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String <span class="title function_">SSID</span><span class="params">()</span> <span class="type">const</span>;</span><br></pre></td></tr></table></figure><p><strong>应用：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//实例代码 这只是部分代码 不能直接使用</span></span><br><span class="line">Serial.<span class="built_in">printf</span>(<span class="string">&quot;SSID: %s\n&quot;</span>, WiFi.SSID().c_str());</span><br><span class="line"><span class="comment">//SSID: sensor-net</span></span><br></pre></td></tr></table></figure><ul><li>获取wifi网络密码（<code>psk()</code>）</li></ul><p><strong>源码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 返回当前通信网络的密码</span></span><br><span class="line"><span class="comment"> * @return psk</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String <span class="title function_">psk</span><span class="params">()</span> <span class="type">const</span>;</span><br></pre></td></tr></table></figure><ul><li>获取wifi网络macaddress（<code>BSSID()</code>）</li></ul><p><strong>源码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 返回当前通信网络的mac地址</span></span><br><span class="line"><span class="comment"> * @return bssid uint8_t *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">uint8_t</span> * <span class="title function_">BSSID</span><span class="params">()</span>;</span><br><span class="line">String <span class="title function_">BSSIDstr</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><p><strong>应用：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Serial.<span class="built_in">printf</span>(<span class="string">&quot;BSSID: %s\n&quot;</span>, WiFi.BSSIDstr().c_str());</span><br><span class="line"><span class="comment">//BSSID: 00:1A:70E:C1:68</span></span><br></pre></td></tr></table></figure><ul><li>获取wifi网络的信号强度（<code>RSSI()</code>）</li></ul><p><strong>源码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Return the current network RSSI.返回当前通信网络的信号强度，单位是dBm</span></span><br><span class="line"><span class="comment"> * @return  RSSI value</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">int32_t</span> <span class="title function_">RSSI</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><p><strong>应用：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Serial.<span class="built_in">printf</span>(<span class="string">&quot;RSSI: %d dBm\n&quot;</span>, WiFi.RSSI());</span><br><span class="line"><span class="comment">//RSSI: -68 dBm</span></span><br></pre></td></tr></table></figure></li><li><p>智能配置：</p><ul><li>进入智能配置功能（<code>beginSmartConfig()</code>）</li><li>查询智能配置状态（<code>smartConfigDone()</code>）</li><li>停止智能配置功能（<code>stopSmartConfig()</code>）</li><li><code>WiFi.beginWPSConfig()</code></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">bool</span> <span class="title function_">beginWPSConfig</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 启动 SmartConfig</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">beginSmartConfig</span><span class="params">()</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 停止 SmartConfig</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">stopSmartConfig</span><span class="params">()</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 查找SmartConfig状态来决定是否停止配置</span></span><br><span class="line"><span class="comment"> * @return smartConfig Done</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">smartConfigDone</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure></li></ol><h3 id="3、AP库（ESP8266WIFIAP）"><a href="#3、AP库（ESP8266WIFIAP）" class="headerlink" title="3、AP库（ESP8266WIFIAP）"></a>3、AP库（ESP8266WIFIAP）</h3><ol><li>配置soft-AP:<ul><li>启动开放式wifi网络（<code>softAP(ssid)</code>）</li><li>启动校验式wifi网络（<code>softAP(ssid,password,channel,hidden)</code>）</li><li>配置ap网络信息（<code>softAPConfig(local_ip,gateway,subnet)</code>）</li></ul></li><li>管理网络：<ul><li>获取连接到AP上的station的数目（<code>softAPgetStationNum()</code>）</li><li>关闭AP模式（<code>softAPdisconnect(bool wifi off)</code>）</li></ul></li><li>网络信息：<ul><li>获取ap的IP地址（<code>softAPIP()</code>）</li><li>获取ap的mac地址（<code>softAPmacAddress()</code>）</li></ul></li></ol><h3 id="4、WiFi扫描库（ESP8266WiFiScan）"><a href="#4、WiFi扫描库（ESP8266WiFiScan）" class="headerlink" title="4、WiFi扫描库（ESP8266WiFiScan）:"></a>4、WiFi扫描库（ESP8266WiFiScan）:</h3><p>一般使用异步扫描（不影响代码运行）</p><ol><li><p>扫描操作：</p><ul><li><p>同步扫描周边有效wifi网络（<code>scanNetworks()</code>）</p><p><strong>源码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Start scan WiFi networks available</span></span><br><span class="line"><span class="comment"> * @param async         run in async mode(是否启动异步扫描)</span></span><br><span class="line"><span class="comment"> * @param show_hidden   show hidden networks(是否扫描隐藏网络)</span></span><br><span class="line"><span class="comment"> * @param channel       scan only this channel (0 for all channels)(是否扫描特定通道)</span></span><br><span class="line"><span class="comment"> * @param ssid*         scan for only this ssid (NULL for all ssid&#x27;s)(是否扫描特定的SSID)</span></span><br><span class="line"><span class="comment"> * @return Number of discovered networks</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">int8_t</span> <span class="title function_">scanNetworks</span><span class="params">(<span class="type">bool</span> async = <span class="literal">false</span>, <span class="type">bool</span> show_hidden = <span class="literal">false</span>, uint8 channel = <span class="number">0</span>, uint8* ssid = <span class="literal">NULL</span>)</span>;</span><br></pre></td></tr></table></figure><p><strong>应用：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//实例代码 这只是部分代码 不能直接使用</span></span><br><span class="line"><span class="comment">//同步扫描</span></span><br><span class="line"><span class="type">int</span> n = WiFi.scanNetworks();<span class="comment">//不需要填任何参数</span></span><br><span class="line">Serial.println(<span class="string">&quot;scan done&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (n == <span class="number">0</span>) &#123;</span><br><span class="line">    Serial.println(<span class="string">&quot;no networks found&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    Serial.println(<span class="string">&quot; networks found&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>异步扫描周边有效wifi网络，包括隐藏网络（<code>scanNetworks(bool async,bool show_hiden)</code>）</p><p><strong>应用：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//实例代码 这只是部分代码 不能直接使用</span></span><br><span class="line"><span class="comment">//异步扫描</span></span><br><span class="line">WiFi.scanNetworks(<span class="literal">true</span>);</span><br><span class="line"><span class="comment">// print out Wi-Fi network scan result uppon completion</span></span><br><span class="line"><span class="type">int</span> n = WiFi.scanComplete();</span><br><span class="line"><span class="keyword">if</span>(n &gt;= <span class="number">0</span>)&#123;</span><br><span class="line">  Serial.<span class="built_in">printf</span>(<span class="string">&quot;%d network(s) found\n&quot;</span>, n);</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">     Serial.<span class="built_in">printf</span>(<span class="string">&quot;%d: %s, Ch:%d (%ddBm) %s\n&quot;</span>, i+<span class="number">1</span>, WiFi.SSID(i).c_str(), WiFi.channel(i), WiFi.RSSI(i), WiFi.encryptionType(i) == ENC_TYPE_NONE ? <span class="string">&quot;open&quot;</span> : <span class="string">&quot;&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//打印一次结果之后把缓存中的数据清掉</span></span><br><span class="line">  WiFi.scanDelete();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>检测异步扫描的结果（<code>scanComplete()</code>）</p><p><strong>源码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * called to get the scan state in Async mode(异步扫描的结果函数)</span></span><br><span class="line"><span class="comment"> * @return scan result or status</span></span><br><span class="line"><span class="comment"> *          -1 if scan not find</span></span><br><span class="line"><span class="comment"> *          -2 if scan not triggered</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">int8_t</span> <span class="title function_">scanComplete</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure></li><li><p>从内存中删除最近扫描结果（<code>scanDelete()</code>）</p><p>如果不删除，则会叠加上次扫描结果；</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * delete last scan result from RAM(从内存中删除最近的扫描结果)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">scanDelete</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure></li><li><p>异步扫描周边wifi网络，并回调结果（<code>scanNetworkAsync(onComplete,show_hidden)</code>）</p><p><strong>源码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Starts scanning WiFi networks available in async mode</span></span><br><span class="line"><span class="comment"> * @param onComplete    the event handler executed when the scan is done</span></span><br><span class="line"><span class="comment"> * @param show_hidden   show hidden networks</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">scanNetworksAsync</span><span class="params">(<span class="built_in">std</span>::function&lt;<span class="type">void</span>(<span class="type">int</span>)&gt; onComplete, <span class="type">bool</span> show_hidden = <span class="literal">false</span>)</span>;</span><br></pre></td></tr></table></figure><p><strong>应用：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//实例代码</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;ESP8266WiFi.h&quot;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">prinScanResult</span><span class="params">(<span class="type">int</span> networksFound)</span></span><br><span class="line">&#123;</span><br><span class="line">  Serial.<span class="built_in">printf</span>(<span class="string">&quot;%d network(s) found\n&quot;</span>, networksFound);</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; networksFound; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    Serial.<span class="built_in">printf</span>(<span class="string">&quot;%d: %s, Ch:%d (%ddBm) %s\n&quot;</span>, i + <span class="number">1</span>, WiFi.SSID(i).c_str(), WiFi.channel(i), WiFi.RSSI(i), WiFi.encryptionType(i) == ENC_TYPE_NONE ? <span class="string">&quot;open&quot;</span> : <span class="string">&quot;&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  Serial.begin(<span class="number">115200</span>);</span><br><span class="line">  Serial.println();</span><br><span class="line"> </span><br><span class="line">  WiFi.mode(WIFI_STA);</span><br><span class="line">  WiFi.disconnect();</span><br><span class="line">  delay(<span class="number">100</span>);</span><br><span class="line"> </span><br><span class="line">  WiFi.scanNetworksAsync(prinScanResult);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;&#125;</span><br><span class="line"><span class="comment">//应该会打印如下类似的显示</span></span><br><span class="line"><span class="comment">//5 network(s) found</span></span><br><span class="line"><span class="comment">//1: Tech_D005107, Ch:6 (-72dBm)</span></span><br><span class="line"><span class="comment">//2: HP-Print-A2-Photosmart 7520, Ch:6 (-79dBm)</span></span><br><span class="line"><span class="comment">//3: ESP_0B09E3, Ch:9 (-89dBm) open</span></span><br><span class="line"><span class="comment">//4: Hack-4-fun-net, Ch:9 (-91dBm)</span></span><br><span class="line"><span class="comment">//5: UPC Wi-Free, Ch:11 (-79dBm)</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>扫描结果：</p><ul><li><p>获取wifi网络名字（<code>SSID(int networkltem)</code>）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Return the SSID discovered during the network scan.</span></span><br><span class="line"><span class="comment"> * @param i     specify from which network item want to get the information</span></span><br><span class="line"><span class="comment"> * @return       ssid string of the specified item on the networks scanned list</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String <span class="title function_">SSID</span><span class="params">(<span class="type">uint8_t</span> networkItem)</span>;</span><br></pre></td></tr></table></figure></li><li><p>获取wifi网络信号强度（<code>RSS(int networkltem)</code>）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Return the RSSI of the networks discovered during the scanNetworks(信号强度)</span></span><br><span class="line"><span class="comment"> * @param i specify from which network item want to get the information</span></span><br><span class="line"><span class="comment"> * @return  signed value of RSSI of the specified item on the networks scanned list</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">int32_t</span> <span class="title function_">RSSI</span><span class="params">(<span class="type">uint8_t</span> networkItem)</span>;</span><br></pre></td></tr></table></figure></li><li><p>获取wifi网络加密方式（<code>encryption Type(int networkltem)</code>）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Return the encryption type of the networks discovered during the scanNetworks(加密方式)</span></span><br><span class="line"><span class="comment"> * @param i specify from which network item want to get the information</span></span><br><span class="line"><span class="comment"> * @return  encryption type (enum wl_enc_type) of the specified item on the networks scanned list</span></span><br><span class="line"><span class="comment"> * ............ Values map to 802.11 encryption suites.....................</span></span><br><span class="line"><span class="comment"> *    AUTH_OPEN          ----&gt;     ENC_TYPE_WEP  = 5,</span></span><br><span class="line"><span class="comment"> *    AUTH_WEP           ----&gt;     ENC_TYPE_TKIP = 2,</span></span><br><span class="line"><span class="comment"> *    AUTH_WPA_PSK       ----&gt;     ENC_TYPE_CCMP = 4,</span></span><br><span class="line"><span class="comment"> * ........... except these two, 7 and 8 are reserved in 802.11-2007.......</span></span><br><span class="line"><span class="comment"> *    AUTH_WPA2_PSK      ----&gt;     ENC_TYPE_NONE = 7,</span></span><br><span class="line"><span class="comment"> *    AUTH_WPA_WPA2_PSK  ----&gt;     ENC_TYPE_AUTO = 8</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">encryptionType</span><span class="params">(<span class="type">uint8_t</span> networkItem)</span>;</span><br></pre></td></tr></table></figure></li><li><p>获取wifi网络mac地址（<code>BSSID(int networkltem)</code>）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * return MAC / BSSID of scanned wifi (物理地址)</span></span><br><span class="line"><span class="comment"> * @param i specify from which network item want to get the information</span></span><br><span class="line"><span class="comment"> * @return uint8_t * MAC / BSSID of scanned wifi</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">uint8_t</span> * <span class="title function_">BSSID</span><span class="params">(<span class="type">uint8_t</span> networkItem)</span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * return MAC / BSSID of scanned wifi (物理地址)</span></span><br><span class="line"><span class="comment"> * @param i specify from which network item want to get the information</span></span><br><span class="line"><span class="comment"> * @return uint8_t * MAC / BSSID of scanned wifi</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String <span class="title function_">BSSIDstr</span><span class="params">(<span class="type">uint8_t</span> networkItem)</span>;</span><br></pre></td></tr></table></figure></li><li><p>获取整体网络信息，名字，信号强度等（<code>getNetworkInfo</code>）</p><p>入参前面多数加了&amp;，意味着调完函数后外面获取到的详细洗信息；</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * loads all infos from a scanned wifi in to the ptr parameters</span></span><br><span class="line"><span class="comment"> * @param networkItem uint8_t</span></span><br><span class="line"><span class="comment"> * @param ssid  const char**</span></span><br><span class="line"><span class="comment"> * @param encryptionType uint8_t *</span></span><br><span class="line"><span class="comment"> * @param RSSI int32_t *</span></span><br><span class="line"><span class="comment"> * @param BSSID uint8_t **</span></span><br><span class="line"><span class="comment"> * @param channel int32_t *</span></span><br><span class="line"><span class="comment"> * @param isHidden bool *</span></span><br><span class="line"><span class="comment"> * @return (true if ok)</span></span><br><span class="line"><span class="comment"> */</span>        </span><br><span class="line"><span class="type">bool</span> <span class="title function_">getNetworkInfo</span><span class="params">(<span class="type">uint8_t</span> networkItem, String &amp;ssid, <span class="type">uint8_t</span> &amp;encryptionType, <span class="type">int32_t</span> &amp;RSSI, <span class="type">uint8_t</span>* &amp;BSSID, <span class="type">int32_t</span> &amp;channel, <span class="type">bool</span> &amp;isHidden)</span>;</span><br></pre></td></tr></table></figure></li><li><p>获取wifi网络通道号</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * return channel of scanned wifi(通道号)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">int32_t</span> <span class="title function_">channel</span><span class="params">(<span class="type">uint8_t</span> networkItem)</span>;</span><br></pre></td></tr></table></figure></li><li><p>判断wifi网络是否是隐藏网络</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * return if the scanned wifi is Hidden (no SSID)(判断扫描到的wifi是否是隐藏wifi)</span></span><br><span class="line"><span class="comment"> * @param networkItem specify from which network item want to get the information</span></span><br><span class="line"><span class="comment"> * @return bool (true == hidden)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">isHidden</span><span class="params">(<span class="type">uint8_t</span> networkItem)</span>;</span><br></pre></td></tr></table></figure></li></ul></li></ol><h3 id="5、TCP客户端（WiFiClient）"><a href="#5、TCP客户端（WiFiClient）" class="headerlink" title="5、TCP客户端（WiFiClient）:"></a>5、TCP客户端（WiFiClient）:</h3><p><strong>TCP与HTTP关系：</strong></p><p>TCP是底层通讯协议，定义的是数据传输和连接方式的规范；</p><p>HTTP是应用层协议，定义的是传输数据的内容规范；</p><p>HTTP协议中的数据是利用TCP协议传输的，所以支持HTTP就支持TCP。</p><ol><li>连接操作：<ul><li>启动tcp连接（<code>connect(host,port)</code>）</li><li>判断client是否还在连接（<code>connected()</code>）</li><li>停止tcp连接（<code>stop()</code>）</li></ul></li><li>发送http请求操作：<ul><li><code>print()</code></li><li><code>println()</code></li><li><code>write()</code></li></ul></li><li>响应操作：<ul><li>判断是否有响应数据（<code>available()</code>）</li><li>查找响应数据某个字符串（<code>find()</code>）</li><li>读取响应数据直到某个字符串，会清除掉（<code>readStringUntil</code>）</li><li>读取响应数据中的一个字符，不清除（<code>peek()</code>）</li><li>读取固定大小的响应数据，不清除（<code>peekBytes(buf,size)</code>）</li><li>读取响应数据中的一个字符，清掉（<code>read()</code>）</li><li>读取固定大小的响应数据，清掉（<code>read(buf,size)</code>）</li><li>清掉缓冲区（<code>flush()</code>）</li></ul></li><li>普通设置：<code>setNoDelay()</code></li></ol><h3 id="6、TCP客户端（WiFiClientSecure-https）"><a href="#6、TCP客户端（WiFiClientSecure-https）" class="headerlink" title="6、TCP客户端（WiFiClientSecure https）:"></a>6、TCP客户端（WiFiClientSecure https）:</h3><h3 id="7、TCP服务端（WiFiServer）"><a href="#7、TCP服务端（WiFiServer）" class="headerlink" title="7、TCP服务端（WiFiServer）:"></a>7、TCP服务端（WiFiServer）:</h3><ol><li>管理server:<ol><li>设置tcp server:<ul><li>新增tcp server（<code>WiFiServer server(port)</code>）</li><li>启动tcp server（<code>begin()</code>）</li><li>关闭小包合并发送功能（<code>setNoDelay(true)</code>）</li></ul></li><li>停止server:<ul><li><code>close()</code></li><li><code>stop()</code>（内部实现直接调用close()）</li></ul></li><li>server状态 :   <code>server.status()</code></li></ol></li><li>等待WiFiClient访问：<ul><li>判断是否有新的client连接进来（<code>available()</code>）</li><li>判断是否有client连接（<code>has Client()</code>）</li></ul></li><li>读取WiFiClient的请求：参考WiFiClient里面的响应方法</li></ol><h3 id="8、TCP服务端（WiFiServerSecure-https）"><a href="#8、TCP服务端（WiFiServerSecure-https）" class="headerlink" title="8、TCP服务端（WiFiServerSecure https）"></a>8、TCP服务端（WiFiServerSecure https）</h3><h3 id="9、ESP8266WiFi库自带方法："><a href="#9、ESP8266WiFi库自带方法：" class="headerlink" title="9、ESP8266WiFi库自带方法："></a>9、ESP8266WiFi库自带方法：</h3><ul><li>调用调试信息（<code>printDiag(serial)</code>）</li></ul><p><strong>总结：</strong><img src="https://z3.ax1x.com/2021/08/05/fedfFe.png" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/08/05/fedfFe.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="fedfFe.png">](<a href="https://imgtu.com/i/fedfFe">https://imgtu.com/i/fedfFe</a>)</p><h2 id="3、示例"><a href="#3、示例" class="headerlink" title="3、示例"></a>3、示例</h2><h3 id="1、AP模式"><a href="#1、AP模式" class="headerlink" title="1、AP模式"></a>1、AP模式</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *    AP模式下，演示AP 函数方法的使用(最多连接4个)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WiFi.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="keyword">define</span> AP_SSID <span class="string">&quot;AP_Test&quot;</span> <span class="comment">//这里改成你的AP名字</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> AP_PSW  <span class="string">&quot;12345678&quot;</span> <span class="comment">//这里改成你的AP密码 8位以上</span></span></span><br><span class="line"><span class="comment">//以下三个定义为调试定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugBegin(baud_rate)    Serial.begin(baud_rate)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrintln(message)    Serial.println(message)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrint(message)    Serial.print(message)</span></span><br><span class="line"> </span><br><span class="line">IPAddress <span class="title function_">local_IP</span><span class="params">(<span class="number">192</span>,<span class="number">168</span>,<span class="number">4</span>,<span class="number">1</span>)</span>;</span><br><span class="line">IPAddress <span class="title function_">gateway</span><span class="params">(<span class="number">192</span>,<span class="number">168</span>,<span class="number">4</span>,<span class="number">1</span>)</span>;</span><br><span class="line">IPAddress <span class="title function_">subnet</span><span class="params">(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0</span>)</span>;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span>&#123;</span><br><span class="line">  <span class="comment">//设置串口波特率，以便打印信息</span></span><br><span class="line">  DebugBegin(<span class="number">115200</span>);</span><br><span class="line">  <span class="comment">//延时2s 为了演示效果</span></span><br><span class="line">  delay(<span class="number">2000</span>);</span><br><span class="line">  DebugPrint(<span class="string">&quot;Setting soft-AP configuration ... &quot;</span>);</span><br><span class="line">  <span class="comment">//配置AP信息</span></span><br><span class="line">  WiFi.mode(WIFI_AP);</span><br><span class="line">  DebugPrintln(WiFi.softAPConfig(local_IP, gateway, subnet) ? <span class="string">&quot;Ready&quot;</span> : <span class="string">&quot;Failed!&quot;</span>);</span><br><span class="line">  <span class="comment">//启动AP模式，并设置账号和密码</span></span><br><span class="line">  DebugPrint(<span class="string">&quot;Setting soft-AP ... &quot;</span>);</span><br><span class="line">  boolean result = WiFi.softAP(AP_SSID, AP_PSW);</span><br><span class="line">  <span class="keyword">if</span>(result)&#123;</span><br><span class="line">    DebugPrintln(<span class="string">&quot;Ready&quot;</span>);</span><br><span class="line">    <span class="comment">//输出 soft-ap ip地址</span></span><br><span class="line">    DebugPrintln(String(<span class="string">&quot;Soft-AP IP address = &quot;</span>) + WiFi.softAPIP().toString());</span><br><span class="line">    <span class="comment">//输出 soft-ap mac地址</span></span><br><span class="line">    DebugPrintln(String(<span class="string">&quot;MAC address = &quot;</span>) + WiFi.softAPmacAddress().c_str());</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    DebugPrintln(<span class="string">&quot;Failed!&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  DebugPrintln(<span class="string">&quot;Setup End&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="comment">//不断打印当前的station个数</span></span><br><span class="line">  DebugPrintln(String(<span class="string">&quot;Stations connected =&quot;</span>) + WiFi.softAPgetStationNum());</span><br><span class="line">  delay(<span class="number">3000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2、STA模式"><a href="#2、STA模式" class="headerlink" title="2、STA模式"></a>2、STA模式</h3><p>1. </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Demo1：</span></span><br><span class="line"><span class="comment"> *    statin模式下，创建一个连接到可接入点（wifi热点），并且打印IP地址</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WiFi.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="keyword">define</span> AP_SSID <span class="string">&quot;XU-ChinaNet&quot;</span> <span class="comment">//这里改成你的wifi名字</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> AP_PSW  <span class="string">&quot;15358228063&quot;</span><span class="comment">//这里改成你的wifi密码</span></span></span><br><span class="line"><span class="comment">//以下三个定义为调试定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugBegin(baud_rate)    Serial.begin(baud_rate)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrintln(message)    Serial.println(message)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrint(message)    Serial.print(message)</span></span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span>&#123;</span><br><span class="line">  <span class="comment">//设置串口波特率，以便打印信息</span></span><br><span class="line">  DebugBegin(<span class="number">115200</span>);</span><br><span class="line">  <span class="comment">//延时2s 为了演示效果</span></span><br><span class="line">  delay(<span class="number">2000</span>);</span><br><span class="line">  DebugPrintln(<span class="string">&quot;Setup start&quot;</span>);</span><br><span class="line">  <span class="comment">//启动STA模式，并连接到wifi网络</span></span><br><span class="line">  WiFi.mode(WIFI_STA);<span class="comment">//最好人为加上STA设置（虽然默认是STA模式）</span></span><br><span class="line">  WiFi.disconnect();<span class="comment">//最好调用一下断连</span></span><br><span class="line">  WiFi.begin(AP_SSID, AP_PSW);</span><br><span class="line">  DebugPrint(String(<span class="string">&quot;Connecting to &quot;</span>)+AP_SSID);</span><br><span class="line">  <span class="comment">//判断网络状态是否连接上，没连接上就延时500ms，并且打出一个点，模拟连接过程</span></span><br><span class="line">  <span class="comment">//笔者扩展：加入网络一直都连不上 是否可以做个判断，由你们自己实现</span></span><br><span class="line">  <span class="keyword">while</span> (WiFi.status() != WL_CONNECTED)&#123;</span><br><span class="line">    delay(<span class="number">500</span>);</span><br><span class="line">    DebugPrint(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  DebugPrintln(<span class="string">&quot;&quot;</span>);</span><br><span class="line">  DebugPrint(<span class="string">&quot;Connected, IP address: &quot;</span>);</span><br><span class="line">  <span class="comment">//输出station IP地址，这里的IP地址由DHCP分配</span></span><br><span class="line">  DebugPrintln(WiFi.localIP());</span><br><span class="line">  DebugPrintln(<span class="string">&quot;Setup End&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2. </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Demo2：固定IP</span></span><br><span class="line"><span class="comment"> *    statin模式下，配置IP地址，网关地址，子网掩码，并且打印IP地址</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WiFi.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="keyword">define</span> AP_SSID <span class="string">&quot;XU-ChinaNet&quot;</span> <span class="comment">//这里改成你的wifi名字</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> AP_PSW  <span class="string">&quot;15358228063&quot;</span><span class="comment">//这里改成你的wifi密码</span></span></span><br><span class="line"><span class="comment">//以下三个定义为调试定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugBegin(baud_rate)    Serial.begin(baud_rate)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrintln(message)    Serial.println(message)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrint(message)    Serial.print(message)</span></span><br><span class="line"> </span><br><span class="line">IPAddress <span class="title function_">staticIP</span><span class="params">(<span class="number">192</span>,<span class="number">168</span>,<span class="number">1</span>,<span class="number">22</span>)</span>;<span class="comment">//固定IP地址</span></span><br><span class="line">IPAddress <span class="title function_">gateway</span><span class="params">(<span class="number">192</span>,<span class="number">168</span>,<span class="number">1</span>,<span class="number">9</span>)</span>;<span class="comment">//网关地址</span></span><br><span class="line">IPAddress <span class="title function_">subnet</span><span class="params">(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0</span>)</span>;<span class="comment">//子网掩码地址</span></span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span>&#123;</span><br><span class="line">  <span class="comment">//设置串口波特率，以便打印信息</span></span><br><span class="line">  DebugBegin(<span class="number">115200</span>);</span><br><span class="line">  <span class="comment">//延时2s 为了演示效果</span></span><br><span class="line">  delay(<span class="number">2000</span>);</span><br><span class="line">  DebugPrintln(<span class="string">&quot;Setup start&quot;</span>);</span><br><span class="line">  <span class="comment">//启动STA模式，并连接到wifi网络</span></span><br><span class="line">  WiFi.begin(AP_SSID, AP_PSW);</span><br><span class="line">  DebugPrint(String(<span class="string">&quot;Connecting to &quot;</span>)+AP_SSID);</span><br><span class="line">  <span class="comment">//配置网络</span></span><br><span class="line">  WiFi.config(staticIP,gateway,subnet);</span><br><span class="line">  <span class="comment">//判断网络状态是否连接上，没连接上就延时500ms，并且打出一个点，模拟连接过程</span></span><br><span class="line">  <span class="comment">//笔者扩展：加入网络一直都连不上 是否可以做个判断，由你们自己实现</span></span><br><span class="line">  <span class="keyword">while</span> (WiFi.status() != WL_CONNECTED)&#123;</span><br><span class="line">    delay(<span class="number">500</span>);</span><br><span class="line">    DebugPrint(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  DebugPrintln(<span class="string">&quot;&quot;</span>);</span><br><span class="line"> </span><br><span class="line">  DebugPrint(<span class="string">&quot;Connected, IP address: &quot;</span>);</span><br><span class="line">  <span class="comment">//输出station IP地址，这里的IP地址理论上就是上面配置的</span></span><br><span class="line">  DebugPrintln(WiFi.localIP());</span><br><span class="line">  DebugPrintln(<span class="string">&quot;Setup End&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3. </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Demo3：</span></span><br><span class="line"><span class="comment"> *    statin模式下，创建一个连接到可接入点（wifi热点），并且打印station信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WiFi.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="keyword">define</span> AP_SSID <span class="string">&quot;XU-ChinaNet&quot;</span> <span class="comment">//这里改成你的wifi名字</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> AP_PSW  <span class="string">&quot;15358228063&quot;</span><span class="comment">//这里改成你的wifi密码</span></span></span><br><span class="line"><span class="comment">//以下三个定义为调试定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugBegin(baud_rate)    Serial.begin(baud_rate)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrintln(message)    Serial.println(message)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrint(message)    Serial.print(message)</span></span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span>&#123;</span><br><span class="line">  <span class="comment">//设置串口波特率，以便打印信息</span></span><br><span class="line">  DebugBegin(<span class="number">115200</span>);</span><br><span class="line">  <span class="comment">//延时2s 为了演示效果</span></span><br><span class="line">  delay(<span class="number">2000</span>);</span><br><span class="line">  DebugPrintln(<span class="string">&quot;Setup start&quot;</span>);</span><br><span class="line">  <span class="comment">//启动STA模式，并连接到wifi网络</span></span><br><span class="line">  WiFi.begin(AP_SSID, AP_PSW);</span><br><span class="line">  <span class="comment">//设置自动连接</span></span><br><span class="line">  WiFi.setAutoConnect(<span class="literal">true</span>);</span><br><span class="line">  <span class="comment">//设置自动重连</span></span><br><span class="line">  WiFi.setAutoReconnect(<span class="literal">true</span>);</span><br><span class="line">  DebugPrint(String(<span class="string">&quot;Connecting to &quot;</span>)+AP_SSID);</span><br><span class="line">  <span class="comment">//判断网络状态是否连接上，没连接上就延时500ms，并且打出一个点，模拟连接过程</span></span><br><span class="line">  <span class="comment">//笔者扩展：加入网络一直都连不上 是否可以做个判断，由你们自己实现</span></span><br><span class="line">  <span class="keyword">while</span> (WiFi.status() != WL_CONNECTED)&#123;</span><br><span class="line">    delay(<span class="number">500</span>);</span><br><span class="line">    DebugPrint(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  DebugPrintln(<span class="string">&quot;&quot;</span>);</span><br><span class="line"> </span><br><span class="line">  DebugPrintln(<span class="string">&quot;rint Network Info:&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> (WiFi.status() == WL_CONNECTED)&#123;</span><br><span class="line">     <span class="comment">//输出mac地址</span></span><br><span class="line">     DebugPrintln(String(<span class="string">&quot;Connected, mac address: &quot;</span>)+WiFi.macAddress().c_str());</span><br><span class="line">     </span><br><span class="line">     <span class="comment">//输出station IP地址，这里的IP地址由DHCP分配</span></span><br><span class="line">     DebugPrintln(String(<span class="string">&quot;Connected, IP address: &quot;</span>)+WiFi.localIP().toString());</span><br><span class="line">     </span><br><span class="line">     <span class="comment">//输出子网掩码地址</span></span><br><span class="line">     DebugPrintln(String(<span class="string">&quot;Subnet mask: &quot;</span>)+WiFi.subnetMask().toString());</span><br><span class="line">     </span><br><span class="line">     <span class="comment">//输出网关 IP地址</span></span><br><span class="line">     DebugPrintln(String(<span class="string">&quot;Gataway IP: &quot;</span>)+WiFi.gatewayIP().toString());</span><br><span class="line">     </span><br><span class="line">     <span class="comment">//输出hostname</span></span><br><span class="line">     DebugPrintln(String(<span class="string">&quot;Default hostname: &quot;</span>)+WiFi.hostname());</span><br><span class="line">     <span class="comment">//设置新的hostname</span></span><br><span class="line">     WiFi.hostname(<span class="string">&quot;Station_host_123&quot;</span>);</span><br><span class="line">     DebugPrintln(String(<span class="string">&quot;New hostname: &quot;</span>)+WiFi.hostname());</span><br><span class="line">     </span><br><span class="line">     <span class="comment">//输出SSID</span></span><br><span class="line">     DebugPrintln(String(<span class="string">&quot;SSID: &quot;</span>)+WiFi.SSID());</span><br><span class="line"> </span><br><span class="line">     <span class="comment">//输出psk</span></span><br><span class="line">     DebugPrintln(String(<span class="string">&quot;psk: &quot;</span>)+WiFi.psk());</span><br><span class="line">     </span><br><span class="line">     <span class="comment">//输出BSSID</span></span><br><span class="line">     DebugPrintln(String(<span class="string">&quot;BSSID: &quot;</span>)+WiFi.BSSIDstr());</span><br><span class="line">     </span><br><span class="line">     <span class="comment">//输出RSSI</span></span><br><span class="line">     DebugPrintln(String(<span class="string">&quot;RSSI: &quot;</span>) + WiFi.RSSI() + <span class="string">&quot; dBm&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  DebugPrintln(<span class="string">&quot;Setup End&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3、扫描："><a href="#3、扫描：" class="headerlink" title="3、扫描："></a>3、扫描：</h3><p>1. </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Demo：</span></span><br><span class="line"><span class="comment"> *    STA模式下，演示同步扫描Scan wifi功能</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WiFi.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//以下三个定义为调试定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugBegin(baud_rate)    Serial.begin(baud_rate)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrintln(message)    Serial.println(message)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrint(message)    Serial.print(message)</span></span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="comment">//设置串口波特率，以便打印信息</span></span><br><span class="line">  DebugBegin(<span class="number">115200</span>);</span><br><span class="line">  <span class="comment">//延时5s 为了演示效果</span></span><br><span class="line">  delay(<span class="number">5000</span>);</span><br><span class="line">  <span class="comment">// 我不想别人连接我，只想做个站点</span></span><br><span class="line">  WiFi.mode(WIFI_STA);</span><br><span class="line">  <span class="comment">//断开连接</span></span><br><span class="line">  WiFi.disconnect();</span><br><span class="line">  delay(<span class="number">100</span>);</span><br><span class="line">  DebugPrintln(<span class="string">&quot;Setup done&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">  DebugPrintln(<span class="string">&quot;scan start&quot;</span>);</span><br><span class="line">  <span class="comment">// 同步扫描，等待返回结果</span></span><br><span class="line">  <span class="type">int</span> n = WiFi.scanNetworks();</span><br><span class="line">  DebugPrintln(<span class="string">&quot;scan done&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> (n == <span class="number">0</span>)&#123;</span><br><span class="line">    DebugPrintln(<span class="string">&quot;no networks found&quot;</span>);</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    DebugPrint(n);</span><br><span class="line">    DebugPrintln(<span class="string">&quot; networks found&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line">      DebugPrint(i + <span class="number">1</span>);</span><br><span class="line">      DebugPrint(<span class="string">&quot;: &quot;</span>);</span><br><span class="line">      <span class="comment">//打印wifi账号</span></span><br><span class="line">      DebugPrint(WiFi.SSID(i));</span><br><span class="line">      DebugPrint(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">      DebugPrint(String(<span class="string">&quot;Ch:&quot;</span>)+WiFi.channel(i));</span><br><span class="line">      DebugPrint(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">      DebugPrint(WiFi.isHidden(i)?<span class="string">&quot;hide&quot;</span>:<span class="string">&quot;show&quot;</span>);</span><br><span class="line">      DebugPrint(<span class="string">&quot; (&quot;</span>);</span><br><span class="line">      <span class="comment">//打印wifi信号强度</span></span><br><span class="line">      DebugPrint(WiFi.RSSI(i));</span><br><span class="line">      DebugPrint(<span class="string">&quot;dBm&quot;</span>);</span><br><span class="line">      DebugPrint(<span class="string">&quot;)&quot;</span>);</span><br><span class="line">      <span class="comment">//打印wifi加密方式</span></span><br><span class="line">      DebugPrintln((WiFi.encryptionType(i) == ENC_TYPE_NONE)?<span class="string">&quot;open&quot;</span>:<span class="string">&quot;*&quot;</span>);</span><br><span class="line">      delay(<span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  DebugPrintln(<span class="string">&quot;&quot;</span>);</span><br><span class="line">  <span class="comment">// 延时5s之后再次扫描</span></span><br><span class="line">  delay(<span class="number">5000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2. </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Demo：</span></span><br><span class="line"><span class="comment"> *    STA模式下，演示异步扫描Scan wifi功能</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WiFi.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//以下三个定义为调试定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugBegin(baud_rate)    Serial.begin(baud_rate)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrintln(message)    Serial.println(message)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrint(message)    Serial.print(message)</span></span><br><span class="line"><span class="comment">//定义一个扫描时间间隔</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SCAN_PERIOD 5000</span></span><br><span class="line"><span class="type">long</span> lastScanMillis;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="comment">//设置串口波特率，以便打印信息</span></span><br><span class="line">  DebugBegin(<span class="number">115200</span>);</span><br><span class="line">  <span class="comment">//延时5s 为了演示效果</span></span><br><span class="line">  delay(<span class="number">5000</span>);</span><br><span class="line">  <span class="comment">// 我不想别人连接我，只想做个站点</span></span><br><span class="line">  WiFi.mode(WIFI_STA);</span><br><span class="line">  <span class="comment">//断开连接</span></span><br><span class="line">  WiFi.disconnect();</span><br><span class="line">  delay(<span class="number">100</span>);</span><br><span class="line">  DebugPrintln(<span class="string">&quot;Setup done&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line"> </span><br><span class="line"> <span class="type">long</span> currentMillis = millis();</span><br><span class="line"> <span class="comment">//触发扫描</span></span><br><span class="line"> <span class="keyword">if</span> (currentMillis - lastScanMillis &gt; SCAN_PERIOD)&#123;</span><br><span class="line">    WiFi.scanNetworks(<span class="literal">true</span>);</span><br><span class="line">    Serial.print(<span class="string">&quot;\nScan start ... &quot;</span>);</span><br><span class="line">    lastScanMillis = currentMillis;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="comment">// 判断是否有扫描结果</span></span><br><span class="line">  <span class="type">int</span> n = WiFi.scanComplete();</span><br><span class="line">  <span class="keyword">if</span>(n &gt;= <span class="number">0</span>)&#123;</span><br><span class="line">    Serial.<span class="built_in">printf</span>(<span class="string">&quot;%d network(s) found\n&quot;</span>, n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">      Serial.<span class="built_in">printf</span>(<span class="string">&quot;%d: %s, Ch:%d (%ddBm) %s\n&quot;</span>, i+<span class="number">1</span>, WiFi.SSID(i).c_str(), WiFi.channel(i), WiFi.RSSI(i), WiFi.encryptionType(i) == ENC_TYPE_NONE ? <span class="string">&quot;open&quot;</span> : <span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//打印完一次扫描结果之后  删除内存保存结果</span></span><br><span class="line">    WiFi.scanDelete();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3. </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Demo：</span></span><br><span class="line"><span class="comment"> *    STA模式下，演示异步扫描Scan wifi功能</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WiFi.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//以下三个定义为调试定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugBegin(baud_rate)    Serial.begin(baud_rate)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrintln(message)    Serial.println(message)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrint(message)    Serial.print(message)</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 打印扫描结果</span></span><br><span class="line"><span class="comment"> * @param networksFound 结果个数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">prinScanResult</span><span class="params">(<span class="type">int</span> networksFound)</span>&#123;</span><br><span class="line">  Serial.<span class="built_in">printf</span>(<span class="string">&quot;%d network(s) found\n&quot;</span>, networksFound);</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; networksFound; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    Serial.<span class="built_in">printf</span>(<span class="string">&quot;%d: %s, Ch:%d (%ddBm) %s\n&quot;</span>, i + <span class="number">1</span>, WiFi.SSID(i).c_str(), WiFi.channel(i), WiFi.RSSI(i), WiFi.encryptionType(i) == ENC_TYPE_NONE ? <span class="string">&quot;open&quot;</span> : <span class="string">&quot;&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="comment">//设置串口波特率，以便打印信息</span></span><br><span class="line">  DebugBegin(<span class="number">115200</span>);</span><br><span class="line">  <span class="comment">//延时5s 为了演示效果</span></span><br><span class="line">  delay(<span class="number">5000</span>);</span><br><span class="line">  <span class="comment">// 我不想别人连接我，只想做个站点</span></span><br><span class="line">  WiFi.mode(WIFI_STA);</span><br><span class="line">  <span class="comment">//断开连接</span></span><br><span class="line">  WiFi.disconnect();</span><br><span class="line">  delay(<span class="number">100</span>);</span><br><span class="line">  DebugPrintln(<span class="string">&quot;Setup done&quot;</span>);</span><br><span class="line">  Serial.print(<span class="string">&quot;\nScan start ... &quot;</span>);</span><br><span class="line">  WiFi.scanNetworksAsync(prinScanResult);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4、通用库处理事件："><a href="#4、通用库处理事件：" class="headerlink" title="4、通用库处理事件："></a>4、通用库处理事件：</h3><ol><li>官方示例：(AP模式)</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    This sketch shows how to use WiFi event handlers.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    In this example, ESP8266 works in AP mode.</span></span><br><span class="line"><span class="comment">    Three event handlers are demonstrated:</span></span><br><span class="line"><span class="comment">    - station connects to the ESP8266 AP</span></span><br><span class="line"><span class="comment">    - station disconnects from the ESP8266 AP</span></span><br><span class="line"><span class="comment">    - ESP8266 AP receives a probe request from a station</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WiFi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* ssid     = <span class="string">&quot;ap-ssid&quot;</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* password = <span class="string">&quot;ap-password&quot;</span>;</span><br><span class="line"></span><br><span class="line">WiFiEventHandler stationConnectedHandler;</span><br><span class="line">WiFiEventHandler stationDisconnectedHandler;</span><br><span class="line">WiFiEventHandler probeRequestPrintHandler;</span><br><span class="line">WiFiEventHandler probeRequestBlinkHandler;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> blinkFlag;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">  Serial.begin(<span class="number">115200</span>);</span><br><span class="line">  pinMode(LED_BUILTIN, OUTPUT);</span><br><span class="line">  digitalWrite(LED_BUILTIN, HIGH);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 不保存任何wifi配置到flash</span></span><br><span class="line">  WiFi.persistent(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 建立一个AP</span></span><br><span class="line">  WiFi.mode(WIFI_AP);</span><br><span class="line">  WiFi.softAP(ssid, password);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 注册事件处理器</span></span><br><span class="line">  <span class="comment">// 回调函数会在事件发生时被调用</span></span><br><span class="line">  <span class="comment">// onStationConnected函数会在每一次有station连接时调用</span></span><br><span class="line">  stationConnectedHandler = WiFi.onSoftAPModeStationConnected(&amp;onStationConnected);</span><br><span class="line">  <span class="comment">// onStationDisconnected函数会在每一次有station断开时调用</span></span><br><span class="line">  stationDisconnectedHandler = WiFi.onSoftAPModeStationDisconnected(&amp;onStationDisconnected);</span><br><span class="line">  <span class="comment">// onProbeRequestPrint和onProbeRequestBlink函数会在每一次收到探针请求时调用</span></span><br><span class="line">  <span class="comment">// onProbeRequestPrint会打印station的mac地址和信号强度到串口监视器</span></span><br><span class="line">  <span class="comment">// onProbeRequestBlink会闪烁LED</span></span><br><span class="line">  probeRequestPrintHandler = WiFi.onSoftAPModeProbeRequestReceived(&amp;onProbeRequestPrint);</span><br><span class="line">  probeRequestBlinkHandler = WiFi.onSoftAPModeProbeRequestReceived(&amp;onProbeRequestBlink);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">onStationConnected</span><span class="params">(<span class="type">const</span> WiFiEventSoftAPModeStationConnected&amp; evt)</span> &#123;</span><br><span class="line">  Serial.print(<span class="string">&quot;Station connected: &quot;</span>);</span><br><span class="line">  Serial.println(macToString(evt.mac));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">onStationDisconnected</span><span class="params">(<span class="type">const</span> WiFiEventSoftAPModeStationDisconnected&amp; evt)</span> &#123;</span><br><span class="line">  Serial.print(<span class="string">&quot;Station disconnected: &quot;</span>);</span><br><span class="line">  Serial.println(macToString(evt.mac));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">onProbeRequestPrint</span><span class="params">(<span class="type">const</span> WiFiEventSoftAPModeProbeRequestReceived&amp; evt)</span> &#123;</span><br><span class="line">  Serial.print(<span class="string">&quot;Probe request from: &quot;</span>);</span><br><span class="line">  Serial.print(macToString(evt.mac));</span><br><span class="line">  Serial.print(<span class="string">&quot; RSSI: &quot;</span>);</span><br><span class="line">  Serial.println(evt.rssi);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">onProbeRequestBlink</span><span class="params">(<span class="type">const</span> WiFiEventSoftAPModeProbeRequestReceived&amp;)</span> &#123;</span><br><span class="line">  <span class="comment">// 我们不能在事件处理函数中调用延时函数或者其他阻塞函数</span></span><br><span class="line">  <span class="comment">// 因此这里设置一个标志位</span></span><br><span class="line">  blinkFlag = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (millis() &gt; <span class="number">10000</span> &amp;&amp; probeRequestPrintHandler) &#123;</span><br><span class="line">    <span class="comment">// 10s之后，禁止 onProbeRequestPrint</span></span><br><span class="line">    Serial.println(<span class="string">&quot;Not printing probe requests any more (LED should still blink)&quot;</span>);</span><br><span class="line">    probeRequestPrintHandler = WiFiEventHandler();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (blinkFlag) &#123;</span><br><span class="line">    blinkFlag = <span class="literal">false</span>;</span><br><span class="line">    digitalWrite(LED_BUILTIN, LOW);</span><br><span class="line">    delay(<span class="number">100</span>);</span><br><span class="line">    digitalWrite(LED_BUILTIN, HIGH);</span><br><span class="line">  &#125;</span><br><span class="line">  delay(<span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">String <span class="title function_">macToString</span><span class="params">(<span class="type">const</span> <span class="type">unsigned</span> <span class="type">char</span>* mac)</span> &#123;</span><br><span class="line">  <span class="type">char</span> buf[<span class="number">20</span>];</span><br><span class="line">  <span class="built_in">snprintf</span>(buf, <span class="keyword">sizeof</span>(buf), <span class="string">&quot;%02x:%02x:%02x:%02x:%02x:%02x&quot;</span>,</span><br><span class="line">           mac[<span class="number">0</span>], mac[<span class="number">1</span>], mac[<span class="number">2</span>], mac[<span class="number">3</span>], mac[<span class="number">4</span>], mac[<span class="number">5</span>]);</span><br><span class="line">  <span class="keyword">return</span> String(buf);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>station模式：</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WiFi.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">char</span> *ssid = <span class="string">&quot;********&quot;</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span> *password = <span class="string">&quot;********&quot;</span>;</span><br><span class="line"></span><br><span class="line">WiFiEventHandler STAConnected;</span><br><span class="line">WiFiEventHandler STADisconnected;</span><br><span class="line">WiFiEventHandler STAGotIP;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">ConnectedHandler</span><span class="params">(<span class="type">const</span> WiFiEventStationModeConnected &amp;event)</span></span><br><span class="line">&#123;</span><br><span class="line">    Serial.println(WiFi.status());</span><br><span class="line">    Serial.println(<span class="string">&quot;模块连接到网络&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">DisconnectedHandler</span><span class="params">(<span class="type">const</span> WiFiEventStationModeDisconnected &amp;event)</span></span><br><span class="line">&#123;</span><br><span class="line">    Serial.println(WiFi.status());</span><br><span class="line">    Serial.println(<span class="string">&quot;模块从网络断开&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Serial.begin(<span class="number">115200</span>);</span><br><span class="line">    Serial.println();</span><br><span class="line"></span><br><span class="line">    STAConnected = WiFi.onStationModeConnected(ConnectedHandler);</span><br><span class="line">    STADisconnected = WiFi.onStationModeDisconnected(DisconnectedHandler);</span><br><span class="line">    STAGotIP = WiFi.onStationModeGotIP([](<span class="type">const</span> WiFiEventStationModeGotIP &amp;event) &#123;</span><br><span class="line">        Serial.println(WiFi.status());</span><br><span class="line">        Serial.println(<span class="string">&quot;模块获得IP&quot;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    WiFi.mode(WIFI_STA);</span><br><span class="line">    WiFi.begin(ssid, password);</span><br><span class="line">    Serial.println(WiFi.status());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    delay(<span class="number">5000</span>); <span class="comment">//等待5秒</span></span><br><span class="line">    WiFi.disconnect(); <span class="comment">//断开当前网络连接</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5、TCP客户端（client）"><a href="#5、TCP客户端（client）" class="headerlink" title="5、TCP客户端（client）"></a>5、TCP客户端（client）</h3><ol><li>演视WiFiClient与TCP server之间通信功能（使用TCP调试助手（TCP&#x2F;UDP Socket调试工具））在TCP调试助手上建立一个TCP server, IP地址是192.168.1.102，端口号是8234。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Demo：</span></span><br><span class="line"><span class="comment"> *    STA模式下，演示WiFiClient与TCP server之间的通信功能</span></span><br><span class="line"><span class="comment"> *    本实验需要跟TCP调试助手一起使用。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WiFi.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//以下三个定义为调试定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugBegin(baud_rate)    Serial.begin(baud_rate)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrintln(message)    Serial.println(message)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrint(message)    Serial.print(message)</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="keyword">define</span> AP_SSID <span class="string">&quot;XU-ChinaNet&quot;</span> <span class="comment">//这里改成你的wifi名字</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> AP_PSW  <span class="string">&quot;15358228063&quot;</span><span class="comment">//这里改成你的wifi密码</span></span></span><br><span class="line"> </span><br><span class="line"><span class="type">const</span> <span class="type">uint16_t</span> port = <span class="number">8234</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span> * host = <span class="string">&quot;192.168.1.8&quot;</span>; <span class="comment">// ip or dns</span></span><br><span class="line">WiFiClient client;<span class="comment">//创建一个tcp client连接</span></span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="comment">//设置串口波特率，以便打印信息</span></span><br><span class="line">  DebugBegin(<span class="number">115200</span>);</span><br><span class="line">  <span class="comment">//延时5s 为了演示效果</span></span><br><span class="line">  delay(<span class="number">5000</span>);</span><br><span class="line">  <span class="comment">// 我不想别人连接我，只想做个站点</span></span><br><span class="line">  WiFi.mode(WIFI_STA);</span><br><span class="line">  WiFi.begin(AP_SSID,AP_PSW);</span><br><span class="line"> </span><br><span class="line">  DebugPrint(<span class="string">&quot;Wait for WiFi... &quot;</span>);</span><br><span class="line">  <span class="comment">//等待wifi连接成功</span></span><br><span class="line">  <span class="keyword">while</span> (WiFi.status() != WL_CONNECTED) &#123;</span><br><span class="line">    Serial.print(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">    delay(<span class="number">500</span>);</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  DebugPrintln(<span class="string">&quot;&quot;</span>);</span><br><span class="line">  DebugPrintln(<span class="string">&quot;WiFi connected&quot;</span>);</span><br><span class="line">  DebugPrint(<span class="string">&quot;IP address: &quot;</span>);</span><br><span class="line">  DebugPrintln(WiFi.localIP());</span><br><span class="line"> </span><br><span class="line">  delay(<span class="number">500</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">  </span><br><span class="line">  DebugPrint(<span class="string">&quot;connecting to &quot;</span>);</span><br><span class="line">  DebugPrintln(host);</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">if</span> (!client.connect(host, port)) &#123;</span><br><span class="line">    DebugPrintln(<span class="string">&quot;connection failed&quot;</span>);</span><br><span class="line">    DebugPrintln(<span class="string">&quot;wait 5 sec...&quot;</span>);</span><br><span class="line">    delay(<span class="number">5000</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="comment">// 发送数据到Tcp server</span></span><br><span class="line">  DebugPrintln(<span class="string">&quot;Send this data to server&quot;</span>);</span><br><span class="line">  client.println(String(<span class="string">&quot;Send this data to server&quot;</span>));</span><br><span class="line"> </span><br><span class="line">  <span class="comment">//读取从server返回到响应数据</span></span><br><span class="line">  String line = client.readStringUntil(<span class="string">&#x27;\r&#x27;</span>);</span><br><span class="line">  DebugPrintln(line);</span><br><span class="line"> </span><br><span class="line">  DebugPrintln(<span class="string">&quot;closing connection&quot;</span>);</span><br><span class="line">  client.stop();</span><br><span class="line"> </span><br><span class="line">  DebugPrintln(<span class="string">&quot;wait 5 sec...&quot;</span>);</span><br><span class="line">  delay(<span class="number">5000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="2"><li><p>通过TCP client包装Http请求协议去调用天气接口获取天气信息</p><p>（使用ArduinoJson库，尽量使用5.X版本）</p></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Demo：</span></span><br><span class="line"><span class="comment"> *    演示Http请求天气接口信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WiFi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ArduinoJson.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//以下三个定义为调试定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugBegin(baud_rate)    Serial.begin(baud_rate)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrintln(message)    Serial.println(message)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrint(message)    Serial.print(message)</span></span><br><span class="line"> </span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* ssid     = <span class="string">&quot;TP-LINK_5344&quot;</span>;         <span class="comment">// XXXXXX -- 使用时请修改为当前你的 wifi ssid</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* password = <span class="string">&quot;6206908you11011010&quot;</span>;         <span class="comment">// XXXXXX -- 使用时请修改为当前你的 wifi 密码</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* host = <span class="string">&quot;api.seniverse.com&quot;</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* APIKEY = <span class="string">&quot;wcmquevztdy1jpca&quot;</span>;        <span class="comment">//API KEY</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* city = <span class="string">&quot;guangzhou&quot;</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* language = <span class="string">&quot;zh-Hans&quot;</span>;<span class="comment">//zh-Hans 简体中文  会显示乱码</span></span><br><span class="line">  </span><br><span class="line"><span class="type">const</span> <span class="type">unsigned</span> <span class="type">long</span> BAUD_RATE = <span class="number">115200</span>;                   <span class="comment">// serial connection speed</span></span><br><span class="line"><span class="type">const</span> <span class="type">unsigned</span> <span class="type">long</span> HTTP_TIMEOUT = <span class="number">5000</span>;               <span class="comment">// max respone time from server</span></span><br><span class="line"><span class="type">const</span> <span class="type">size_t</span> MAX_CONTENT_SIZE = <span class="number">1000</span>;                   <span class="comment">// max size of the HTTP response</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">// 我们要从此网页中提取的数据的类型</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">WeatherData</span> &#123;</span></span><br><span class="line">  <span class="type">char</span> city[<span class="number">16</span>];<span class="comment">//城市名称</span></span><br><span class="line">  <span class="type">char</span> weather[<span class="number">32</span>];<span class="comment">//天气介绍（多云...）</span></span><br><span class="line">  <span class="type">char</span> temp[<span class="number">16</span>];<span class="comment">//温度</span></span><br><span class="line">  <span class="type">char</span> udate[<span class="number">32</span>];<span class="comment">//更新时间</span></span><br><span class="line">&#125;;</span><br><span class="line">  </span><br><span class="line">WiFiClient client;</span><br><span class="line"><span class="type">char</span> response[MAX_CONTENT_SIZE];</span><br><span class="line"><span class="type">char</span> endOfHeaders[] = <span class="string">&quot;\r\n\r\n&quot;</span>;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="comment">// put your setup code here, to run once:</span></span><br><span class="line">  WiFi.mode(WIFI_STA);     <span class="comment">//设置esp8266 工作模式</span></span><br><span class="line">  DebugBegin(BAUD_RATE);</span><br><span class="line">  DebugPrint(<span class="string">&quot;Connecting to &quot;</span>);<span class="comment">//写几句提示，哈哈</span></span><br><span class="line">  DebugPrintln(ssid);</span><br><span class="line">  WiFi.begin(ssid, password);   <span class="comment">//连接wifi</span></span><br><span class="line">  WiFi.setAutoConnect(<span class="literal">true</span>);</span><br><span class="line">  <span class="keyword">while</span> (WiFi.status() != WL_CONNECTED) &#123;</span><br><span class="line">    <span class="comment">//这个函数是wifi连接状态，返回wifi链接状态</span></span><br><span class="line">    delay(<span class="number">500</span>);</span><br><span class="line">    DebugPrint(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  DebugPrintln(<span class="string">&quot;&quot;</span>);</span><br><span class="line">  DebugPrintln(<span class="string">&quot;WiFi connected&quot;</span>);</span><br><span class="line">  delay(<span class="number">500</span>);</span><br><span class="line">  DebugPrintln(<span class="string">&quot;IP address: &quot;</span>);</span><br><span class="line">  DebugPrintln(WiFi.localIP());<span class="comment">//WiFi.localIP()返回8266获得的ip地址</span></span><br><span class="line">  client.setTimeout(HTTP_TIMEOUT);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="comment">// put your main code here, to run repeatedly:</span></span><br><span class="line">  <span class="comment">//判断tcp client是否处于连接状态，不是就建立连接</span></span><br><span class="line">  <span class="keyword">while</span> (!client.connected())&#123;</span><br><span class="line">     <span class="keyword">if</span> (!client.connect(host, <span class="number">80</span>))&#123;</span><br><span class="line">         DebugPrintln(<span class="string">&quot;connection....&quot;</span>);</span><br><span class="line">         delay(<span class="number">500</span>);</span><br><span class="line">     &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//发送http请求 并且跳过响应头 直接获取响应body</span></span><br><span class="line">  <span class="keyword">if</span> (sendRequest(host, city, APIKEY) &amp;&amp; skipResponseHeaders()) &#123;</span><br><span class="line">    <span class="comment">//清除缓冲</span></span><br><span class="line">    clrEsp8266ResponseBuffer();</span><br><span class="line">    <span class="comment">//读取响应数据</span></span><br><span class="line">    readReponseContent(response, <span class="keyword">sizeof</span>(response));</span><br><span class="line">    WeatherData weatherData;</span><br><span class="line">    <span class="keyword">if</span> (parseUserData(response, &amp;weatherData)) &#123;</span><br><span class="line">      printUserData(&amp;weatherData);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  delay(<span class="number">5000</span>);<span class="comment">//每5s调用一次</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* @发送http请求指令</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">sendRequest</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* host, <span class="type">const</span> <span class="type">char</span>* cityid, <span class="type">const</span> <span class="type">char</span>* apiKey)</span> &#123;</span><br><span class="line">  <span class="comment">// We now create a URI for the request</span></span><br><span class="line">  <span class="comment">//心知天气  发送http请求</span></span><br><span class="line">  String GetUrl = <span class="string">&quot;/v3/weather/now.json?key=&quot;</span>;</span><br><span class="line">  GetUrl += apiKey;</span><br><span class="line">  GetUrl += <span class="string">&quot;&amp;location=&quot;</span>;</span><br><span class="line">  GetUrl += city;</span><br><span class="line">  GetUrl += <span class="string">&quot;&amp;language=&quot;</span>;</span><br><span class="line">  GetUrl += language;</span><br><span class="line">  <span class="comment">// This will send the request to the server</span></span><br><span class="line">  client.print(String(<span class="string">&quot;GET &quot;</span>) + GetUrl + <span class="string">&quot; HTTP/1.1\r\n&quot;</span> +</span><br><span class="line">               <span class="string">&quot;Host: &quot;</span> + host + <span class="string">&quot;\r\n&quot;</span> +</span><br><span class="line">               <span class="string">&quot;Connection: close\r\n\r\n&quot;</span>);</span><br><span class="line">  DebugPrintln(<span class="string">&quot;create a request:&quot;</span>);</span><br><span class="line">  DebugPrintln(String(<span class="string">&quot;GET &quot;</span>) + GetUrl + <span class="string">&quot; HTTP/1.1\r\n&quot;</span> +</span><br><span class="line">               <span class="string">&quot;Host: &quot;</span> + host + <span class="string">&quot;\r\n&quot;</span> +</span><br><span class="line">               <span class="string">&quot;Connection: close\r\n&quot;</span>);</span><br><span class="line">  delay(<span class="number">1000</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* @Desc 跳过 HTTP 头，使我们在响应正文的开头</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">skipResponseHeaders</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="comment">// HTTP headers end with an empty line</span></span><br><span class="line">  <span class="type">bool</span> ok = client.find(endOfHeaders);</span><br><span class="line">  <span class="keyword">if</span> (!ok) &#123;</span><br><span class="line">    DebugPrintln(<span class="string">&quot;No response or invalid response!&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> ok;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* @Desc 从HTTP服务器响应中读取正文</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">readReponseContent</span><span class="params">(<span class="type">char</span>* content, <span class="type">size_t</span> maxSize)</span> &#123;</span><br><span class="line">  <span class="type">size_t</span> length = client.readBytes(content, maxSize);</span><br><span class="line">  delay(<span class="number">100</span>);</span><br><span class="line">  DebugPrintln(<span class="string">&quot;Get the data from Internet!&quot;</span>);</span><br><span class="line">  content[length] = <span class="number">0</span>;</span><br><span class="line">  DebugPrintln(content);</span><br><span class="line">  DebugPrintln(<span class="string">&quot;Read data Over!&quot;</span>);</span><br><span class="line">  client.flush();<span class="comment">//清除一下缓冲</span></span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @Desc 解析数据 Json解析</span></span><br><span class="line"><span class="comment"> * 数据格式如下：</span></span><br><span class="line"><span class="comment"> * &#123;</span></span><br><span class="line"><span class="comment"> *    &quot;results&quot;: [</span></span><br><span class="line"><span class="comment"> *        &#123;</span></span><br><span class="line"><span class="comment"> *            &quot;location&quot;: &#123;</span></span><br><span class="line"><span class="comment"> *                &quot;id&quot;: &quot;WX4FBXXFKE4F&quot;,</span></span><br><span class="line"><span class="comment"> *                &quot;name&quot;: &quot;北京&quot;,</span></span><br><span class="line"><span class="comment"> *                &quot;country&quot;: &quot;CN&quot;,</span></span><br><span class="line"><span class="comment"> *                &quot;path&quot;: &quot;北京,北京,中国&quot;,</span></span><br><span class="line"><span class="comment"> *                &quot;timezone&quot;: &quot;Asia/Shanghai&quot;,</span></span><br><span class="line"><span class="comment"> *                &quot;timezone_offset&quot;: &quot;+08:00&quot;</span></span><br><span class="line"><span class="comment"> *            &#125;,</span></span><br><span class="line"><span class="comment"> *            &quot;now&quot;: &#123;</span></span><br><span class="line"><span class="comment"> *                &quot;text&quot;: &quot;多云&quot;,</span></span><br><span class="line"><span class="comment"> *                &quot;code&quot;: &quot;4&quot;,</span></span><br><span class="line"><span class="comment"> *                &quot;temperature&quot;: &quot;23&quot;</span></span><br><span class="line"><span class="comment"> *            &#125;,</span></span><br><span class="line"><span class="comment"> *            &quot;last_update&quot;: &quot;2017-09-13T09:51:00+08:00&quot;</span></span><br><span class="line"><span class="comment"> *        &#125;</span></span><br><span class="line"><span class="comment"> *    ]</span></span><br><span class="line"><span class="comment"> *&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">parseUserData</span><span class="params">(<span class="type">char</span>* content, <span class="keyword">struct</span> WeatherData* weatherData)</span> &#123;</span><br><span class="line"><span class="comment">//    -- 根据我们需要解析的数据来计算JSON缓冲区最佳大小</span></span><br><span class="line"><span class="comment">//   如果你使用StaticJsonBuffer时才需要</span></span><br><span class="line"><span class="comment">//    const size_t BUFFER_SIZE = 1024;</span></span><br><span class="line"><span class="comment">//   在堆栈上分配一个临时内存池</span></span><br><span class="line"><span class="comment">//    StaticJsonBuffer&lt;BUFFER_SIZE&gt; jsonBuffer;</span></span><br><span class="line"><span class="comment">//    -- 如果堆栈的内存池太大，使用 DynamicJsonBuffer jsonBuffer 代替</span></span><br><span class="line">  DynamicJsonBuffer jsonBuffer;</span><br><span class="line">   </span><br><span class="line">  JsonObject&amp; root = jsonBuffer.parseObject(content);</span><br><span class="line">   </span><br><span class="line">  <span class="keyword">if</span> (!root.success()) &#123;</span><br><span class="line">    DebugPrintln(<span class="string">&quot;JSON parsing failed!&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">    </span><br><span class="line">  <span class="comment">//复制我们感兴趣的字符串</span></span><br><span class="line">  <span class="built_in">strcpy</span>(weatherData-&gt;city, root[<span class="string">&quot;results&quot;</span>][<span class="number">0</span>][<span class="string">&quot;location&quot;</span>][<span class="string">&quot;name&quot;</span>]);</span><br><span class="line">  <span class="built_in">strcpy</span>(weatherData-&gt;weather, root[<span class="string">&quot;results&quot;</span>][<span class="number">0</span>][<span class="string">&quot;now&quot;</span>][<span class="string">&quot;text&quot;</span>]);</span><br><span class="line">  <span class="built_in">strcpy</span>(weatherData-&gt;temp, root[<span class="string">&quot;results&quot;</span>][<span class="number">0</span>][<span class="string">&quot;now&quot;</span>][<span class="string">&quot;temperature&quot;</span>]);</span><br><span class="line">  <span class="built_in">strcpy</span>(weatherData-&gt;udate, root[<span class="string">&quot;results&quot;</span>][<span class="number">0</span>][<span class="string">&quot;last_update&quot;</span>]);</span><br><span class="line">  <span class="comment">//  -- 这不是强制复制，你可以使用指针，因为他们是指向“内容”缓冲区内，所以你需要确保</span></span><br><span class="line">  <span class="comment">//   当你读取字符串时它仍在内存中</span></span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">   </span><br><span class="line"><span class="comment">// 打印从JSON中提取的数据</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">printUserData</span><span class="params">(<span class="type">const</span> <span class="keyword">struct</span> WeatherData* weatherData)</span> &#123;</span><br><span class="line">  DebugPrintln(<span class="string">&quot;Print parsed data :&quot;</span>);</span><br><span class="line">  DebugPrint(<span class="string">&quot;City : &quot;</span>);</span><br><span class="line">  DebugPrint(weatherData-&gt;city);</span><br><span class="line">  DebugPrint(<span class="string">&quot;, \t&quot;</span>);</span><br><span class="line">  DebugPrint(<span class="string">&quot;Weather : &quot;</span>);</span><br><span class="line">  DebugPrint(weatherData-&gt;weather);</span><br><span class="line">  DebugPrint(<span class="string">&quot;,\t&quot;</span>);</span><br><span class="line">  DebugPrint(<span class="string">&quot;Temp : &quot;</span>);</span><br><span class="line">  DebugPrint(weatherData-&gt;temp);</span><br><span class="line">  DebugPrint(<span class="string">&quot; C&quot;</span>);</span><br><span class="line">  DebugPrint(<span class="string">&quot;,\t&quot;</span>);</span><br><span class="line">  DebugPrint(<span class="string">&quot;Last Updata : &quot;</span>);</span><br><span class="line">  DebugPrint(weatherData-&gt;udate);</span><br><span class="line">  DebugPrintln(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">   </span><br><span class="line"><span class="comment">// 关闭与HTTP服务器连接</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">stopConnect</span><span class="params">()</span> &#123;</span><br><span class="line">  DebugPrintln(<span class="string">&quot;Disconnect&quot;</span>);</span><br><span class="line">  client.stop();</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="type">void</span> <span class="title function_">clrEsp8266ResponseBuffer</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(response, <span class="number">0</span>, MAX_CONTENT_SIZE);      <span class="comment">//清空</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="6、TCP服务端（server）"><a href="#6、TCP服务端（server）" class="headerlink" title="6、TCP服务端（server）"></a>6、TCP服务端（server）</h3><ol><li>8266作为WiFiServer端，打开TCP调试助手，模拟TCP Client的请求；</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Demo：</span></span><br><span class="line"><span class="comment"> *    演示WiFiServer功能</span></span><br><span class="line"><span class="comment"> *    打开TCP调试助手 模拟TCP client请求</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WiFi.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//定义最多多少个client可以连接本server(一般不要超过4个)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX_SRV_CLIENTS 1</span></span><br><span class="line"><span class="comment">//以下三个定义为调试定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugBegin(baud_rate)    Serial.begin(baud_rate)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrintln(message)    Serial.println(message)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrint(message)    Serial.print(message)</span></span><br><span class="line"> </span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* ssid = <span class="string">&quot;TP-LINK_5344&quot;</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* password = <span class="string">&quot;6206908you11011010&quot;</span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//创建server 端口号是23</span></span><br><span class="line">WiFiServer <span class="title function_">server</span><span class="params">(<span class="number">23</span>)</span>;</span><br><span class="line"><span class="comment">//管理clients</span></span><br><span class="line">WiFiClient serverClients[MAX_SRV_CLIENTS];</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">  DebugBegin(<span class="number">115200</span>);</span><br><span class="line">  WiFi.mode(WIFI_STA);</span><br><span class="line">  WiFi.begin(ssid, password);</span><br><span class="line">  DebugPrint(<span class="string">&quot;\nConnecting to &quot;</span>); </span><br><span class="line">  DebugPrintln(ssid);</span><br><span class="line">  <span class="type">uint8_t</span> i = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> (WiFi.status() != WL_CONNECTED &amp;&amp; i++ &lt; <span class="number">20</span>) &#123;</span><br><span class="line">    delay(<span class="number">500</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (i == <span class="number">21</span>) &#123;</span><br><span class="line">    DebugPrint(<span class="string">&quot;Could not connect to&quot;</span>); </span><br><span class="line">    DebugPrintln(ssid);</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">      delay(<span class="number">500</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//启动server</span></span><br><span class="line">  server.begin();</span><br><span class="line">  <span class="comment">//关闭小包合并包功能，不会延时发送数据</span></span><br><span class="line">  server.setNoDelay(<span class="literal">true</span>);</span><br><span class="line"> </span><br><span class="line">  DebugPrint(<span class="string">&quot;Ready! Use &#x27;telnet &quot;</span>);</span><br><span class="line">  DebugPrint(WiFi.localIP());</span><br><span class="line">  DebugPrintln(<span class="string">&quot; 23&#x27; to connect&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="type">uint8_t</span> i;</span><br><span class="line">  <span class="comment">//检测是否有新的client请求进来</span></span><br><span class="line">  <span class="keyword">if</span> (server.hasClient()) &#123;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; MAX_SRV_CLIENTS; i++) &#123;</span><br><span class="line">      <span class="comment">//释放旧无效或者断开的client</span></span><br><span class="line">      <span class="keyword">if</span> (!serverClients[i] || !serverClients[i].connected()) &#123;</span><br><span class="line">        <span class="keyword">if</span> (serverClients[i]) &#123;</span><br><span class="line">          serverClients[i].stop();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//分配最新的client</span></span><br><span class="line">        serverClients[i] = server.available();</span><br><span class="line">        DebugPrint(<span class="string">&quot;New client: &quot;</span>); </span><br><span class="line">        DebugPrint(i);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//当达到最大连接数 无法释放无效的client，需要拒绝连接</span></span><br><span class="line">    <span class="keyword">if</span> (i == MAX_SRV_CLIENTS) &#123;</span><br><span class="line">      WiFiClient serverClient = server.available();</span><br><span class="line">      serverClient.stop();</span><br><span class="line">      DebugPrintln(<span class="string">&quot;Connection rejected &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//检测client发过来的数据</span></span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; MAX_SRV_CLIENTS; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (serverClients[i] &amp;&amp; serverClients[i].connected()) &#123;</span><br><span class="line">      <span class="keyword">if</span> (serverClients[i].available()) &#123;</span><br><span class="line">        <span class="comment">//get data from the telnet client and push it to the UART</span></span><br><span class="line">        <span class="keyword">while</span> (serverClients[i].available()) &#123;</span><br><span class="line">          <span class="comment">//发送到串口调试器</span></span><br><span class="line">          Serial.write(serverClients[i].read());</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">if</span> (Serial.available()) &#123;</span><br><span class="line">    <span class="comment">//把串口调试器发过来的数据 发送给client</span></span><br><span class="line">    <span class="type">size_t</span> len = Serial.available();</span><br><span class="line">    <span class="type">uint8_t</span> sbuf[len];</span><br><span class="line">    Serial.readBytes(sbuf, len);</span><br><span class="line">    <span class="comment">//push UART data to all connected telnet clients</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; MAX_SRV_CLIENTS; i++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (serverClients[i] &amp;&amp; serverClients[i].connected()) &#123;</span><br><span class="line">        serverClients[i].write(sbuf, len);</span><br><span class="line">        delay(<span class="number">1</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>8266作为web server端，打开PC浏览器输入IP网址，请求web server</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * Demo：</span><br><span class="line"> *    演示web Server功能</span><br><span class="line"> *    打开PC浏览器 输入IP地址。请求web server</span><br><span class="line"> */</span><br><span class="line">#include &lt;ESP8266WiFi.h&gt;</span><br><span class="line"> </span><br><span class="line">const char* ssid = &quot;TP-LINK_5344&quot;;//wifi账号 这里需要修改</span><br><span class="line">const char* password = &quot;xxxx&quot;;//wifi密码 这里需要修改</span><br><span class="line"> </span><br><span class="line">//创建 tcp server 端口号是80</span><br><span class="line">WiFiServer server(80);</span><br><span class="line"> </span><br><span class="line">void setup()&#123;</span><br><span class="line">  Serial.begin(115200);</span><br><span class="line">  Serial.println();</span><br><span class="line"> </span><br><span class="line">  Serial.printf(&quot;Connecting to %s &quot;, ssid);</span><br><span class="line">  WiFi.mode(WIFI_STA);</span><br><span class="line">  WiFi.begin(ssid, password);</span><br><span class="line">  while (WiFi.status() != WL_CONNECTED)&#123;</span><br><span class="line">    delay(500);</span><br><span class="line">    Serial.print(&quot;.&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">  Serial.println(&quot; connected&quot;);</span><br><span class="line">  //启动TCP 连接</span><br><span class="line">  server.begin();</span><br><span class="line">  //打印TCP server IP地址</span><br><span class="line">  Serial.printf(&quot;Web server started, open %s in a web browser\n&quot;, WiFi.localIP().toString().c_str());</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">/**</span><br><span class="line"> * 模拟web server 返回http web响应内容</span><br><span class="line"> * 这里是手动拼接HTTP响应内容</span><br><span class="line"> * 后面楼主会继续讲解另外两个专用于http请求的库</span><br><span class="line"> */</span><br><span class="line">String prepareHtmlPage()&#123;</span><br><span class="line">  String htmlPage =</span><br><span class="line">     String(&quot;HTTP/1.1 200 OK\r\n&quot;) +</span><br><span class="line">            &quot;Content-Type: text/html\r\n&quot; +</span><br><span class="line">            &quot;Connection: close\r\n&quot; +  // the connection will be closed after completion of the response</span><br><span class="line">            &quot;Refresh: 5\r\n&quot; +  // refresh the page automatically every 5 sec</span><br><span class="line">            &quot;\r\n&quot; +</span><br><span class="line">            &quot;&lt;!DOCTYPE HTML&gt;&quot; +</span><br><span class="line">            &quot;&lt;html&gt;&quot; +</span><br><span class="line">            &quot;Analog input:  &quot; + String(analogRead(A0)) +</span><br><span class="line">            &quot;&lt;/html&gt;&quot; +</span><br><span class="line">            &quot;\r\n&quot;;</span><br><span class="line">  return htmlPage;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">void loop()&#123;</span><br><span class="line">  WiFiClient client = server.available();</span><br><span class="line">  // wait for a client (web browser) to connect</span><br><span class="line">  if (client)&#123;</span><br><span class="line">    Serial.println(&quot;\n[Client connected]&quot;);</span><br><span class="line">    while (client.connected())&#123;</span><br><span class="line">      // 不断读取请求内容</span><br><span class="line">      if (client.available())&#123;</span><br><span class="line">        String line = client.readStringUntil(&#x27;\r&#x27;);</span><br><span class="line">        Serial.print(line);</span><br><span class="line">        // wait for end of client&#x27;s request, that is marked with an empty line</span><br><span class="line">        if (line.length() == 1 &amp;&amp; line[0] == &#x27;\n&#x27;)&#123;</span><br><span class="line">          //返回响应内容</span><br><span class="line">          client.println(prepareHtmlPage());</span><br><span class="line">          break;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      //由于我们设置了 Connection: close  当我们响应数据之后就会自动断开连接</span><br><span class="line">    &#125;</span><br><span class="line">    delay(100); // give the web browser time to receive the data</span><br><span class="line"> </span><br><span class="line">    // close the connection:</span><br><span class="line">    client.stop();</span><br><span class="line">    Serial.println(&quot;[Client disonnected]&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="3"><li>8266作为WiFiServer端，演示简单的web server功能，web server 会根据请求来做不同的操作</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* Demo：</span></span><br><span class="line"><span class="comment">*    演示简单web Server功能</span></span><br><span class="line"><span class="comment">*    web server会根据请求来做不同的操作</span></span><br><span class="line"><span class="comment">*    http://server_ip/gpio/0 打印 /gpio0</span></span><br><span class="line"><span class="comment">*    http://server_ip/gpio/1 打印 /gpio1</span></span><br><span class="line"><span class="comment">*    server_ip就是ESP8266的Ip地址</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WiFi.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//以下三个定义为调试定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugBegin(baud_rate)    Serial.begin(baud_rate)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrintln(message)    Serial.println(message)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrint(message)    Serial.print(message)</span></span><br><span class="line"> </span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* ssid = <span class="string">&quot;TP-LINK_5344&quot;</span>;<span class="comment">//wifi账号 这里需要修改</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* password = <span class="string">&quot;xxxx&quot;</span>;<span class="comment">//wifi密码 这里需要修改</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">// 创建tcp server</span></span><br><span class="line">WiFiServer <span class="title function_">server</span><span class="params">(<span class="number">80</span>)</span>;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">  DebugBegin(<span class="number">115200</span>);</span><br><span class="line">  delay(<span class="number">10</span>);</span><br><span class="line"> </span><br><span class="line">  <span class="comment">// Connect to WiFi network</span></span><br><span class="line">  DebugPrintln(<span class="string">&quot;&quot;</span>);</span><br><span class="line">  DebugPrintln(String(<span class="string">&quot;Connecting to &quot;</span>) + ssid);</span><br><span class="line">  <span class="comment">//我只想做个安静的美男子 STA</span></span><br><span class="line">  WiFi.mode(WIFI_STA);</span><br><span class="line">  <span class="comment">//我想连接路由wifi</span></span><br><span class="line">  WiFi.begin(ssid, password);</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">while</span> (WiFi.status() != WL_CONNECTED) &#123;</span><br><span class="line">    delay(<span class="number">500</span>);</span><br><span class="line">    DebugPrint(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  DebugPrintln(<span class="string">&quot;&quot;</span>);</span><br><span class="line">  DebugPrintln(<span class="string">&quot;WiFi connected&quot;</span>);</span><br><span class="line"> </span><br><span class="line">  <span class="comment">// 启动server</span></span><br><span class="line">  server.begin();</span><br><span class="line">  DebugPrintln(<span class="string">&quot;Server started&quot;</span>);</span><br><span class="line"> </span><br><span class="line">  <span class="comment">// 打印IP地址</span></span><br><span class="line">  DebugPrintln(WiFi.localIP().toString());</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="comment">// 等待有效的tcp连接</span></span><br><span class="line">  WiFiClient client = server.available();</span><br><span class="line">  <span class="keyword">if</span> (!client) &#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  DebugPrintln(<span class="string">&quot;new client&quot;</span>);</span><br><span class="line">  <span class="comment">//等待client数据过来</span></span><br><span class="line">  <span class="keyword">while</span> (!client.available()) &#123;</span><br><span class="line">    delay(<span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="comment">// 读取请求的第一行 会包括一个url，这里只处理url</span></span><br><span class="line">  String req = client.readStringUntil(<span class="string">&#x27;\r&#x27;</span>);</span><br><span class="line">  DebugPrintln(req);</span><br><span class="line">  <span class="comment">//清掉缓冲区数据 据说这个方法没什么用 可以换种实现方式</span></span><br><span class="line">  client.flush();</span><br><span class="line"> </span><br><span class="line">  <span class="comment">// 开始匹配</span></span><br><span class="line">  <span class="type">int</span> val;</span><br><span class="line">  <span class="keyword">if</span> (req.indexOf(<span class="string">&quot;/gpio/0&quot;</span>) != <span class="number">-1</span>) &#123;</span><br><span class="line">    DebugPrintln(<span class="string">&quot;/gpio0&quot;</span>);</span><br><span class="line">    val = <span class="number">0</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (req.indexOf(<span class="string">&quot;/gpio/1&quot;</span>) != <span class="number">-1</span>) &#123;</span><br><span class="line">    DebugPrintln(<span class="string">&quot;/gpio1&quot;</span>);</span><br><span class="line">    val = <span class="number">1</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    DebugPrintln(<span class="string">&quot;invalid request&quot;</span>);</span><br><span class="line">    <span class="comment">//关闭这个client请求</span></span><br><span class="line">    client.stop();</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//清掉缓冲区数据</span></span><br><span class="line">  client.flush();</span><br><span class="line"> </span><br><span class="line">  <span class="comment">// 准备响应数据</span></span><br><span class="line">  String s = <span class="string">&quot;HTTP/1.1 200 OK\r\nContent-Type: text/html\r\n\r\n&lt;!DOCTYPE HTML&gt;\r\n&lt;html&gt;\r\nGPIO is now &quot;</span>;</span><br><span class="line">  s += (val) ? <span class="string">&quot;high&quot;</span> : <span class="string">&quot;low&quot;</span>;</span><br><span class="line">  s += <span class="string">&quot;&lt;/html&gt;\n&quot;</span>;</span><br><span class="line"> </span><br><span class="line">  <span class="comment">// 发送响应数据给client</span></span><br><span class="line">  client.print(s);</span><br><span class="line">  delay(<span class="number">1</span>);</span><br><span class="line">  DebugPrintln(<span class="string">&quot;Client disonnected&quot;</span>);</span><br><span class="line"> </span><br><span class="line">  <span class="comment">// The client will actually be disconnected</span></span><br><span class="line">  <span class="comment">// when the function returns and &#x27;client&#x27; object is detroyed</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="7、Smartconfig智能配网："><a href="#7、Smartconfig智能配网：" class="headerlink" title="7、Smartconfig智能配网："></a>7、Smartconfig智能配网：</h3><p>收集APP端发送包含WIFI用户名和密码的UDP广播包，智能终端的WIFI芯片接收到UDP包，解密配置连接。</p><p>手机软件esptouch:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WiFi.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">smartConfig</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  WiFi.mode(WIFI_STA);</span><br><span class="line">  Serial.println(<span class="string">&quot;\r\nWait for Smartconfig&quot;</span>);</span><br><span class="line">  delay(<span class="number">2000</span>);</span><br><span class="line">  <span class="comment">// 等待配网</span></span><br><span class="line">  WiFi.beginSmartConfig();</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    Serial.print(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">    delay(<span class="number">500</span>);</span><br><span class="line">    <span class="keyword">if</span> (WiFi.smartConfigDone())</span><br><span class="line">    &#123;</span><br><span class="line">      Serial.println(<span class="string">&quot;SmartConfig Success&quot;</span>);</span><br><span class="line">      Serial.<span class="built_in">printf</span>(<span class="string">&quot;SSID:%s\r\n&quot;</span>, WiFi.SSID().c_str());</span><br><span class="line">      Serial.<span class="built_in">printf</span>(<span class="string">&quot;PSW:%s\r\n&quot;</span>, WiFi.psk().c_str());</span><br><span class="line">      WiFi.setAutoConnect(<span class="literal">true</span>);  <span class="comment">// 设置自动连接</span></span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  Serial.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">  Serial.println(<span class="string">&quot;WiFi connected&quot;</span>);  </span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  Serial.begin(<span class="number">115200</span>);</span><br><span class="line">  smartConfig();</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  delay(<span class="number">1000</span>);</span><br><span class="line">   Serial.print(<span class="string">&quot;IP address: &quot;</span>);</span><br><span class="line">  Serial.println(WiFi.localIP());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="13、HttpClient–ESP8266HTTPClient库"><a href="#13、HttpClient–ESP8266HTTPClient库" class="headerlink" title="13、HttpClient–ESP8266HTTPClient库"></a>13、HttpClient–ESP8266HTTPClient库</h1><h2 id="1、HTTP"><a href="#1、HTTP" class="headerlink" title="1、HTTP"></a>1、HTTP</h2><h3 id="1、概述-2"><a href="#1、概述-2" class="headerlink" title="1、概述"></a>1、概述</h3><p><em><strong>HTTP协议（Hyper Text Transfer Protocol）超文本传输协议</strong></em>，用于从WWW服务器传输文本到本地浏览器的传送协议。基于TCP&#x2F;IP通信协议：浏览器作为HTTP客户端通过URL向HTTP服务端即WEB服务器发送所有请求。WEB服务器根据接收到的请求后，向客户端发送响应信息；</p><p>HTTP协议作为TCP&#x2F;IP模型中<strong>应用层</strong>的协议，承载与TCP协议上，有时也承载与TLS或者SSL协议层之上，这时就是<strong>HTTPS</strong>；</p><p>HTTP由<strong>请求</strong>与<strong>响应</strong>构成，是一个标准的客户端服务器模型，默认端口号80，HTTPS是443；</p><p>浏览网页时HTTP主要应用（不只是这个功能，只是一种协议，只要通信双方都支持这个协议，HTTP就能用）</p><p>特点：HTTP0.9与1.0使用非持续连接；1.1使用持续连接。</p><p>无状态，无记忆能力</p><h3 id="2、工作流程"><a href="#2、工作流程" class="headerlink" title="2、工作流程"></a>2、工作流程</h3><p>一次HTTP操作称位一个事务，可分4步：</p><ol><li><p>client与server建立连接；</p></li><li><p>连接后，client发送一个请求给server，请求方法格式：统一资源标示符（URL）、HTTP协议版本号、请求头、请求内容等；</p></li><li><p>server接收到请求后，给予响应，格式：状态行（包括协议版本、成功或者失败代码、服务器信息、实体信息等）</p></li><li><p>client接收到server返回信息，通过浏览器显示在用户显示屏上，然后client与server断开连接</p></li></ol><h3 id="3、HTTP请求"><a href="#3、HTTP请求" class="headerlink" title="3、HTTP请求"></a>3、HTTP请求</h3><p>Get请求：</p><ul><li>请求行（request line）：说明请求类型，要访问的资源及HTTP版本</li><li>请求头部（header）：说明服务器要使用的附加信息（第二行起位请求头部，HOST指出目的地；User-Agent是client与server脚本都能访问，是浏览器检测逻辑的重要基础）（该信息由浏览器定义，并在每个请求中自动发送）</li><li>空行（empty line）：请求头部后空行是必须的（即使第四部分请求数据为空，也必须有空行）</li><li>请求数据（request body）：主体，可添加任意其他数据（下面例子中请求数据为空）</li></ul><p>请求例子（Gharles抓取的request）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">GET /<span class="number">562f</span>25980001b1b106000338.jpg HTTP/<span class="number">1.1</span></span><br><span class="line">Host    img.mukewang.com</span><br><span class="line">User-Agent    Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; WOW64) AppleWebKit/<span class="number">537.36</span> (KHTML, like Gecko) Chrome/<span class="number">51.0</span><span class="number">.2704</span><span class="number">.106</span> Safari/<span class="number">537.36</span></span><br><span class="line">Accept    image/webp,image<span class="comment">/*,*/</span>*;q=<span class="number">0.8</span></span><br><span class="line">Referer    http:<span class="comment">//www.imooc.com/</span></span><br><span class="line">Accept-Encoding    gzip, deflate, sdch</span><br><span class="line">Accept-Language    zh-CN,zh;q=<span class="number">0.8</span></span><br></pre></td></tr></table></figure><p>POST请求：</p><p>请求例子（Gharles抓取的request）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">POST / HTTP1<span class="number">.1</span></span><br><span class="line">Host:www.wrox.com</span><br><span class="line">User-Agent:Mozilla/<span class="number">4.0</span> (compatible; MSIE <span class="number">6.0</span>; Windows NT <span class="number">5.1</span>; SV1; .NET CLR <span class="number">2.0</span><span class="number">.50727</span>; .NET CLR <span class="number">3.0</span><span class="number">.04506</span><span class="number">.648</span>; .NET CLR <span class="number">3.5</span><span class="number">.21022</span>)</span><br><span class="line">Content-Type:application/x-www-form-urlencoded</span><br><span class="line">Content-Length:<span class="number">40</span></span><br><span class="line">Connection: Keep-Alive</span><br><span class="line"> </span><br><span class="line">name=Professional%<span class="number">20</span>Ajax&amp;publisher=Wiley</span><br></pre></td></tr></table></figure><h3 id="4、HTTP-Response响应信息"><a href="#4、HTTP-Response响应信息" class="headerlink" title="4、HTTP Response响应信息"></a>4、HTTP Response响应信息</h3><ul><li>状态行</li><li>消息报头</li><li>空行</li><li>响应正文</li></ul><p><a href="https://imgtu.com/i/huf9qH"><img src="https://z3.ax1x.com/2021/08/26/huf9qH.jpg" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/08/26/huf9qH.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="huf9qH.jpg"></a></p><p>HTTP状态码</p><h3 id="5、ESP8266HTTPClient库"><a href="#5、ESP8266HTTPClient库" class="headerlink" title="5、ESP8266HTTPClient库"></a>5、ESP8266HTTPClient库</h3><p><a href="https://imgtu.com/i/f3MpdO"><img src="https://z3.ax1x.com/2021/08/09/f3MpdO.png" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/08/09/f3MpdO.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="f3MpdO.png"></a></p><h3 id="6、示例"><a href="#6、示例" class="headerlink" title="6、示例"></a>6、示例</h3><ol><li>获取天气请求（心知天气）</li></ol><p>setup中配置好url，串口参数和httpclient并设置client请求头。loop中每1秒请求一次get服务，把获取回来的天气信息通过json库转成具体对应的数值</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Demo：</span></span><br><span class="line"><span class="comment"> *    演示Http请求天气接口信息</span></span><br><span class="line"><span class="comment"> *    https://api.seniverse.com/v3/weather/now.json?key=Sv6J6HVHp8V2Cc34a&amp;location=beijing&amp;language=zh-Hans&amp;unit=c</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WiFi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ArduinoJson.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266HTTPClient.h&gt;</span>  <span class="comment">//不属于ESP8266WiFi库的一部分</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//以下三个定义为调试定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugBegin(baud_rate)    Serial.begin(baud_rate)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrintln(message)    Serial.println(message)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrint(message)    Serial.print(message)</span></span><br><span class="line"> </span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* AP_SSID     = <span class="string">&quot;XU-ChinaNet&quot;</span>;         <span class="comment">// XXXXXX -- 使用时请修改为当前你的 wifi ssid</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* AP_PSK = <span class="string">&quot;15358228063&quot;</span>;         <span class="comment">// XXXXXX -- 使用时请修改为当前你的 wifi 密码</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* HOST = <span class="string">&quot;http://api.seniverse.com&quot;</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* APIKEY = <span class="string">&quot;&quot;</span>;        <span class="comment">//API KEY</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* CITY = <span class="string">&quot;yancheng&quot;</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* LANGUAGE = <span class="string">&quot;zh-Hans&quot;</span>;<span class="comment">//zh-Hans 简体中文  会显示乱码</span></span><br><span class="line">  </span><br><span class="line"><span class="type">const</span> <span class="type">unsigned</span> <span class="type">long</span> BAUD_RATE = <span class="number">115200</span>;                   <span class="comment">// serial connection speed</span></span><br><span class="line"><span class="type">const</span> <span class="type">unsigned</span> <span class="type">long</span> HTTP_TIMEOUT = <span class="number">5000</span>;               <span class="comment">// max respone time from server</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">// 我们要从此网页中提取的数据的类型</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">WeatherData</span> &#123;</span></span><br><span class="line">  <span class="type">char</span> city[<span class="number">16</span>];<span class="comment">//城市名称</span></span><br><span class="line">  <span class="type">char</span> weather[<span class="number">32</span>];<span class="comment">//天气介绍（多云...）</span></span><br><span class="line">  <span class="type">char</span> temp[<span class="number">16</span>];<span class="comment">//温度</span></span><br><span class="line">  <span class="type">char</span> udate[<span class="number">32</span>];<span class="comment">//更新时间</span></span><br><span class="line">&#125;;</span><br><span class="line">WiFiClient client;</span><br><span class="line">HTTPClient http;</span><br><span class="line">String GetUrl;</span><br><span class="line">String response;</span><br><span class="line">WeatherData weatherData;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="comment">// put your setup code here, to run once:</span></span><br><span class="line">  WiFi.mode(WIFI_STA);     <span class="comment">//设置esp8266 工作模式</span></span><br><span class="line">  DebugBegin(BAUD_RATE);</span><br><span class="line">  DebugPrint(<span class="string">&quot;Connecting to &quot;</span>);<span class="comment">//写几句提示，哈哈</span></span><br><span class="line">  DebugPrintln(AP_SSID);</span><br><span class="line">  WiFi.begin(AP_SSID, AP_PSK);   <span class="comment">//连接wifi</span></span><br><span class="line">  WiFi.setAutoConnect(<span class="literal">true</span>);</span><br><span class="line">  <span class="keyword">while</span> (WiFi.status() != WL_CONNECTED) &#123;</span><br><span class="line">    <span class="comment">//这个函数是wifi连接状态，返回wifi链接状态</span></span><br><span class="line">    delay(<span class="number">500</span>);</span><br><span class="line">    DebugPrint(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  DebugPrintln(<span class="string">&quot;&quot;</span>);</span><br><span class="line">  DebugPrintln(<span class="string">&quot;WiFi connected&quot;</span>);</span><br><span class="line">  DebugPrint(<span class="string">&quot;IP address: &quot;</span>);</span><br><span class="line">  DebugPrintln(WiFi.localIP());</span><br><span class="line"> </span><br><span class="line">  <span class="comment">//拼接get请求url  博哥后面考虑看看是否可以封装一个方法来用用 不需要自己一个个拼装这个url</span></span><br><span class="line">  GetUrl = String(HOST) + <span class="string">&quot;/v3/weather/now.json?key=&quot;</span>;</span><br><span class="line">  GetUrl += APIKEY;</span><br><span class="line">  GetUrl += <span class="string">&quot;&amp;location=&quot;</span>;</span><br><span class="line">  GetUrl += CITY;</span><br><span class="line">  GetUrl += <span class="string">&quot;&amp;language=&quot;</span>;</span><br><span class="line">  GetUrl += LANGUAGE;</span><br><span class="line">  <span class="comment">//设置超时</span></span><br><span class="line">  http.setTimeout(HTTP_TIMEOUT);</span><br><span class="line">  <span class="comment">//设置请求url</span></span><br><span class="line">  <span class="comment">//http.begin(GetUrl);</span></span><br><span class="line">  http.begin(client,GetUrl);</span><br><span class="line">  <span class="comment">//以下为设置一些头  其实没什么用 最重要是后端服务器支持</span></span><br><span class="line">  http.setUserAgent(<span class="string">&quot;esp8266&quot;</span>);<span class="comment">//用户代理版本</span></span><br><span class="line">  http.setAuthorization(<span class="string">&quot;esp8266&quot;</span>,<span class="string">&quot;boge&quot;</span>);<span class="comment">//用户校验信息</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="comment">//心知天气  发送http  get请求</span></span><br><span class="line">  <span class="type">int</span> httpCode = http.GET();</span><br><span class="line">  <span class="keyword">if</span> (httpCode &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      Serial.<span class="built_in">printf</span>(<span class="string">&quot;[HTTP] GET... code: %d\n&quot;</span>, httpCode);</span><br><span class="line">      <span class="comment">//判断请求是否成功</span></span><br><span class="line">      <span class="keyword">if</span> (httpCode == HTTP_CODE_OK) &#123;</span><br><span class="line">        <span class="comment">//读取响应内容</span></span><br><span class="line">        response = http.getString();</span><br><span class="line">        DebugPrintln(<span class="string">&quot;Get the data from Internet!&quot;</span>);</span><br><span class="line">        DebugPrintln(response);</span><br><span class="line">        <span class="comment">//解析响应内容</span></span><br><span class="line">        <span class="keyword">if</span> (parseUserData(response, &amp;weatherData)) &#123;</span><br><span class="line">          <span class="comment">//打印响应内容</span></span><br><span class="line">          printUserData(&amp;weatherData);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      Serial.<span class="built_in">printf</span>(<span class="string">&quot;[HTTP] GET... failed, error: %s\n&quot;</span>, http.errorToString(httpCode).c_str());</span><br><span class="line">  &#125;</span><br><span class="line">  http.end();</span><br><span class="line">  delay(<span class="number">1000</span>);<span class="comment">//每1s调用一次 </span></span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @Desc 解析数据 Json解析</span></span><br><span class="line"><span class="comment"> * 数据格式如下：</span></span><br><span class="line"><span class="comment"> * &#123;</span></span><br><span class="line"><span class="comment"> *    &quot;results&quot;: [</span></span><br><span class="line"><span class="comment"> *        &#123;</span></span><br><span class="line"><span class="comment"> *            &quot;location&quot;: &#123;</span></span><br><span class="line"><span class="comment"> *                &quot;id&quot;: &quot;WX4FBXXFKE4F&quot;,</span></span><br><span class="line"><span class="comment"> *                &quot;name&quot;: &quot;北京&quot;,</span></span><br><span class="line"><span class="comment"> *                &quot;country&quot;: &quot;CN&quot;,</span></span><br><span class="line"><span class="comment"> *                &quot;path&quot;: &quot;北京,北京,中国&quot;,</span></span><br><span class="line"><span class="comment"> *                &quot;timezone&quot;: &quot;Asia/Shanghai&quot;,</span></span><br><span class="line"><span class="comment"> *                &quot;timezone_offset&quot;: &quot;+08:00&quot;</span></span><br><span class="line"><span class="comment"> *            &#125;,</span></span><br><span class="line"><span class="comment"> *            &quot;now&quot;: &#123;</span></span><br><span class="line"><span class="comment"> *                &quot;text&quot;: &quot;多云&quot;,</span></span><br><span class="line"><span class="comment"> *                &quot;code&quot;: &quot;4&quot;,</span></span><br><span class="line"><span class="comment"> *                &quot;temperature&quot;: &quot;23&quot;</span></span><br><span class="line"><span class="comment"> *            &#125;,</span></span><br><span class="line"><span class="comment"> *            &quot;last_update&quot;: &quot;2017-09-13T09:51:00+08:00&quot;</span></span><br><span class="line"><span class="comment"> *        &#125;</span></span><br><span class="line"><span class="comment"> *    ]</span></span><br><span class="line"><span class="comment"> *&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">parseUserData</span><span class="params">(String content, <span class="keyword">struct</span> WeatherData* weatherData)</span> &#123;</span><br><span class="line"><span class="comment">//    -- 根据我们需要解析的数据来计算JSON缓冲区最佳大小</span></span><br><span class="line"><span class="comment">//   如果你使用StaticJsonBuffer时才需要</span></span><br><span class="line"><span class="comment">//    const size_t BUFFER_SIZE = 1024;</span></span><br><span class="line"><span class="comment">//   在堆栈上分配一个临时内存池</span></span><br><span class="line"><span class="comment">//    StaticJsonBuffer&lt;BUFFER_SIZE&gt; jsonBuffer;</span></span><br><span class="line"><span class="comment">//    -- 如果堆栈的内存池太大，使用 DynamicJsonBuffer jsonBuffer 代替</span></span><br><span class="line">  DynamicJsonBuffer jsonBuffer;</span><br><span class="line">   </span><br><span class="line">  JsonObject&amp; root = jsonBuffer.parseObject(content);</span><br><span class="line">   </span><br><span class="line">  <span class="keyword">if</span> (!root.success()) &#123;</span><br><span class="line">    DebugPrintln(<span class="string">&quot;JSON parsing failed!&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">    </span><br><span class="line">  <span class="comment">//复制我们感兴趣的字符串</span></span><br><span class="line">  <span class="built_in">strcpy</span>(weatherData-&gt;city, root[<span class="string">&quot;results&quot;</span>][<span class="number">0</span>][<span class="string">&quot;location&quot;</span>][<span class="string">&quot;name&quot;</span>]);</span><br><span class="line">  <span class="built_in">strcpy</span>(weatherData-&gt;weather, root[<span class="string">&quot;results&quot;</span>][<span class="number">0</span>][<span class="string">&quot;now&quot;</span>][<span class="string">&quot;text&quot;</span>]);</span><br><span class="line">  <span class="built_in">strcpy</span>(weatherData-&gt;temp, root[<span class="string">&quot;results&quot;</span>][<span class="number">0</span>][<span class="string">&quot;now&quot;</span>][<span class="string">&quot;temperature&quot;</span>]);</span><br><span class="line">  <span class="built_in">strcpy</span>(weatherData-&gt;udate, root[<span class="string">&quot;results&quot;</span>][<span class="number">0</span>][<span class="string">&quot;last_update&quot;</span>]);</span><br><span class="line">  <span class="comment">//  -- 这不是强制复制，你可以使用指针，因为他们是指向“内容”缓冲区内，所以你需要确保</span></span><br><span class="line">  <span class="comment">//   当你读取字符串时它仍在内存中</span></span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">   </span><br><span class="line"><span class="comment">// 打印从JSON中提取的数据</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">printUserData</span><span class="params">(<span class="type">const</span> <span class="keyword">struct</span> WeatherData* weatherData)</span> &#123;</span><br><span class="line">  DebugPrintln(<span class="string">&quot;Print parsed data :&quot;</span>);</span><br><span class="line">  DebugPrint(<span class="string">&quot;City : &quot;</span>);</span><br><span class="line">  DebugPrint(weatherData-&gt;city);</span><br><span class="line">  DebugPrint(<span class="string">&quot;, \t&quot;</span>);</span><br><span class="line">  DebugPrint(<span class="string">&quot;Weather : &quot;</span>);</span><br><span class="line">  DebugPrint(weatherData-&gt;weather);</span><br><span class="line">  DebugPrint(<span class="string">&quot;,\t&quot;</span>);</span><br><span class="line">  DebugPrint(<span class="string">&quot;Temp : &quot;</span>);</span><br><span class="line">  DebugPrint(weatherData-&gt;temp);</span><br><span class="line">  DebugPrint(<span class="string">&quot; C&quot;</span>);</span><br><span class="line">  DebugPrint(<span class="string">&quot;,\t&quot;</span>);</span><br><span class="line">  DebugPrint(<span class="string">&quot;Last Updata : &quot;</span>);</span><br><span class="line">  DebugPrint(weatherData-&gt;udate);</span><br><span class="line">  DebugPrintln(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li><p>演视响应头获取信息</p><p>设置了获取四个请求头的信息，然后通过header方法获取它们的数值（接口限制，无法发挥作用）</p></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Demo：</span></span><br><span class="line"><span class="comment"> *    演示Http请求天气接口信息,演示响应头操作</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WiFi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ArduinoJson.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266HTTPClient.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//以下三个定义为调试定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugBegin(baud_rate)    Serial.begin(baud_rate)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrintln(message)    Serial.println(message)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrint(message)    Serial.print(message)</span></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* AP_SSID     = <span class="string">&quot;XU-ChinaNet&quot;</span>;         <span class="comment">// XXXXXX -- 使用时请修改为当前你的 wifi ssid</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* AP_PSK = <span class="string">&quot;15358228063&quot;</span>;         <span class="comment">// XXXXXX -- 使用时请修改为当前你的 wifi 密码</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* HOST = <span class="string">&quot;http://api.seniverse.com&quot;</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* APIKEY = <span class="string">&quot;&quot;</span>;        <span class="comment">//API KEY</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* CITY = <span class="string">&quot;yancheng&quot;</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* LANGUAGE = <span class="string">&quot;zh-Hans&quot;</span>;<span class="comment">//zh-Hans 简体中文  会显示乱码</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span> *keys[] = &#123;<span class="string">&quot;Content-Length&quot;</span>,<span class="string">&quot;Content-Type&quot;</span>,<span class="string">&quot;Connection&quot;</span>,<span class="string">&quot;Date&quot;</span>&#125;;<span class="comment">//需要收集的响应头的信息</span></span><br><span class="line">  </span><br><span class="line"><span class="type">const</span> <span class="type">unsigned</span> <span class="type">long</span> BAUD_RATE = <span class="number">115200</span>;                   <span class="comment">// serial connection speed</span></span><br><span class="line"><span class="type">const</span> <span class="type">unsigned</span> <span class="type">long</span> HTTP_TIMEOUT = <span class="number">5000</span>;               <span class="comment">// max respone time from server;</span></span><br><span class="line"></span><br><span class="line">WiFiClient client;</span><br><span class="line">HTTPClient http;</span><br><span class="line">String GetUrl;</span><br><span class="line">String response;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="comment">// put your setup code here, to run once:</span></span><br><span class="line">  WiFi.mode(WIFI_STA);     <span class="comment">//设置esp8266 工作模式</span></span><br><span class="line">  DebugBegin(BAUD_RATE);</span><br><span class="line">  DebugPrint(<span class="string">&quot;Connecting to &quot;</span>);<span class="comment">//写几句提示，哈哈</span></span><br><span class="line">  DebugPrintln(AP_SSID);</span><br><span class="line">  WiFi.begin(AP_SSID, AP_PSK);   <span class="comment">//连接wifi</span></span><br><span class="line">  WiFi.setAutoConnect(<span class="literal">true</span>);</span><br><span class="line">  <span class="keyword">while</span> (WiFi.status() != WL_CONNECTED) &#123;</span><br><span class="line">    <span class="comment">//这个函数是wifi连接状态，返回wifi链接状态</span></span><br><span class="line">    delay(<span class="number">500</span>);</span><br><span class="line">    DebugPrint(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  DebugPrintln(<span class="string">&quot;&quot;</span>);</span><br><span class="line">  DebugPrintln(<span class="string">&quot;WiFi connected&quot;</span>);</span><br><span class="line">  DebugPrint(<span class="string">&quot;IP address: &quot;</span>);</span><br><span class="line">  DebugPrintln(WiFi.localIP());</span><br><span class="line">  <span class="comment">//拼接get请求url  博哥后面考虑看看是否可以封装一个方法来用用 不需要自己一个个拼装这个url</span></span><br><span class="line">  GetUrl = String(HOST) + <span class="string">&quot;/v3/weather/now.json?key=&quot;</span>;</span><br><span class="line">  GetUrl += APIKEY;</span><br><span class="line">  GetUrl += <span class="string">&quot;&amp;location=&quot;</span>;</span><br><span class="line">  GetUrl += CITY;</span><br><span class="line">  GetUrl += <span class="string">&quot;&amp;language=&quot;</span>;</span><br><span class="line">  GetUrl += LANGUAGE;</span><br><span class="line">  <span class="comment">//设置超时</span></span><br><span class="line">  http.setTimeout(HTTP_TIMEOUT);</span><br><span class="line">  <span class="comment">//设置请求url</span></span><br><span class="line">  http.begin(client,GetUrl);</span><br><span class="line">  <span class="comment">//以下为设置一些头  其实没什么用 最重要是后端服务器支持</span></span><br><span class="line">  http.setUserAgent(<span class="string">&quot;esp8266&quot;</span>);<span class="comment">//用户代理版本</span></span><br><span class="line">  http.setAuthorization(<span class="string">&quot;esp8266&quot;</span>,<span class="string">&quot;boge&quot;</span>);<span class="comment">//用户校验信息</span></span><br><span class="line">  http.addHeader(<span class="string">&quot;myname&quot;</span>,<span class="string">&quot;cainiaobo&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//设置获取响应头的信息</span></span><br><span class="line">  http.collectHeaders(keys,<span class="number">4</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="comment">//心知天气  发送http  get请求</span></span><br><span class="line">  <span class="type">int</span> httpCode = http.GET();</span><br><span class="line">  <span class="keyword">if</span> (httpCode &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      Serial.<span class="built_in">printf</span>(<span class="string">&quot;[HTTP] GET... code: %d\n&quot;</span>, httpCode);</span><br><span class="line">      <span class="comment">//判断请求是否成功</span></span><br><span class="line">      <span class="keyword">if</span> (httpCode == HTTP_CODE_OK) &#123;</span><br><span class="line">        <span class="comment">//读取响应内容</span></span><br><span class="line">        response = http.getString();</span><br><span class="line">        DebugPrintln(<span class="string">&quot;Get the data from Internet!&quot;</span>);</span><br><span class="line">        DebugPrintln(response);</span><br><span class="line">        DebugPrintln(String(<span class="string">&quot;Content-Length:&quot;</span>)+ http.header(<span class="string">&quot;Content-Length&quot;</span>));</span><br><span class="line">        DebugPrintln(String(<span class="string">&quot;Content-Type:&quot;</span>)+ http.header(<span class="string">&quot;Content-Type&quot;</span>));</span><br><span class="line">        DebugPrintln(String(<span class="string">&quot;Connection:&quot;</span>)+ http.header(<span class="string">&quot;Connection&quot;</span>));</span><br><span class="line">        DebugPrintln(String(<span class="string">&quot;Date:&quot;</span>)+ http.header(<span class="string">&quot;Date&quot;</span>));</span><br><span class="line">      &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      Serial.<span class="built_in">printf</span>(<span class="string">&quot;[HTTP] GET... failed, error: %s\n&quot;</span>, http.errorToString(httpCode).c_str());</span><br><span class="line">  &#125;</span><br><span class="line">  http.end();</span><br><span class="line">  delay(<span class="number">1000</span>);<span class="comment">//每1s调用一次 </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="14、UDP服务"><a href="#14、UDP服务" class="headerlink" title="14、UDP服务"></a>14、UDP服务</h1><h2 id="1、UDP"><a href="#1、UDP" class="headerlink" title="1、UDP"></a>1、UDP</h2><p>UDP（User Datagram Protocol）一种无连接、不可靠的协议（可能会丢包），</p><p>相对于TCP而言：</p><ul><li><p>UDP面向无连接的，不需建立连接（TCP是面向连接的）</p></li><li><p>UDP尽力做到可靠，但不绝对可靠（TCP无差错、不丢失、不重复且按序到达）</p></li><li><p>UDP较好实时性，效率比TCP高</p></li><li><p>UDP支持一对一，一对多，多对一和多对多的交互通信（TCP点到点）</p></li><li><p>UDP对系统资源要求较少（TCP多）</p></li></ul><h2 id="2、库和示例"><a href="#2、库和示例" class="headerlink" title="2、库和示例"></a>2、库和示例</h2><p><a href="https://imgtu.com/i/f31s6s"><img src="https://z3.ax1x.com/2021/08/09/f31s6s.png" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/08/09/f31s6s.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="f31s6s.png"></a></p><ol><li>通过UDP收发数据</li></ol><p>ESP8266作为UDP服务端，把电脑UDP客户端发过来的数据打印到串口调试器，并回复应答消息（使用Packet Sender软件发送UDP数据）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WiFi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;WiFiUdp.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* ssid = <span class="string">&quot;XU-ChinaNet&quot;</span>;<span class="comment">//wifi账号</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* password = <span class="string">&quot;15358228063&quot;</span>;<span class="comment">//wifi密码</span></span><br><span class="line"></span><br><span class="line">WiFiUDP Udp;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> localUdpPort = <span class="number">4210</span>;  <span class="comment">// 本地监听端口</span></span><br><span class="line"><span class="type">char</span> incomingPacket[<span class="number">255</span>];  <span class="comment">// 存储Udp客户端发过来的数据</span></span><br><span class="line"><span class="type">char</span>  replyPacket[] = <span class="string">&quot;Hi there! Got the message :-)&quot;</span>;  <span class="comment">// 应答信息</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  Serial.begin(<span class="number">115200</span>);</span><br><span class="line">  Serial.println();</span><br><span class="line"></span><br><span class="line">  Serial.<span class="built_in">printf</span>(<span class="string">&quot;Connecting to %s &quot;</span>, ssid);</span><br><span class="line">  WiFi.begin(ssid, password);</span><br><span class="line">  <span class="keyword">while</span> (WiFi.status() != WL_CONNECTED)</span><br><span class="line">  &#123;</span><br><span class="line">    delay(<span class="number">500</span>);</span><br><span class="line">    Serial.print(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  Serial.println(<span class="string">&quot; connected&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//启动Udp监听服务</span></span><br><span class="line">  Udp.begin(localUdpPort);</span><br><span class="line">  <span class="comment">//打印本地ip地址，udp client端会使用到</span></span><br><span class="line">  Serial.<span class="built_in">printf</span>(<span class="string">&quot;Now listening at IP %s, UDP port %d\n&quot;</span>, WiFi.localIP().toString().c_str(), localUdpPort);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">//解析Udp数据包</span></span><br><span class="line">  <span class="type">int</span> packetSize = Udp.parsePacket();</span><br><span class="line">  <span class="keyword">if</span> (packetSize)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">// 收到Udp数据包</span></span><br><span class="line">    Serial.<span class="built_in">printf</span>(<span class="string">&quot;Received %d bytes from %s, port %d\n&quot;</span>, packetSize, Udp.remoteIP().toString().c_str(), Udp.remotePort());</span><br><span class="line">    <span class="comment">// 读取Udp数据包</span></span><br><span class="line">    <span class="type">int</span> len = Udp.read(incomingPacket, <span class="number">255</span>);</span><br><span class="line">    <span class="keyword">if</span> (len &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      incomingPacket[len] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//向D串口调试器打印信息</span></span><br><span class="line">    Serial.<span class="built_in">printf</span>(<span class="string">&quot;UP packet contents: %s\n&quot;</span>, incomingPacket);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//往udp 远端发送应答信息</span></span><br><span class="line">    Udp.beginPacket(Udp.remoteIP(), Udp.remotePort());</span><br><span class="line">    Udp.write(replyPacket);</span><br><span class="line">    Udp.endPacket();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>通过UDP控制LED</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WiFi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;WiFiUdp.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">char</span> *ssid = <span class="string">&quot;XU-ChinaNet&quot;</span>;     <span class="comment">//wifi名称</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span> *password = <span class="string">&quot;15358228063&quot;</span>; <span class="comment">//wifi密码</span></span><br><span class="line"></span><br><span class="line">WiFiUDP Udp;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> localUdpPort = <span class="number">4210</span>; <span class="comment">// 本地端口号</span></span><br><span class="line"><span class="type">char</span> incomingPacket[<span class="number">255</span>];         <span class="comment">// 接收缓冲区</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">//以下为基本功能初始化，初始化串口和网络和LED</span></span><br><span class="line">  pinMode(LED_BUILTIN, OUTPUT);</span><br><span class="line">  Serial.begin(<span class="number">115200</span>);</span><br><span class="line">  Serial.println();</span><br><span class="line">  Serial.<span class="built_in">printf</span>(<span class="string">&quot;Connecting to %s &quot;</span>, ssid);</span><br><span class="line">  WiFi.mode(WIFI_STA);</span><br><span class="line">  WiFi.begin(ssid, password);</span><br><span class="line">  <span class="keyword">while</span> (WiFi.status() != WL_CONNECTED)</span><br><span class="line">  &#123;</span><br><span class="line">    delay(<span class="number">500</span>);</span><br><span class="line">    Serial.print(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  Serial.println(<span class="string">&quot; connected&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//以下开启UDP监听并打印输出信息</span></span><br><span class="line">  Udp.begin(localUdpPort);</span><br><span class="line">  Serial.<span class="built_in">printf</span>(<span class="string">&quot;Now listening at IP %s, UDP port %d\n&quot;</span>, WiFi.localIP().toString().c_str(), localUdpPort);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> packetSize = Udp.parsePacket(); <span class="comment">//获取当前队首数据包长度</span></span><br><span class="line">  <span class="keyword">if</span> (packetSize)  <span class="comment">// 有数据可用</span></span><br><span class="line">  &#123;</span><br><span class="line">    Serial.<span class="built_in">printf</span>(<span class="string">&quot;Received %d bytes from %s, port %d\n&quot;</span>, packetSize, Udp.remoteIP().toString().c_str(), Udp.remotePort());</span><br><span class="line">    <span class="type">int</span> len = Udp.read(incomingPacket, <span class="number">255</span>); <span class="comment">// 读取数据到incomingPacket</span></span><br><span class="line">    <span class="keyword">if</span> (len &gt; <span class="number">0</span>)                             <span class="comment">// 如果正确读取</span></span><br><span class="line">    &#123;</span><br><span class="line">      incomingPacket[len] = <span class="number">0</span>; <span class="comment">//末尾补0结束字符串</span></span><br><span class="line">      Serial.<span class="built_in">printf</span>(<span class="string">&quot;UDP packet contents: %s\n&quot;</span>, incomingPacket);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (<span class="built_in">strcmp</span>(incomingPacket, <span class="string">&quot;LED_OFF&quot;</span>) == <span class="number">0</span>) <span class="comment">// 命令LED_OFF</span></span><br><span class="line">      &#123;</span><br><span class="line">        digitalWrite(LED_BUILTIN, HIGH); <span class="comment">// 熄灭LED</span></span><br><span class="line">        sendCallBack(<span class="string">&quot;LED has been turn off&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(incomingPacket, <span class="string">&quot;LED_ON&quot;</span>) == <span class="number">0</span>) <span class="comment">// 如果收到LED_ON</span></span><br><span class="line">      &#123;</span><br><span class="line">        digitalWrite(LED_BUILTIN, LOW); <span class="comment">// 点亮LED</span></span><br><span class="line">        sendCallBack(<span class="string">&quot;LED has been turn on&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span> <span class="comment">// 如果非指定消息</span></span><br><span class="line">      &#123;</span><br><span class="line">        sendCallBack(<span class="string">&quot;Command Error!&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 发送响应信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">sendCallBack</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *buffer)</span>&#123;</span><br><span class="line">   Udp.beginPacket(Udp.remoteIP(), Udp.remotePort());</span><br><span class="line">   Udp.write(buffer); <span class="comment">//回复内容</span></span><br><span class="line">   Udp.endPacket(); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="15、WebServer–ESP8266WebServer库"><a href="#15、WebServer–ESP8266WebServer库" class="headerlink" title="15、WebServer–ESP8266WebServer库"></a>15、WebServer–ESP8266WebServer库</h1><p><a href="https://imgtu.com/i/f8kYYq"><img src="https://z3.ax1x.com/2021/08/09/f8kYYq.png" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/08/09/f8kYYq.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="f8kYYq.png"></a></p><p><strong>示例：</strong></p><ol><li>演示webserver基础功能，wifi模块连接上热点后，在PC浏览器上输入serverip+url访问</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Demo：</span></span><br><span class="line"><span class="comment"> *    演示webserver基础功能</span></span><br><span class="line"><span class="comment"> *    (当wifi模块连接上ap之后，在pc浏览器中输入ip+uri来访问)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WiFi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WebServer.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//以下三个定义为调试定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugBegin(baud_rate)    Serial.begin(baud_rate)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrintln(message)    Serial.println(message)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrint(message)    Serial.print(message)</span></span><br><span class="line"> </span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* AP_SSID     = <span class="string">&quot;TP-LINK_5344&quot;</span>;         <span class="comment">// XXXXXX -- 使用时请修改为当前你的 wifi ssid</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* AP_PSK = <span class="string">&quot;6206908you11011010&quot;</span>;         <span class="comment">// XXXXXX -- 使用时请修改为当前你的 wifi 密码</span></span><br><span class="line"><span class="type">const</span> <span class="type">unsigned</span> <span class="type">long</span> BAUD_RATE = <span class="number">115200</span>;                   <span class="comment">// serial connection speed</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//声明一下函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">initBasic</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">initWifi</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">initWebServer</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"> </span><br><span class="line">ESP8266WebServer <span class="title function_">server</span><span class="params">(<span class="number">80</span>)</span>;<span class="comment">//创建一个webserver</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 处理根目录uri请求</span></span><br><span class="line"><span class="comment"> * uri:http://server_ip/</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">handleRoot</span><span class="params">()</span> &#123;</span><br><span class="line">  server.send(<span class="number">200</span>, <span class="string">&quot;text/plain&quot;</span>, <span class="string">&quot;hello from esp8266!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 处理无效uri</span></span><br><span class="line"><span class="comment"> * uri:http://server_ip/xxxx</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">handleNotFound</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="comment">//打印无效uri的信息 包括请求方式 请求参数</span></span><br><span class="line">  String message = <span class="string">&quot;File Not Found\n\n&quot;</span>;</span><br><span class="line">  message += <span class="string">&quot;URI: &quot;</span>;</span><br><span class="line">  message += server.uri();</span><br><span class="line">  message += <span class="string">&quot;\nMethod: &quot;</span>;</span><br><span class="line">  message += (server.method() == HTTP_GET) ? <span class="string">&quot;GET&quot;</span> : <span class="string">&quot;POST&quot;</span>;</span><br><span class="line">  message += <span class="string">&quot;\nArguments: &quot;</span>;</span><br><span class="line">  message += server.args();</span><br><span class="line">  message += <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">uint8_t</span> i = <span class="number">0</span>; i &lt; server.args(); i++) &#123;</span><br><span class="line">    message += <span class="string">&quot; &quot;</span> + server.argName(i) + <span class="string">&quot;: &quot;</span> + server.arg(i) + <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  server.send(<span class="number">404</span>, <span class="string">&quot;text/plain&quot;</span>, message);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">  initBasic();</span><br><span class="line">  initWifi();</span><br><span class="line">  initWebServer();</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 初始化基础功能：波特率</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">initBasic</span><span class="params">()</span>&#123;</span><br><span class="line">  DebugBegin(BAUD_RATE);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 初始化wifi模块：工作模式 连接网络</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">initWifi</span><span class="params">()</span>&#123;</span><br><span class="line">  WiFi.mode(WIFI_STA);</span><br><span class="line">  WiFi.begin(AP_SSID, AP_PSK);</span><br><span class="line">  DebugPrintln(<span class="string">&quot;&quot;</span>);</span><br><span class="line"> </span><br><span class="line">  <span class="comment">// Wait for connection</span></span><br><span class="line">  <span class="keyword">while</span> (WiFi.status() != WL_CONNECTED) &#123;</span><br><span class="line">    delay(<span class="number">500</span>);</span><br><span class="line">    DebugPrint(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  DebugPrintln(<span class="string">&quot;&quot;</span>);</span><br><span class="line">  DebugPrint(<span class="string">&quot;Connected to &quot;</span>);</span><br><span class="line">  DebugPrintln(AP_SSID);</span><br><span class="line">  DebugPrint(<span class="string">&quot;IP address: &quot;</span>);</span><br><span class="line">  DebugPrintln(WiFi.localIP());</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 初始化webserver</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">initWebServer</span><span class="params">()</span>&#123;</span><br><span class="line">  <span class="comment">//以下配置uri对应的handler</span></span><br><span class="line">  server.on(<span class="string">&quot;/&quot;</span>, handleRoot);</span><br><span class="line"> </span><br><span class="line">  server.on(<span class="string">&quot;/inline&quot;</span>, []() &#123;</span><br><span class="line">    server.send(<span class="number">200</span>, <span class="string">&quot;text/plain&quot;</span>, <span class="string">&quot;this works as well&quot;</span>);</span><br><span class="line">  &#125;);</span><br><span class="line"> </span><br><span class="line">  server.onNotFound(handleNotFound);</span><br><span class="line">  <span class="comment">//启动webserver</span></span><br><span class="line">  server.begin();</span><br><span class="line">  DebugPrintln(<span class="string">&quot;HTTP server started&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">  server.handleClient();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="2"><li>演示webserver返回html功能</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Demo：</span></span><br><span class="line"><span class="comment"> *    演示webserver html功能</span></span><br><span class="line"><span class="comment"> *    (当wifi模块连接上ap之后，在pc浏览器中输入ip+uri来访问)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WiFi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WebServer.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//以下三个定义为调试定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugBegin(baud_rate)    Serial.begin(baud_rate)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrintln(message)    Serial.println(message)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrint(message)    Serial.print(message)</span></span><br><span class="line"> </span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* AP_SSID     = <span class="string">&quot;XU-ChinaNet&quot;</span>;         <span class="comment">// XXXXXX -- 使用时请修改为当前你的 wifi ssid</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* AP_PSK = <span class="string">&quot;15358228063&quot;</span>;         <span class="comment">// XXXXXX -- 使用时请修改为当前你的 wifi 密码</span></span><br><span class="line"><span class="type">const</span> <span class="type">unsigned</span> <span class="type">long</span> BAUD_RATE = <span class="number">115200</span>;                   <span class="comment">// serial connection speed</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//声明一下函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">initBasic</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">initWifi</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">initWebServer</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"> </span><br><span class="line">ESP8266WebServer <span class="title function_">server</span><span class="params">(<span class="number">80</span>)</span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 处理根目录uri请求</span></span><br><span class="line"><span class="comment"> * uri:http://server_ip/</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">handleRoot</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="type">char</span> temp[<span class="number">400</span>];</span><br><span class="line">  <span class="type">int</span> sec = millis() / <span class="number">1000</span>;</span><br><span class="line">  <span class="type">int</span> min = sec / <span class="number">60</span>;</span><br><span class="line">  <span class="type">int</span> hr = min / <span class="number">60</span>;</span><br><span class="line"> </span><br><span class="line">  <span class="built_in">snprintf</span>(temp, <span class="number">400</span>,</span><br><span class="line"> </span><br><span class="line">           <span class="string">&quot;&lt;html&gt;\</span></span><br><span class="line"><span class="string">  &lt;head&gt;\</span></span><br><span class="line"><span class="string">    &lt;meta http-equiv=&#x27;refresh&#x27; content=&#x27;5&#x27;/&gt;\</span></span><br><span class="line"><span class="string">    &lt;title&gt;ESP8266 Demo&lt;/title&gt;\</span></span><br><span class="line"><span class="string">    &lt;style&gt;\</span></span><br><span class="line"><span class="string">      body &#123; background-color: #cccccc; font-family: Arial, Helvetica, Sans-Serif; Color: #000088; &#125;\</span></span><br><span class="line"><span class="string">    &lt;/style&gt;\</span></span><br><span class="line"><span class="string">  &lt;/head&gt;\</span></span><br><span class="line"><span class="string">  &lt;body&gt;\</span></span><br><span class="line"><span class="string">    &lt;h1&gt;Hello from ESP8266!&lt;/h1&gt;\</span></span><br><span class="line"><span class="string">    &lt;p&gt;Uptime: %02d:%02d:%02d&lt;/p&gt;\</span></span><br><span class="line"><span class="string">    &lt;img src=\&quot;/test.svg\&quot; /&gt;\</span></span><br><span class="line"><span class="string">  &lt;/body&gt;\</span></span><br><span class="line"><span class="string">&lt;/html&gt;&quot;</span>,</span><br><span class="line"> </span><br><span class="line">           hr, min % <span class="number">60</span>, sec % <span class="number">60</span></span><br><span class="line">          );</span><br><span class="line">  server.send(<span class="number">200</span>, <span class="string">&quot;text/html&quot;</span>, temp);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 处理无效uri</span></span><br><span class="line"><span class="comment"> * uri:http://server_ip/xxxx</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">handleNotFound</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="comment">//打印无效uri的信息 包括请求方式 请求参数</span></span><br><span class="line">  String message = <span class="string">&quot;File Not Found\n\n&quot;</span>;</span><br><span class="line">  message += <span class="string">&quot;URI: &quot;</span>;</span><br><span class="line">  message += server.uri();</span><br><span class="line">  message += <span class="string">&quot;\nMethod: &quot;</span>;</span><br><span class="line">  message += (server.method() == HTTP_GET) ? <span class="string">&quot;GET&quot;</span> : <span class="string">&quot;POST&quot;</span>;</span><br><span class="line">  message += <span class="string">&quot;\nArguments: &quot;</span>;</span><br><span class="line">  message += server.args();</span><br><span class="line">  message += <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">uint8_t</span> i = <span class="number">0</span>; i &lt; server.args(); i++) &#123;</span><br><span class="line">    message += <span class="string">&quot; &quot;</span> + server.argName(i) + <span class="string">&quot;: &quot;</span> + server.arg(i) + <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  server.send(<span class="number">404</span>, <span class="string">&quot;text/plain&quot;</span>, message);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">  initBasic();</span><br><span class="line">  initWifi();</span><br><span class="line">  initWebServer();</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">  server.handleClient();</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 初始化基础功能：波特率</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">initBasic</span><span class="params">()</span>&#123;</span><br><span class="line">  DebugBegin(BAUD_RATE);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 初始化wifi模块：工作模式 连接网络</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">initWifi</span><span class="params">()</span>&#123;</span><br><span class="line">  WiFi.mode(WIFI_STA);</span><br><span class="line">  WiFi.begin(AP_SSID, AP_PSK);</span><br><span class="line">  DebugPrintln(<span class="string">&quot;&quot;</span>);</span><br><span class="line"> </span><br><span class="line">  <span class="comment">// Wait for connection</span></span><br><span class="line">  <span class="keyword">while</span> (WiFi.status() != WL_CONNECTED) &#123;</span><br><span class="line">    delay(<span class="number">500</span>);</span><br><span class="line">    DebugPrint(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  DebugPrintln(<span class="string">&quot;&quot;</span>);</span><br><span class="line">  DebugPrint(<span class="string">&quot;Connected to &quot;</span>);</span><br><span class="line">  DebugPrintln(AP_SSID);</span><br><span class="line">  DebugPrint(<span class="string">&quot;IP address: &quot;</span>);</span><br><span class="line">  DebugPrintln(WiFi.localIP());</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 初始化webserver</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">initWebServer</span><span class="params">()</span>&#123;</span><br><span class="line">  <span class="comment">//以下配置uri对应的handler</span></span><br><span class="line">  server.on(<span class="string">&quot;/&quot;</span>, handleRoot);</span><br><span class="line"> </span><br><span class="line">  server.on(<span class="string">&quot;/inline&quot;</span>, []() &#123;</span><br><span class="line">    server.send(<span class="number">200</span>, <span class="string">&quot;text/plain&quot;</span>, <span class="string">&quot;this works as well&quot;</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">  server.on(<span class="string">&quot;/test.svg&quot;</span>, drawGraph);</span><br><span class="line">  server.onNotFound(handleNotFound);</span><br><span class="line">  <span class="comment">//启动webserver</span></span><br><span class="line">  server.begin();</span><br><span class="line">  DebugPrintln(<span class="string">&quot;HTTP server started&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 画图</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">drawGraph</span><span class="params">()</span> &#123;</span><br><span class="line">  String out = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="type">char</span> temp[<span class="number">100</span>];</span><br><span class="line">  out += <span class="string">&quot;&lt;svg xmlns=\&quot;http://www.w3.org/2000/svg\&quot; version=\&quot;1.1\&quot; width=\&quot;400\&quot; height=\&quot;150\&quot;&gt;\n&quot;</span>;</span><br><span class="line">  out += <span class="string">&quot;&lt;rect width=\&quot;400\&quot; height=\&quot;150\&quot; fill=\&quot;rgb(250, 230, 210)\&quot; stroke-width=\&quot;1\&quot; stroke=\&quot;rgb(0, 0, 0)\&quot; /&gt;\n&quot;</span>;</span><br><span class="line">  out += <span class="string">&quot;&lt;g stroke=\&quot;black\&quot;&gt;\n&quot;</span>;</span><br><span class="line">  <span class="type">int</span> y = rand() % <span class="number">130</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> x = <span class="number">10</span>; x &lt; <span class="number">390</span>; x += <span class="number">10</span>) &#123;</span><br><span class="line">    <span class="type">int</span> y2 = rand() % <span class="number">130</span>;</span><br><span class="line">    <span class="built_in">sprintf</span>(temp, <span class="string">&quot;&lt;line x1=\&quot;%d\&quot; y1=\&quot;%d\&quot; x2=\&quot;%d\&quot; y2=\&quot;%d\&quot; stroke-width=\&quot;1\&quot; /&gt;\n&quot;</span>, x, <span class="number">140</span> - y, x + <span class="number">10</span>, <span class="number">140</span> - y2);</span><br><span class="line">    out += temp;</span><br><span class="line">    y = y2;</span><br><span class="line">  &#125;</span><br><span class="line">  out += <span class="string">&quot;&lt;/g&gt;\n&lt;/svg&gt;\n&quot;</span>;</span><br><span class="line"> </span><br><span class="line">  server.send(<span class="number">200</span>, <span class="string">&quot;image/svg+xml&quot;</span>, out);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="3"><li>演示webserver校验账号密码功能，Autherticate请求头</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Demo：</span></span><br><span class="line"><span class="comment"> *    演示webserver auth校验功能</span></span><br><span class="line"><span class="comment"> *    (当wifi模块连接上ap之后，在pc浏览器中输入ip+uri来访问，不过需要带校验请求头)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WiFi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WebServer.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//以下三个定义为调试定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugBegin(baud_rate)    Serial.begin(baud_rate)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrintln(message)    Serial.println(message)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrint(message)    Serial.print(message)</span></span><br><span class="line"> </span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* AP_SSID     = <span class="string">&quot;XU-ChinaNet&quot;</span>;         <span class="comment">// XXXXXX -- 使用时请修改为当前你的 wifi ssid</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* AP_PSK = <span class="string">&quot;15358228063&quot;</span>;         <span class="comment">// XXXXXX -- 使用时请修改为当前你的 wifi 密码</span></span><br><span class="line"><span class="type">const</span> <span class="type">unsigned</span> <span class="type">long</span> BAUD_RATE = <span class="number">115200</span>;                   <span class="comment">// serial connection speed</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* www_username = <span class="string">&quot;admin&quot;</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* www_password = <span class="string">&quot;esp8266&quot;</span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//声明一下函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">initBasic</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">initWifi</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">initWebServer</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"> </span><br><span class="line">ESP8266WebServer <span class="title function_">server</span><span class="params">(<span class="number">80</span>)</span>;<span class="comment">//创建webserver</span></span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">  initBasic();</span><br><span class="line">  initWifi();</span><br><span class="line">  initWebServer();</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">  server.handleClient();</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 初始化基础功能：波特率</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">initBasic</span><span class="params">()</span>&#123;</span><br><span class="line">  DebugBegin(BAUD_RATE);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 初始化wifi模块：工作模式 连接网络</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">initWifi</span><span class="params">()</span>&#123;</span><br><span class="line">  WiFi.mode(WIFI_STA);</span><br><span class="line">  WiFi.begin(AP_SSID, AP_PSK);</span><br><span class="line">  DebugPrintln(<span class="string">&quot;&quot;</span>);</span><br><span class="line"> </span><br><span class="line">  <span class="comment">// Wait for connection</span></span><br><span class="line">  <span class="keyword">while</span> (WiFi.status() != WL_CONNECTED) &#123;</span><br><span class="line">    delay(<span class="number">500</span>);</span><br><span class="line">    DebugPrint(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  DebugPrintln(<span class="string">&quot;&quot;</span>);</span><br><span class="line">  DebugPrint(<span class="string">&quot;Connected to &quot;</span>);</span><br><span class="line">  DebugPrintln(AP_SSID);</span><br><span class="line">  DebugPrint(<span class="string">&quot;IP address: &quot;</span>);</span><br><span class="line">  DebugPrintln(WiFi.localIP());</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 初始化webserver</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">initWebServer</span><span class="params">()</span>&#123;</span><br><span class="line">  <span class="comment">//以下配置uri对应的handler</span></span><br><span class="line">  server.on(<span class="string">&quot;/&quot;</span>, []() &#123;</span><br><span class="line">    <span class="comment">//校验帐号和密码</span></span><br><span class="line">    <span class="keyword">if</span> (!server.authenticate(www_username, www_password)) &#123;</span><br><span class="line">      <span class="keyword">return</span> server.requestAuthentication();</span><br><span class="line">    &#125;</span><br><span class="line">    server.send(<span class="number">200</span>, <span class="string">&quot;text/plain&quot;</span>, <span class="string">&quot;Login OK&quot;</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">  server.begin();</span><br><span class="line"> </span><br><span class="line">  DebugPrint(<span class="string">&quot;Open http://&quot;</span>);</span><br><span class="line">  DebugPrint(WiFi.localIP());</span><br><span class="line">  DebugPrintln(<span class="string">&quot;/ in your browser to see it working&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="4"><li>演示webserver登录功能，html登录页面</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Demo：</span></span><br><span class="line"><span class="comment"> *    演示webserver auth校验功能</span></span><br><span class="line"><span class="comment"> *    (当wifi模块连接上ap之后，在pc浏览器中输入ip+uri来访问，不过需要带校验请求头)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WiFi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WebServer.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//以下三个定义为调试定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugBegin(baud_rate)    Serial.begin(baud_rate)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrintln(message)    Serial.println(message)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrint(message)    Serial.print(message)</span></span><br><span class="line"> </span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* AP_SSID     = <span class="string">&quot;TP-LINK_5344&quot;</span>;         <span class="comment">// XXXXXX -- 使用时请修改为当前你的 wifi ssid</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* AP_PSK = <span class="string">&quot;6206908you11011010&quot;</span>;         <span class="comment">// XXXXXX -- 使用时请修改为当前你的 wifi 密码</span></span><br><span class="line"><span class="type">const</span> <span class="type">unsigned</span> <span class="type">long</span> BAUD_RATE = <span class="number">115200</span>;                   <span class="comment">// serial connection speed</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//声明一下函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">initBasic</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">initWifi</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">initWebServer</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"> </span><br><span class="line">ESP8266WebServer <span class="title function_">server</span><span class="params">(<span class="number">80</span>)</span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 校验是否存在cookie头并且cookie头的值是正确的</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">is_authentified</span><span class="params">()</span> &#123;</span><br><span class="line">  DebugPrintln(<span class="string">&quot;Enter is_authentified&quot;</span>);</span><br><span class="line">  <span class="comment">//是否存在cookie头</span></span><br><span class="line">  <span class="keyword">if</span> (server.hasHeader(<span class="string">&quot;Cookie&quot;</span>)) &#123;</span><br><span class="line">    DebugPrint(<span class="string">&quot;Found cookie: &quot;</span>);</span><br><span class="line">    <span class="comment">//获取cookie头的信息</span></span><br><span class="line">    String cookie = server.header(<span class="string">&quot;Cookie&quot;</span>);</span><br><span class="line">    DebugPrintln(cookie);</span><br><span class="line">    <span class="keyword">if</span> (cookie.indexOf(<span class="string">&quot;ESPSESSIONID=1&quot;</span>) != <span class="number">-1</span>) &#123;</span><br><span class="line">      DebugPrintln(<span class="string">&quot;Authentification Successful&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  DebugPrintln(<span class="string">&quot;Authentification Failed&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 处理登陆uri</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">handleLogin</span><span class="params">()</span> &#123;</span><br><span class="line">  String msg;</span><br><span class="line">  <span class="comment">//判断是否存在cookie头</span></span><br><span class="line">  <span class="keyword">if</span> (server.hasHeader(<span class="string">&quot;Cookie&quot;</span>)) &#123;</span><br><span class="line">    DebugPrint(<span class="string">&quot;Found cookie: &quot;</span>);</span><br><span class="line">    String cookie = server.header(<span class="string">&quot;Cookie&quot;</span>);</span><br><span class="line">    DebugPrint(cookie);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//判断是否存在DISCONNECT参数</span></span><br><span class="line">  <span class="keyword">if</span> (server.hasArg(<span class="string">&quot;DISCONNECT&quot;</span>)) &#123;</span><br><span class="line">    DebugPrintln(<span class="string">&quot;Disconnection&quot;</span>);</span><br><span class="line">    server.sendHeader(<span class="string">&quot;Location&quot;</span>, <span class="string">&quot;/login&quot;</span>);</span><br><span class="line">    server.sendHeader(<span class="string">&quot;Cache-Control&quot;</span>, <span class="string">&quot;no-cache&quot;</span>);</span><br><span class="line">    server.sendHeader(<span class="string">&quot;Set-Cookie&quot;</span>, <span class="string">&quot;ESPSESSIONID=0&quot;</span>);</span><br><span class="line">    server.send(<span class="number">301</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//判断是否存在USERNAME和PASSWORD参数</span></span><br><span class="line">  <span class="keyword">if</span> (server.hasArg(<span class="string">&quot;USERNAME&quot;</span>) &amp;&amp; server.hasArg(<span class="string">&quot;PASSWORD&quot;</span>)) &#123;</span><br><span class="line">    <span class="keyword">if</span> (server.arg(<span class="string">&quot;USERNAME&quot;</span>) == <span class="string">&quot;admin&quot;</span> &amp;&amp;  server.arg(<span class="string">&quot;PASSWORD&quot;</span>) == <span class="string">&quot;admin&quot;</span>) &#123;</span><br><span class="line">      server.sendHeader(<span class="string">&quot;Location&quot;</span>, <span class="string">&quot;/&quot;</span>);</span><br><span class="line">      server.sendHeader(<span class="string">&quot;Cache-Control&quot;</span>, <span class="string">&quot;no-cache&quot;</span>);</span><br><span class="line">      server.sendHeader(<span class="string">&quot;Set-Cookie&quot;</span>, <span class="string">&quot;ESPSESSIONID=1&quot;</span>);</span><br><span class="line">      server.send(<span class="number">301</span>);</span><br><span class="line">      DebugPrintln(<span class="string">&quot;Log in Successful&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    msg = <span class="string">&quot;Wrong username/password! try again.&quot;</span>;</span><br><span class="line">    DebugPrintln(<span class="string">&quot;Log in Failed&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//返回html 填写账号密码页面</span></span><br><span class="line">  String content = <span class="string">&quot;&lt;html&gt;&lt;body&gt;&lt;form action=&#x27;/login&#x27; method=&#x27;POST&#x27;&gt;To log in, please use : admin/admin&lt;br&gt;&quot;</span>;</span><br><span class="line">  content += <span class="string">&quot;User:&lt;input type=&#x27;text&#x27; name=&#x27;USERNAME&#x27; placeholder=&#x27;user name&#x27;&gt;&lt;br&gt;&quot;</span>;</span><br><span class="line">  content += <span class="string">&quot;Password:&lt;input type=&#x27;password&#x27; name=&#x27;PASSWORD&#x27; placeholder=&#x27;password&#x27;&gt;&lt;br&gt;&quot;</span>;</span><br><span class="line">  content += <span class="string">&quot;&lt;input type=&#x27;submit&#x27; name=&#x27;SUBMIT&#x27; value=&#x27;Submit&#x27;&gt;&lt;/form&gt;&quot;</span> + msg + <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">  content += <span class="string">&quot;You also can go &lt;a href=&#x27;/inline&#x27;&gt;here&lt;/a&gt;&lt;/body&gt;&lt;/html&gt;&quot;</span>;</span><br><span class="line">  server.send(<span class="number">200</span>, <span class="string">&quot;text/html&quot;</span>, content);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根目录处理器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">//root page can be accessed only if authentification is ok</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">handleRoot</span><span class="params">()</span> &#123;</span><br><span class="line">  DebugPrintln(<span class="string">&quot;Enter handleRoot&quot;</span>);</span><br><span class="line">  String header;</span><br><span class="line">  <span class="keyword">if</span> (!is_authentified()) &#123;</span><br><span class="line">    <span class="comment">//校验不通过</span></span><br><span class="line">    server.sendHeader(<span class="string">&quot;Location&quot;</span>, <span class="string">&quot;/login&quot;</span>);</span><br><span class="line">    server.sendHeader(<span class="string">&quot;Cache-Control&quot;</span>, <span class="string">&quot;no-cache&quot;</span>);</span><br><span class="line">    server.send(<span class="number">301</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  String content = <span class="string">&quot;&lt;html&gt;&lt;body&gt;&lt;H2&gt;hello, you successfully connected to esp8266!&lt;/H2&gt;&lt;br&gt;&quot;</span>;</span><br><span class="line">  <span class="keyword">if</span> (server.hasHeader(<span class="string">&quot;User-Agent&quot;</span>)) &#123;</span><br><span class="line">    content += <span class="string">&quot;the user agent used is : &quot;</span> + server.header(<span class="string">&quot;User-Agent&quot;</span>) + <span class="string">&quot;&lt;br&gt;&lt;br&gt;&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  content += <span class="string">&quot;You can access this page until you &lt;a href=\&quot;/login?DISCONNECT=YES\&quot;&gt;disconnect&lt;/a&gt;&lt;/body&gt;&lt;/html&gt;&quot;</span>;</span><br><span class="line">  server.send(<span class="number">200</span>, <span class="string">&quot;text/html&quot;</span>, content);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 无效uri处理器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">handleNotFound</span><span class="params">()</span> &#123;</span><br><span class="line">  String message = <span class="string">&quot;File Not Found\n\n&quot;</span>;</span><br><span class="line">  message += <span class="string">&quot;URI: &quot;</span>;</span><br><span class="line">  message += server.uri();</span><br><span class="line">  message += <span class="string">&quot;\nMethod: &quot;</span>;</span><br><span class="line">  message += (server.method() == HTTP_GET) ? <span class="string">&quot;GET&quot;</span> : <span class="string">&quot;POST&quot;</span>;</span><br><span class="line">  message += <span class="string">&quot;\nArguments: &quot;</span>;</span><br><span class="line">  message += server.args();</span><br><span class="line">  message += <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">uint8_t</span> i = <span class="number">0</span>; i &lt; server.args(); i++) &#123;</span><br><span class="line">    message += <span class="string">&quot; &quot;</span> + server.argName(i) + <span class="string">&quot;: &quot;</span> + server.arg(i) + <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  server.send(<span class="number">404</span>, <span class="string">&quot;text/plain&quot;</span>, message);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">  initBasic();</span><br><span class="line">  initWifi();</span><br><span class="line">  initWebServer();</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">  server.handleClient();</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 初始化基础功能：波特率</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">initBasic</span><span class="params">()</span>&#123;</span><br><span class="line">  DebugBegin(BAUD_RATE);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 初始化wifi模块：工作模式 连接网络</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">initWifi</span><span class="params">()</span>&#123;</span><br><span class="line">  WiFi.mode(WIFI_STA);</span><br><span class="line">  WiFi.begin(AP_SSID, AP_PSK);</span><br><span class="line">  DebugPrintln(<span class="string">&quot;&quot;</span>);</span><br><span class="line"> </span><br><span class="line">  <span class="comment">// Wait for connection</span></span><br><span class="line">  <span class="keyword">while</span> (WiFi.status() != WL_CONNECTED) &#123;</span><br><span class="line">    delay(<span class="number">500</span>);</span><br><span class="line">    DebugPrint(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  DebugPrintln(<span class="string">&quot;&quot;</span>);</span><br><span class="line">  DebugPrint(<span class="string">&quot;Connected to &quot;</span>);</span><br><span class="line">  DebugPrintln(AP_SSID);</span><br><span class="line">  DebugPrint(<span class="string">&quot;IP address: &quot;</span>);</span><br><span class="line">  DebugPrintln(WiFi.localIP());</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 初始化webserver</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">initWebServer</span><span class="params">()</span>&#123;</span><br><span class="line">  <span class="comment">//以下配置uri对应的handler</span></span><br><span class="line">  </span><br><span class="line">  server.on(<span class="string">&quot;/&quot;</span>, handleRoot);</span><br><span class="line">  server.on(<span class="string">&quot;/login&quot;</span>, handleLogin);</span><br><span class="line">  server.on(<span class="string">&quot;/inline&quot;</span>, []() &#123;</span><br><span class="line">    server.send(<span class="number">200</span>, <span class="string">&quot;text/plain&quot;</span>, <span class="string">&quot;this works without need of authentification&quot;</span>);</span><br><span class="line">  &#125;);</span><br><span class="line"> </span><br><span class="line">  server.onNotFound(handleNotFound);</span><br><span class="line">  <span class="comment">//设置需要收集的请求头</span></span><br><span class="line">  <span class="type">const</span> <span class="type">char</span> * headerkeys[] = &#123;<span class="string">&quot;User-Agent&quot;</span>, <span class="string">&quot;Cookie&quot;</span>&#125; ;</span><br><span class="line">  <span class="type">size_t</span> headerkeyssize = <span class="keyword">sizeof</span>(headerkeys) / <span class="keyword">sizeof</span>(<span class="type">char</span>*);</span><br><span class="line">  <span class="comment">//收集头信息</span></span><br><span class="line">  server.collectHeaders(headerkeys, headerkeyssize);</span><br><span class="line">  server.begin();</span><br><span class="line">  DebugPrintln(<span class="string">&quot;HTTP server started&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="16、域名服务–ESP8266mDNS库"><a href="#16、域名服务–ESP8266mDNS库" class="headerlink" title="16、域名服务–ESP8266mDNS库"></a>16、域名服务–ESP8266mDNS库</h1><h2 id="1、DNS"><a href="#1、DNS" class="headerlink" title="1、DNS"></a>1、DNS</h2><p>​DNS（Domain Name System）域名系统（因特网上作为域名和IP地址相互映射的一个分布式数据库），DNS协议运行在UDP协议上，端口号53，mDNS（Multicast DNS）组播dns，主要实现了在<em>没有传统DNS服务器</em>的情况下使用<em>局域网内的主机实现本地发现和域名访问</em>，端口号5353，遵从dns协议（基于UDP协议，即运用了UDP广播）。</p><h2 id="2、库和示例-1"><a href="#2、库和示例-1" class="headerlink" title="2、库和示例"></a>2、库和示例</h2><p><a href="https://imgtu.com/i/f88DBR"><img src="https://z3.ax1x.com/2021/08/09/f88DBR.png" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/08/09/f88DBR.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="f88DBR.png"></a></p><ol><li>演示ESP8266 mDNS responder功能</li></ol><p>电脑端输入<code>http://esp8266.local/</code>以域名方式访问webserver</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Demo：</span></span><br><span class="line"><span class="comment"> *    演示ESP8266 mDNS responder功能</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WiFi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266mDNS.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WebServer.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//以下三个定义为调试定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugBegin(baud_rate)    Serial.begin(baud_rate)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrintln(message)    Serial.println(message)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrint(message)    Serial.print(message)</span></span><br><span class="line"> </span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* AP_SSID     = <span class="string">&quot;TP-LINK_5344&quot;</span>; <span class="comment">// XXXXXX -- 使用时请修改为当前你的 wifi ssid</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* AP_PSK = <span class="string">&quot;6206908you11011010&quot;</span>;  <span class="comment">// XXXXXX -- 使用时请修改为当前你的 wifi 密码</span></span><br><span class="line"><span class="type">const</span> <span class="type">unsigned</span> <span class="type">long</span> BAUD_RATE = <span class="number">115200</span>;<span class="comment">// serial connection speed</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//声明一下函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">initBasic</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">initWifi</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">initWebServer</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">initmDNS</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"> </span><br><span class="line">ESP8266WebServer <span class="title function_">server</span><span class="params">(<span class="number">80</span>)</span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 处理根目录uri请求</span></span><br><span class="line"><span class="comment"> * uri:http://server_ip/</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">handleRoot</span><span class="params">()</span> &#123;</span><br><span class="line">  DebugPrintln(<span class="string">&quot;handleRoot&quot;</span>);</span><br><span class="line">  server.send(<span class="number">200</span>, <span class="string">&quot;text/html&quot;</span>, <span class="string">&quot;Hello From ESP8266 mDNS demo&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 处理无效uri</span></span><br><span class="line"><span class="comment"> * uri:http://server_ip/xxxx</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">handleNotFound</span><span class="params">()</span> &#123;</span><br><span class="line">  DebugPrintln(<span class="string">&quot;handleNotFound&quot;</span>);</span><br><span class="line">  <span class="comment">//打印无效uri的信息 包括请求方式 请求参数</span></span><br><span class="line">  String message = <span class="string">&quot;File Not Found\n\n&quot;</span>;</span><br><span class="line">  message += <span class="string">&quot;URI: &quot;</span>;</span><br><span class="line">  message += server.uri();</span><br><span class="line">  message += <span class="string">&quot;\nMethod: &quot;</span>;</span><br><span class="line">  message += (server.method() == HTTP_GET) ? <span class="string">&quot;GET&quot;</span> : <span class="string">&quot;POST&quot;</span>;</span><br><span class="line">  message += <span class="string">&quot;\nArguments: &quot;</span>;</span><br><span class="line">  message += server.args();</span><br><span class="line">  message += <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">uint8_t</span> i = <span class="number">0</span>; i &lt; server.args(); i++) &#123;</span><br><span class="line">    message += <span class="string">&quot; &quot;</span> + server.argName(i) + <span class="string">&quot;: &quot;</span> + server.arg(i) + <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  server.send(<span class="number">404</span>, <span class="string">&quot;text/plain&quot;</span>, message);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">  initBasic();</span><br><span class="line">  initWifi();</span><br><span class="line">  initWebServer();</span><br><span class="line">  initmDNS();</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">  MDNS.update();    <span class="comment">//少这行</span></span><br><span class="line">  server.handleClient();</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 初始化基础功能：波特率</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">initBasic</span><span class="params">()</span>&#123;</span><br><span class="line">  DebugBegin(BAUD_RATE);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 初始化wifi模块：工作模式 连接网络</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">initWifi</span><span class="params">()</span>&#123;</span><br><span class="line">  WiFi.mode(WIFI_STA);</span><br><span class="line">  WiFi.begin(AP_SSID, AP_PSK);</span><br><span class="line">  DebugPrintln(<span class="string">&quot;&quot;</span>);</span><br><span class="line"> </span><br><span class="line">  <span class="comment">// Wait for connection</span></span><br><span class="line">  <span class="keyword">while</span> (WiFi.status() != WL_CONNECTED) &#123;</span><br><span class="line">    delay(<span class="number">500</span>);</span><br><span class="line">    DebugPrint(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  DebugPrintln(<span class="string">&quot;&quot;</span>);</span><br><span class="line">  DebugPrint(<span class="string">&quot;Connected to &quot;</span>);</span><br><span class="line">  DebugPrintln(AP_SSID);</span><br><span class="line">  DebugPrint(<span class="string">&quot;IP address: &quot;</span>);</span><br><span class="line">  DebugPrintln(WiFi.localIP());</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 初始化webserver</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">initWebServer</span><span class="params">()</span>&#123;</span><br><span class="line">  <span class="comment">//以下配置uri对应的handler</span></span><br><span class="line">  server.on(<span class="string">&quot;/&quot;</span>, handleRoot);</span><br><span class="line">  server.on(<span class="string">&quot;/inline&quot;</span>, []() &#123;</span><br><span class="line">    DebugPrintln(<span class="string">&quot;handleInline&quot;</span>);</span><br><span class="line">    server.send(<span class="number">200</span>, <span class="string">&quot;text/plain&quot;</span>, <span class="string">&quot;this works as well&quot;</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">  server.onNotFound(handleNotFound);</span><br><span class="line">  <span class="comment">//启动webserver</span></span><br><span class="line">  server.begin();</span><br><span class="line">  DebugPrintln(<span class="string">&quot;HTTP server started&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 初始化mDNS</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">initmDNS</span><span class="params">()</span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (!MDNS.begin(<span class="string">&quot;esp8266&quot;</span>)) &#123;</span><br><span class="line">    DebugPrintln(<span class="string">&quot;Error setting up MDNS responder!&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">      delay(<span class="number">1000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  DebugPrintln(<span class="string">&quot;mDNS responder started,please input http://esp8266.local/ in your browser after install Bonjour&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2. </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  演示ESP8266 mDNS 发现服务功能</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  注意:</span></span><br><span class="line"><span class="comment">  - 输入你的 WiFi SSID 和 password.</span></span><br><span class="line"><span class="comment">  - 烧写到两块 ESP8266  板子 </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WiFi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266mDNS.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* ssid     = <span class="string">&quot;...&quot;</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* password = <span class="string">&quot;...&quot;</span>;</span><br><span class="line"><span class="type">char</span> hostString[<span class="number">16</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">  Serial.begin(<span class="number">115200</span>);</span><br><span class="line">  delay(<span class="number">100</span>);</span><br><span class="line">  Serial.println(<span class="string">&quot;\r\nsetup()&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">sprintf</span>(hostString, <span class="string">&quot;ESP_%06X&quot;</span>, ESP.getChipId());</span><br><span class="line">  Serial.print(<span class="string">&quot;Hostname: &quot;</span>);</span><br><span class="line">  Serial.println(hostString);</span><br><span class="line">  WiFi.hostname(hostString);</span><br><span class="line"></span><br><span class="line">  WiFi.mode(WIFI_STA);</span><br><span class="line">  WiFi.begin(ssid, password);</span><br><span class="line">  <span class="keyword">while</span> (WiFi.status() != WL_CONNECTED) &#123;</span><br><span class="line">    delay(<span class="number">250</span>);</span><br><span class="line">    Serial.print(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  Serial.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">  Serial.print(<span class="string">&quot;Connected to &quot;</span>);</span><br><span class="line">  Serial.println(ssid);</span><br><span class="line">  Serial.print(<span class="string">&quot;IP address: &quot;</span>);</span><br><span class="line">  Serial.println(WiFi.localIP());</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!MDNS.begin(hostString)) &#123;</span><br><span class="line">    Serial.println(<span class="string">&quot;Error setting up MDNS responder!&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  Serial.println(<span class="string">&quot;mDNS responder started&quot;</span>);</span><br><span class="line">  <span class="comment">//往mDNS里面注册服务</span></span><br><span class="line">  MDNS.addService(<span class="string">&quot;esp&quot;</span>, <span class="string">&quot;tcp&quot;</span>, <span class="number">8080</span>); </span><br><span class="line"></span><br><span class="line">  Serial.println(<span class="string">&quot;Sending mDNS query&quot;</span>);</span><br><span class="line">  <span class="comment">//查找服务</span></span><br><span class="line">  <span class="type">int</span> n = MDNS.queryService(<span class="string">&quot;esp&quot;</span>, <span class="string">&quot;tcp&quot;</span>); <span class="comment">// Send out query for esp tcp services</span></span><br><span class="line">  Serial.println(<span class="string">&quot;mDNS query done&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> (n == <span class="number">0</span>) &#123;</span><br><span class="line">    Serial.println(<span class="string">&quot;no services found&quot;</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    Serial.print(n);</span><br><span class="line">    Serial.println(<span class="string">&quot; service(s) found&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i) &#123;</span><br><span class="line">      <span class="comment">// 打印查找到的服务具体信息</span></span><br><span class="line">      Serial.print(i + <span class="number">1</span>);</span><br><span class="line">      Serial.print(<span class="string">&quot;: &quot;</span>);</span><br><span class="line">      Serial.print(MDNS.hostname(i));</span><br><span class="line">      Serial.print(<span class="string">&quot; (&quot;</span>);</span><br><span class="line">      Serial.print(MDNS.IP(i));</span><br><span class="line">      Serial.print(<span class="string">&quot;:&quot;</span>);</span><br><span class="line">      Serial.print(MDNS.port(i));</span><br><span class="line">      Serial.println(<span class="string">&quot;)&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  Serial.println();</span><br><span class="line">  Serial.println(<span class="string">&quot;loop() next&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="comment">// put your main code here, to run repeatedly:</span></span><br></pre></td></tr></table></figure><h1 id="17、SPIFFS–ESP8266-SPIFFS文件系统"><a href="#17、SPIFFS–ESP8266-SPIFFS文件系统" class="headerlink" title="17、SPIFFS–ESP8266 SPIFFS文件系统"></a>17、SPIFFS–ESP8266 SPIFFS文件系统</h1><h2 id="1、概述："><a href="#1、概述：" class="headerlink" title="1、概述："></a>1、概述：</h2><p>​Arduino环境下的esp8266的flash存储分配：</p><ol><li>代码区：程序存储区（包含当前代码区current Sketch、更新代码区OTA update）</li><li>文件系统：SPIFFS闪存文件系统（SPI Flash File System）可通过IDE配置，一般NodeMcu配置成3M&#96;&#96;&#96;#include&lt;FS.h&gt;&#96;&#96;</li></ol><p><strong>不支持目录</strong> <strong>文件名32字符限制</strong>  <strong>建议保持短文件名</strong></p><ol><li>EEPROM</li><li>WIFI Config：设置WiFi模块配置时存储的数据</li></ol><h2 id="2、库和使用"><a href="#2、库和使用" class="headerlink" title="2、库和使用"></a>2、库和使用</h2><p><a href="https://imgtu.com/i/fGpEUP"><img src="https://z3.ax1x.com/2021/08/09/fGpEUP.png" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/08/09/fGpEUP.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="fGpEUP.png"></a></p><ol><li>文件操作</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 功能描述：spiffs文件操作常见方法使用，包括文件查找、创建、打开、关闭、删除</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;FS.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//以下三个定义为调试定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugBegin(baud_rate)    Serial.begin(baud_rate)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrintln(message)    Serial.println(message)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrint(message)    Serial.print(message)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> myFileName  <span class="string">&quot;mydemo.txt&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span>&#123;</span><br><span class="line">  DebugBegin(<span class="number">9600</span>);</span><br><span class="line">  DebugPrintln(<span class="string">&quot;Check Start SPIFFS...&quot;</span>);</span><br><span class="line">  <span class="comment">//启动SPIFFS，如果下载配置没有配置SPIFFS，返回false</span></span><br><span class="line">  <span class="keyword">if</span>(!SPIFFS.begin())&#123;</span><br><span class="line">     DebugPrintln(<span class="string">&quot;Start SPIFFS Failed!please check Arduino Download Config.&quot;</span>);</span><br><span class="line">     <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  DebugPrintln(<span class="string">&quot;Start SPIFFS Done.&quot;</span>);</span><br><span class="line">  <span class="comment">//判断文件是否存在</span></span><br><span class="line">  <span class="keyword">if</span>(SPIFFS.exists(myFileName))&#123;</span><br><span class="line">    DebugPrintln(<span class="string">&quot;mydemo.txt exists.&quot;</span>);</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    DebugPrintln(<span class="string">&quot;mydemo.txt not exists.&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  File myFile;</span><br><span class="line">  <span class="comment">//打开文件 不存在就创建一个 可读可写</span></span><br><span class="line">  myFile = SPIFFS.open(myFileName,<span class="string">&quot;w+&quot;</span>);</span><br><span class="line">  <span class="comment">//关闭文件</span></span><br><span class="line">  myFile.close();</span><br><span class="line">  <span class="comment">//再次判断文件是否存在</span></span><br><span class="line">  <span class="keyword">if</span>(SPIFFS.exists(myFileName))&#123;</span><br><span class="line">    DebugPrintln(<span class="string">&quot;mydemo.txt exists.&quot;</span>);</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    DebugPrintln(<span class="string">&quot;mydemo.txt not exists.&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//删除文件</span></span><br><span class="line">  DebugPrintln(<span class="string">&quot;mydemo.txt removing...&quot;</span>);</span><br><span class="line">  SPIFFS.remove(myFileName);</span><br><span class="line">  <span class="comment">//再次判断文件是否存在</span></span><br><span class="line">  <span class="keyword">if</span>(SPIFFS.exists(myFileName))&#123;</span><br><span class="line">    DebugPrintln(<span class="string">&quot;mydemo.txt exists.&quot;</span>);</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    DebugPrintln(<span class="string">&quot;mydemo.txt not exists.&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>查看spiffs文件系统列表</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 功能描述：查看spiffs文件系统列表</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;FS.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//以下三个定义为调试定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugBegin(baud_rate)    Serial.begin(baud_rate)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrintln(message)    Serial.println(message)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrint(message)    Serial.print(message)</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span>&#123;</span><br><span class="line">  DebugBegin(<span class="number">9600</span>);</span><br><span class="line">  DebugPrintln(<span class="string">&quot;Check Start SPIFFS...&quot;</span>);</span><br><span class="line">  <span class="comment">//启动SPIFFS，如果下载配置没有配置SPIFFS，返回false</span></span><br><span class="line">  <span class="keyword">if</span>(!SPIFFS.begin())&#123;</span><br><span class="line">     DebugPrintln(<span class="string">&quot;Start SPIFFS Failed!please check Arduino Download Config.&quot;</span>);</span><br><span class="line">   <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  DebugPrintln(<span class="string">&quot;Start SPIFFS Done.&quot;</span>);</span><br><span class="line">  </span><br><span class="line">  File myFile;</span><br><span class="line">  <span class="comment">//打开文件 不存在就创建一个 可读可写</span></span><br><span class="line">  myFile = SPIFFS.open(<span class="string">&quot;/myDemo.txt&quot;</span>,<span class="string">&quot;w+&quot;</span>);</span><br><span class="line">  <span class="comment">//关闭文件</span></span><br><span class="line">  myFile.close();</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//打开文件 不存在就创建一个 可读可写</span></span><br><span class="line">  myFile = SPIFFS.open(<span class="string">&quot;/myDemo.jpg&quot;</span>,<span class="string">&quot;w+&quot;</span>);</span><br><span class="line">  <span class="comment">//关闭文件</span></span><br><span class="line">  myFile.close();</span><br><span class="line">  </span><br><span class="line">    <span class="comment">//打开文件 不存在就创建一个 可读可写</span></span><br><span class="line">  myFile = SPIFFS.open(<span class="string">&quot;/myDemo.html&quot;</span>,<span class="string">&quot;w+&quot;</span>);</span><br><span class="line">  <span class="comment">//关闭文件</span></span><br><span class="line">  myFile.close();</span><br><span class="line">  </span><br><span class="line">  Dir dir = SPIFFS.openDir(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">  <span class="keyword">while</span>(dir.next())&#123;</span><br><span class="line">    String fileName = dir.fileName();</span><br><span class="line">  <span class="type">size_t</span> fileSize = dir.fileSize();</span><br><span class="line">  Serial.<span class="built_in">printf</span>(<span class="string">&quot;FS File:%s,size:%d\n&quot;</span>,fileName.c_str(),fileSize);</span><br><span class="line">  &#125;</span><br><span class="line">  DebugPrintln(<span class="string">&quot;Setup Done!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>往文件myDemo.txt中写入一句话并读取出来显示</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 功能描述：演示文件读写功能</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;FS.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//以下三个定义为调试定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugBegin(baud_rate)    Serial.begin(baud_rate)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrintln(message)    Serial.println(message)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrint(message)    Serial.print(message)</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span>&#123;</span><br><span class="line">  DebugBegin(<span class="number">9600</span>);</span><br><span class="line">  DebugPrintln(<span class="string">&quot;Check Start SPIFFS...&quot;</span>);</span><br><span class="line">  <span class="comment">//启动SPIFFS，如果下载配置没有配置SPIFFS，返回false</span></span><br><span class="line">  <span class="keyword">if</span>(!SPIFFS.begin())&#123;</span><br><span class="line">     DebugPrintln(<span class="string">&quot;Start SPIFFS Failed!please check Arduino Download Config.&quot;</span>);</span><br><span class="line">   <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  DebugPrintln(<span class="string">&quot;Start SPIFFS Done.&quot;</span>);</span><br><span class="line">  </span><br><span class="line">  File myFile;</span><br><span class="line">  <span class="comment">//打开文件 不存在就创建一个 可读可写</span></span><br><span class="line">  myFile = SPIFFS.open(<span class="string">&quot;myDemo.txt&quot;</span>,<span class="string">&quot;w+&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span>(myFile)&#123;</span><br><span class="line">    DebugPrintln(<span class="string">&quot;Writing something to myDemo.txt...&quot;</span>);</span><br><span class="line">  myFile.println(<span class="string">&quot;单片机菜鸟博哥666&quot;</span>);</span><br><span class="line">  myFile.close();</span><br><span class="line">  DebugPrintln(<span class="string">&quot;Writing Done.&quot;</span>);</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    DebugPrintln(<span class="string">&quot;Open File Failed.&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//打开文件 可读</span></span><br><span class="line">  myFile = SPIFFS.open(<span class="string">&quot;myDemo.txt&quot;</span>,<span class="string">&quot;r&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span>(myFile)&#123;</span><br><span class="line">    DebugPrintln(<span class="string">&quot;Reading myDemo.txt...&quot;</span>);</span><br><span class="line">  <span class="keyword">while</span>(myFile.available())&#123;</span><br><span class="line">    <span class="comment">//读取文件输出</span></span><br><span class="line">    Serial.write(myFile.read());</span><br><span class="line">  &#125;</span><br><span class="line">  myFile.close();</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    DebugPrintln(<span class="string">&quot;Open File Failed.&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  DebugPrintln(<span class="string">&quot;Setup Done!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>烧写文件，将要存入SOIFFS区域的文件，提前放在代码目录的”data”目录中，使用<a href="https://github.com/esp8266/arduino-esp8266fs-plugin/releases/download/0.5.0/ESP8266FS-0.5.0.zip">ESP8266FS</a>工具烧写（集成在ArduinoIDE中，但要安装这个工具）（提示没有找到这个工具的话，一般都是版本问题，换个版本就好了）</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 功能描述：演示上传文件并读取文件内容</span></span><br><span class="line"><span class="comment"> * 前提：需要先往SPIFFS里面上传config.txt文件 </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;FS.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//以下三个定义为调试定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugBegin(baud_rate)    Serial.begin(baud_rate)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrintln(message)    Serial.println(message)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrint(message)    Serial.print(message)</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span>&#123;</span><br><span class="line">  DebugBegin(<span class="number">9600</span>);</span><br><span class="line">  DebugPrintln(<span class="string">&quot;Check Start SPIFFS...&quot;</span>);</span><br><span class="line">  <span class="comment">//启动SPIFFS，如果下载配置没有配置SPIFFS，返回false</span></span><br><span class="line">  <span class="keyword">if</span>(!SPIFFS.begin())&#123;</span><br><span class="line">     DebugPrintln(<span class="string">&quot;Start SPIFFS Failed!please check Arduino Download Config.&quot;</span>);</span><br><span class="line">   <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  DebugPrintln(<span class="string">&quot;Start SPIFFS Done.&quot;</span>);</span><br><span class="line">  </span><br><span class="line">  File myFile;</span><br><span class="line">  <span class="comment">//打开文件 不存在就创建一个 可读可写</span></span><br><span class="line">  myFile = SPIFFS.open(<span class="string">&quot;/config.txt&quot;</span>,<span class="string">&quot;r&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span>(myFile)&#123;</span><br><span class="line">    <span class="comment">//打印文件大小</span></span><br><span class="line">    <span class="type">int</span> size = myFile.size();</span><br><span class="line">  Serial.<span class="built_in">printf</span>(<span class="string">&quot;Size=%d\r\n&quot;</span>, size);</span><br><span class="line">  <span class="comment">//读取文件内容</span></span><br><span class="line">  DebugPrintln(myFile.readString());</span><br><span class="line">  myFile.close();</span><br><span class="line">  DebugPrintln(<span class="string">&quot;Reading Done.&quot;</span>);</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    DebugPrintln(<span class="string">&quot;Open File Failed.&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="18、web配网"><a href="#18、web配网" class="headerlink" title="18、web配网"></a>18、web配网</h1><p>自定义AP配网</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 功能：AP配网（web配网）</span></span><br><span class="line"><span class="comment"> * 作者：单片机菜鸟哥</span></span><br><span class="line"><span class="comment"> * 时间：2020-02-15</span></span><br><span class="line"><span class="comment"> * 描述：</span></span><br><span class="line"><span class="comment"> *    1.设置固定IP 192.168.4.1</span></span><br><span class="line"><span class="comment"> *    2.设置webserver监听web请求</span></span><br><span class="line"><span class="comment"> *    3.处理web请求，获取ssid和pwd</span></span><br><span class="line"><span class="comment"> *    4.连接网络</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WiFi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WebServer.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DEBUG</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> DEBUG</span></span><br><span class="line">  <span class="comment">//以下三个定义为调试定义</span></span><br><span class="line">  <span class="meta">#<span class="keyword">define</span> DebugBegin(baud_rate)    Serial.begin(baud_rate)</span></span><br><span class="line">  <span class="meta">#<span class="keyword">define</span> DebugPrintln(message)    Serial.println(message)</span></span><br><span class="line">  <span class="meta">#<span class="keyword">define</span> DebugPrint(message)    Serial.print(message)</span></span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line">  <span class="comment">//以下三个定义为调试定义</span></span><br><span class="line">  <span class="meta">#<span class="keyword">define</span> DebugBegin(baud_rate)</span></span><br><span class="line">  <span class="meta">#<span class="keyword">define</span> DebugPrintln(message)</span></span><br><span class="line">  <span class="meta">#<span class="keyword">define</span> DebugPrint(message)</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span>  </span></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* ap_ssid = <span class="string">&quot;esp_webconfig&quot;</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* ap_password = <span class="string">&quot;&quot;</span>;<span class="comment">//开放式网络</span></span><br><span class="line"></span><br><span class="line"><span class="type">char</span> sta_ssid[<span class="number">32</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="type">char</span> sta_password[<span class="number">64</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* webpage_html = <span class="string">&quot;\</span></span><br><span class="line"><span class="string">&lt;!DOCTYPE html&gt;\r\n\</span></span><br><span class="line"><span class="string">&lt;html lang=&#x27;en&#x27;&gt;\r\n\</span></span><br><span class="line"><span class="string">&lt;head&gt;\r\n\</span></span><br><span class="line"><span class="string">  &lt;meta charset=&#x27;UTF-8&#x27;&gt;\r\n\</span></span><br><span class="line"><span class="string">  &lt;title&gt;Document&lt;/title&gt;\r\n\</span></span><br><span class="line"><span class="string">&lt;/head&gt;\r\n\</span></span><br><span class="line"><span class="string">&lt;body&gt;\r\n\</span></span><br><span class="line"><span class="string">  &lt;form name=&#x27;input&#x27; action=&#x27;/&#x27; method=&#x27;POST&#x27;&gt;\r\n\</span></span><br><span class="line"><span class="string">        wifi名称: &lt;br&gt;\r\n\</span></span><br><span class="line"><span class="string">        &lt;input type=&#x27;text&#x27; name=&#x27;ssid&#x27;&gt;&lt;br&gt;\r\n\</span></span><br><span class="line"><span class="string">        wifi密码:&lt;br&gt;\r\n\</span></span><br><span class="line"><span class="string">        &lt;input type=&#x27;text&#x27; name=&#x27;password&#x27;&gt;&lt;br&gt;\r\n\</span></span><br><span class="line"><span class="string">        &lt;input type=&#x27;submit&#x27; value=&#x27;保存&#x27;&gt;\r\n\</span></span><br><span class="line"><span class="string">    &lt;/form&gt;\r\n\</span></span><br><span class="line"><span class="string">&lt;/body&gt;\r\n\</span></span><br><span class="line"><span class="string">&lt;/html&gt;\r\n\</span></span><br><span class="line"><span class="string">&quot;</span>;</span><br><span class="line"></span><br><span class="line">IPAddress <span class="title function_">local_IP</span><span class="params">(<span class="number">192</span>,<span class="number">168</span>,<span class="number">4</span>,<span class="number">1</span>)</span>;</span><br><span class="line">IPAddress <span class="title function_">gateway</span><span class="params">(<span class="number">192</span>,<span class="number">168</span>,<span class="number">4</span>,<span class="number">1</span>)</span>;</span><br><span class="line">IPAddress <span class="title function_">subnet</span><span class="params">(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">initApConfig</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">initWebServer</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">connectToWifi</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">handleRootPost</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">handleRoot</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">handleNotFound</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">ESP8266WebServer <span class="title function_">server</span><span class="params">(<span class="number">80</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">  DebugBegin(<span class="number">115200</span>);</span><br><span class="line">  DebugPrintln(<span class="string">&quot;&quot;</span>);</span><br><span class="line">  DebugPrint(<span class="string">&quot;connect ap: &quot;</span>);</span><br><span class="line">  DebugPrintln(ap_ssid);</span><br><span class="line"></span><br><span class="line">  initApConfig();</span><br><span class="line"></span><br><span class="line">  DebugPrint(<span class="string">&quot;IP address: &quot;</span>);</span><br><span class="line">  DebugPrintln(WiFi.softAPIP());</span><br><span class="line"></span><br><span class="line">  initWebServer();</span><br><span class="line"></span><br><span class="line">  DebugPrintln(<span class="string">&quot;HTTP server started&quot;</span>);</span><br><span class="line"></span><br><span class="line">  Serial.<span class="built_in">printf</span>(<span class="string">&quot;Ready! Open http://%s in your browser\n&quot;</span>,</span><br><span class="line">  WiFi.softAPIP().toString().c_str());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">  server.handleClient();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 初始化AP配置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">initApConfig</span><span class="params">()</span>&#123;</span><br><span class="line">  WiFi.mode(WIFI_AP);</span><br><span class="line">  WiFi.softAPConfig(local_IP, gateway, subnet);</span><br><span class="line">  WiFi.softAP(ap_ssid, ap_password);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 初始化webserver配置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">initWebServer</span><span class="params">()</span>&#123;</span><br><span class="line">  server.on(<span class="string">&quot;/&quot;</span>, HTTP_GET, handleRoot);</span><br><span class="line">  server.on(<span class="string">&quot;/&quot;</span>, HTTP_POST, handleRootPost);</span><br><span class="line">  server.onNotFound(handleNotFound);</span><br><span class="line"></span><br><span class="line">  server.begin();   </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 连接到WiFi</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">connectToWifi</span><span class="params">()</span>&#123;</span><br><span class="line">  DebugPrintln(<span class="string">&quot;connectToWifi&quot;</span>);</span><br><span class="line">  WiFi.disconnect();</span><br><span class="line">  WiFi.mode(WIFI_STA);</span><br><span class="line">  WiFi.begin(sta_ssid, sta_password);</span><br><span class="line"></span><br><span class="line">  <span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> (WiFi.status() != WL_CONNECTED) &#123;</span><br><span class="line">          delay(<span class="number">500</span>);</span><br><span class="line">          cnt++;</span><br><span class="line">          Serial.print(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">          <span class="keyword">if</span>(cnt&gt;=<span class="number">40</span>)&#123;</span><br><span class="line">            cnt = <span class="number">0</span>;</span><br><span class="line">            <span class="comment">//重启系统</span></span><br><span class="line">            DebugPrintln(<span class="string">&quot;\r\nRestart now!&quot;</span>);</span><br><span class="line">            ESP.restart();</span><br><span class="line">          &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  DebugPrintln(<span class="string">&quot;connectToWifi Success!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 处理web post请求</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">handleRootPost</span><span class="params">()</span> &#123;</span><br><span class="line">  DebugPrintln(<span class="string">&quot;handleRootPost&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> (server.hasArg(<span class="string">&quot;ssid&quot;</span>)) &#123;</span><br><span class="line">    DebugPrint(<span class="string">&quot;got ssid:&quot;</span>);</span><br><span class="line">    <span class="built_in">strcpy</span>(sta_ssid, server.arg(<span class="string">&quot;ssid&quot;</span>).c_str());</span><br><span class="line">    DebugPrintln(sta_ssid);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    DebugPrintln(<span class="string">&quot;error, not found ssid&quot;</span>);</span><br><span class="line">    server.send(<span class="number">200</span>, <span class="string">&quot;text/html&quot;</span>, <span class="string">&quot;&lt;meta charset=&#x27;UTF-8&#x27;&gt;error, not found ssid&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (server.hasArg(<span class="string">&quot;password&quot;</span>)) &#123;</span><br><span class="line">    DebugPrint(<span class="string">&quot;got password:&quot;</span>);</span><br><span class="line">    <span class="built_in">strcpy</span>(sta_password, server.arg(<span class="string">&quot;password&quot;</span>).c_str());</span><br><span class="line">    DebugPrintln(sta_password);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    DebugPrintln(<span class="string">&quot;error, not found password&quot;</span>);</span><br><span class="line">    server.send(<span class="number">200</span>, <span class="string">&quot;text/html&quot;</span>, <span class="string">&quot;&lt;meta charset=&#x27;UTF-8&#x27;&gt;error, not found password&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  server.send(<span class="number">200</span>, <span class="string">&quot;text/html&quot;</span>, <span class="string">&quot;&lt;meta charset=&#x27;UTF-8&#x27;&gt;保存成功&quot;</span>);</span><br><span class="line">  delay(<span class="number">2000</span>);</span><br><span class="line">  <span class="comment">//连接wifi</span></span><br><span class="line">  connectToWifi();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 处理web get请求</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">handleRoot</span><span class="params">()</span> &#123;</span><br><span class="line">  DebugPrintln(<span class="string">&quot;handleRoot&quot;</span>);</span><br><span class="line">  server.send(<span class="number">200</span>, <span class="string">&quot;text/html&quot;</span>, webpage_html);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">handleNotFound</span><span class="params">()</span> &#123;</span><br><span class="line">  String message = <span class="string">&quot;File Not Found\n\n&quot;</span>;</span><br><span class="line">  server.send(<span class="number">404</span>, <span class="string">&quot;text/plain&quot;</span>, message);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="19、NTP–时间服务"><a href="#19、NTP–时间服务" class="headerlink" title="19、NTP–时间服务"></a>19、NTP–时间服务</h1><p>​NTP（Network Time Protocol）网络时间协议，基于UDP，用于网络时间同步的协议，使网络中的计算机时钟同步到UTC,再配合各个时区的偏移调整就能实现精准同步对时功能。</p><p>NTP报文协议</p><p>实现:</p><ol><li>拼接协议</li><li>使用现成NTP第三方库（NTPClient）</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;NTPClient.h&gt;</span></span></span><br><span class="line"><span class="comment">// change next line to use with another board/shield</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WiFi.h&gt;</span></span></span><br><span class="line"><span class="comment">//#include &lt;WiFi.h&gt; // for WiFi shield</span></span><br><span class="line"><span class="comment">//#include &lt;WiFi101.h&gt; // for WiFi 101 shield or MKR1000</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;WiFiUdp.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">char</span> *ssid     = <span class="string">&quot;XU-ChinaNet&quot;</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span> *password = <span class="string">&quot;15358228063&quot;</span>;</span><br><span class="line"></span><br><span class="line">WiFiUDP ntpUDP;</span><br><span class="line"></span><br><span class="line"><span class="comment">// You can specify the time server pool and the offset (in seconds, can be</span></span><br><span class="line"><span class="comment">// changed later with setTimeOffset() ). Additionaly you can specify the</span></span><br><span class="line"><span class="comment">// update interval (in milliseconds, can be changed using setUpdateInterval() ).</span></span><br><span class="line">NTPClient <span class="title function_">timeClient</span><span class="params">(ntpUDP, <span class="string">&quot;ntp1.aliyun.com&quot;</span>, <span class="number">60</span>*<span class="number">60</span>*<span class="number">8</span>, <span class="number">30</span>*<span class="number">60</span>*<span class="number">1000</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span>&#123;</span><br><span class="line">  Serial.begin(<span class="number">115200</span>);</span><br><span class="line"></span><br><span class="line">  WiFi.begin(ssid, password);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> ( WiFi.status() != WL_CONNECTED ) &#123;</span><br><span class="line">    delay ( <span class="number">500</span> );</span><br><span class="line">    Serial.print ( <span class="string">&quot;.&quot;</span> );</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  timeClient.begin();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">  timeClient.update();</span><br><span class="line"></span><br><span class="line">  Serial.println(timeClient.getFormattedTime());</span><br><span class="line">  <span class="type">int</span> hours = timeClient.getHours();</span><br><span class="line">  <span class="type">int</span> minu =  timeClient.getMinutes();</span><br><span class="line">  <span class="type">int</span> sece =  timeClient.getSeconds();</span><br><span class="line">  Serial.<span class="built_in">printf</span>(<span class="string">&quot;hour:%d minu:%d sece:%d\n&quot;</span>, hours,minu,sece);</span><br><span class="line">  delay(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="20、DNSServer–真正的域名服务"><a href="#20、DNSServer–真正的域名服务" class="headerlink" title="20、DNSServer–真正的域名服务"></a>20、DNSServer–真正的域名服务</h1><p>​建立DNS服务，使用时模块必须处于AP模式下；真正意义上的精简版DNS服务器；DNSServer运行于UDP服务；这里DNS服务器唯一的作用是把域名转成对应映射地址（只支持一个）</p><p><a href="https://imgtu.com/i/fGI9sS"><img src="https://z3.ax1x.com/2021/08/10/fGI9sS.png" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/08/10/fGI9sS.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="fGI9sS.png"></a></p><p>1. </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 功能描述：在手机浏览器访问 &quot;www.danpianji.com&quot;会显示“Hello World” </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WiFi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;DNSServer.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WebServer.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//调试定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugBegin(baud_rate)    Serial.begin(baud_rate)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrintln(message)    Serial.println(message)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrint(message)    Serial.print(message)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrintF(...) Serial.printf( __VA_ARGS__ )</span></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> byte DNS_PORT = <span class="number">53</span>;</span><br><span class="line">IPAddress <span class="title function_">apIP</span><span class="params">(<span class="number">192</span>, <span class="number">168</span>, <span class="number">1</span>, <span class="number">1</span>)</span>;</span><br><span class="line">DNSServer dnsServer;</span><br><span class="line">ESP8266WebServer <span class="title function_">webServer</span><span class="params">(<span class="number">80</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">  DebugBegin(<span class="number">115200</span>);</span><br><span class="line">  WiFi.mode(WIFI_AP);</span><br><span class="line">  WiFi.softAPConfig(apIP, apIP, IPAddress(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0</span>));</span><br><span class="line">  WiFi.softAP(<span class="string">&quot;DNSServer example&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// modify TTL associated  with the domain name (in seconds)</span></span><br><span class="line">  <span class="comment">// default is 60 seconds</span></span><br><span class="line">  dnsServer.setTTL(<span class="number">300</span>);</span><br><span class="line">  <span class="comment">// set which return code will be used for all other domains (e.g. sending</span></span><br><span class="line">  <span class="comment">// ServerFailure instead of NonExistentDomain will reduce number of queries</span></span><br><span class="line">  <span class="comment">// sent by clients)</span></span><br><span class="line">  <span class="comment">// default is DNSReplyCode::NonExistentDomain</span></span><br><span class="line">  dnsServer.setErrorReplyCode(DNSReplyCode::ServerFailure);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 启动DNS server，映射主机名为 www.danpianji.com</span></span><br><span class="line">  <span class="type">bool</span> status = dnsServer.start(DNS_PORT, <span class="string">&quot;www.danpianji.com&quot;</span>, apIP);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(status)&#123;</span><br><span class="line">      DebugPrintln(<span class="string">&quot;start dnsserver success.&quot;</span>);</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">     DebugPrintln(<span class="string">&quot;start dnsserver failed.&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// simple HTTP server to see that DNS server is working</span></span><br><span class="line">  webServer.onNotFound([]() &#123;</span><br><span class="line">    String message = <span class="string">&quot;Hello World!\n\n&quot;</span>;</span><br><span class="line">    message += <span class="string">&quot;URI: &quot;</span>;</span><br><span class="line">    message += webServer.uri();</span><br><span class="line"></span><br><span class="line">    webServer.send(<span class="number">200</span>, <span class="string">&quot;text/plain&quot;</span>, message);</span><br><span class="line">  &#125;);</span><br><span class="line">  webServer.begin();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">  dnsServer.processNextRequest();</span><br><span class="line">  webServer.handleClient();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="2"><li>Portal认证</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 功能描述：portal认证</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;DNSServer.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WebServer.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WiFi.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//调试定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugBegin(baud_rate)    Serial.begin(baud_rate)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrintln(message)    Serial.println(message)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrint(message)    Serial.print(message)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrintF(...) Serial.printf( __VA_ARGS__ )</span></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> byte DNS_PORT = <span class="number">53</span>;</span><br><span class="line">IPAddress <span class="title function_">apIP</span><span class="params">(<span class="number">192</span>, <span class="number">168</span>, <span class="number">1</span>, <span class="number">1</span>)</span>;</span><br><span class="line">DNSServer dnsServer;</span><br><span class="line">ESP8266WebServer <span class="title function_">webServer</span><span class="params">(<span class="number">80</span>)</span>;</span><br><span class="line"></span><br><span class="line">String responseHTML = <span class="string">&quot;&quot;</span></span><br><span class="line">                      <span class="string">&quot;&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;CaptivePortal&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&quot;</span></span><br><span class="line">                      <span class="string">&quot;&lt;h1&gt;Hello World!&lt;/h1&gt;&lt;p&gt;This is a captive portal example. All requests will &quot;</span></span><br><span class="line">                      <span class="string">&quot;be redirected here.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">  DebugBegin(<span class="number">115200</span>);</span><br><span class="line">  WiFi.mode(WIFI_AP);</span><br><span class="line">  WiFi.softAPConfig(apIP, apIP, IPAddress(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0</span>));</span><br><span class="line">  WiFi.softAP(<span class="string">&quot;DNSServer CaptivePortal example&quot;</span>);</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">  <span class="comment">// 所有请求都映射到一个具体地址</span></span><br><span class="line">  dnsServer.start(DNS_PORT, <span class="string">&quot;*&quot;</span>, apIP);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// replay to all requests with same HTML</span></span><br><span class="line">  webServer.onNotFound([]() &#123;</span><br><span class="line">    DebugPrintln(<span class="string">&quot;webServer handle.&quot;</span>);</span><br><span class="line">    webServer.send(<span class="number">200</span>, <span class="string">&quot;text/html&quot;</span>, responseHTML);</span><br><span class="line">  &#125;);</span><br><span class="line">  webServer.begin();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">  dnsServer.processNextRequest();</span><br><span class="line">  webServer.handleClient();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="21、无线更新–OTA固件更新"><a href="#21、无线更新–OTA固件更新" class="headerlink" title="21、无线更新–OTA固件更新"></a>21、无线更新–OTA固件更新</h1><h2 id="1、ArduinoOTA"><a href="#1、ArduinoOTA" class="headerlink" title="1、ArduinoOTA"></a>1、ArduinoOTA</h2><ul><li>连接WIFI；</li><li>配置ArduinoOTA对象的事件函数；</li><li>启动ArduinoOTA服务ArduinoOTA.begin();</li><li>在loop()函数将处理权交由ArduinoOTA.handle()。</li></ul><p>为了区分正常工作模式以及更新模式，可以设置标志位来区分（标志位可通过其他手段修改，如按键、软件控制）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (flag ==<span class="number">0</span> ) &#123;</span><br><span class="line">    <span class="comment">// 正常工作状态的代码</span></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    ArduinoOTA.handle();</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/fGXaO1"><img src="https://z3.ax1x.com/2021/08/10/fGXaO1.png" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/08/10/fGXaO1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="fGXaO1.png"></a></p><p>python2.7环境</p><p>旧代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 功能描述：OTA之Arduino IDE更新 V1.0版本代码</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WiFi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266mDNS.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;WiFiUdp.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ArduinoOTA.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//调试定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugBegin(baud_rate)    Serial.begin(baud_rate)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrintln(message)    Serial.println(message)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrint(message)    Serial.print(message)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrintF(...) Serial.printf( __VA_ARGS__ )</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> CodeVersion <span class="string">&quot;CodeVersion V1.0&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* ssid = <span class="string">&quot;xxxx&quot;</span>;<span class="comment">//填上wifi账号</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* password = <span class="string">&quot;xxxxx&quot;</span>;<span class="comment">//填上wifi密码</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">  DebugBegin(<span class="number">115200</span>);</span><br><span class="line">  DebugPrintln(<span class="string">&quot;Booting Sketch....&quot;</span>);</span><br><span class="line">  DebugPrintln(CodeVersion);</span><br><span class="line">  WiFi.mode(WIFI_STA);</span><br><span class="line">  WiFi.begin(ssid, password);</span><br><span class="line">  <span class="keyword">while</span> (WiFi.waitForConnectResult() != WL_CONNECTED) &#123;</span><br><span class="line">    DebugPrintln(<span class="string">&quot;Connection Failed! Rebooting...&quot;</span>);</span><br><span class="line">    delay(<span class="number">5000</span>);</span><br><span class="line">  <span class="comment">//重启ESP8266模块</span></span><br><span class="line">    ESP.restart();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Port defaults to 8266</span></span><br><span class="line">  <span class="comment">// ArduinoOTA.setPort(8266);</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// Hostname defaults to esp8266-[ChipID]</span></span><br><span class="line">  <span class="comment">// ArduinoOTA.setHostname(&quot;myesp8266&quot;);</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// No authentication by default</span></span><br><span class="line">  <span class="comment">// ArduinoOTA.setPassword(&quot;admin&quot;);</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// Password can be set with it&#x27;s md5 value as well</span></span><br><span class="line">  <span class="comment">// MD5(admin) = 21232f297a57a5a743894a0e4a801fc3</span></span><br><span class="line">  <span class="comment">// ArduinoOTA.setPasswordHash(&quot;21232f297a57a5a743894a0e4a801fc3&quot;);</span></span><br><span class="line"></span><br><span class="line">  ArduinoOTA.onStart([]() &#123;</span><br><span class="line">    String type;</span><br><span class="line">  <span class="comment">//判断一下OTA内容</span></span><br><span class="line">    <span class="keyword">if</span> (ArduinoOTA.getCommand() == U_FLASH) &#123;</span><br><span class="line">      type = <span class="string">&quot;sketch&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123; <span class="comment">// U_SPIFFS</span></span><br><span class="line">      type = <span class="string">&quot;filesystem&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// <span class="doctag">NOTE:</span> if updating SPIFFS this would be the place to unmount SPIFFS using SPIFFS.end()</span></span><br><span class="line">    DebugPrintln(<span class="string">&quot;Start updating &quot;</span> + type);</span><br><span class="line">  &#125;);</span><br><span class="line">  ArduinoOTA.onEnd([]() &#123;</span><br><span class="line">    DebugPrintln(<span class="string">&quot;\nEnd&quot;</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">  ArduinoOTA.onProgress([](<span class="type">unsigned</span> <span class="type">int</span> progress, <span class="type">unsigned</span> <span class="type">int</span> total) &#123;</span><br><span class="line">    DebugPrintF(<span class="string">&quot;Progress: %u%%\r&quot;</span>, (progress / (total / <span class="number">100</span>)));</span><br><span class="line">  &#125;);</span><br><span class="line">  ArduinoOTA.onError([](<span class="type">ota_error_t</span> error) &#123;</span><br><span class="line">    DebugPrintF(<span class="string">&quot;Error[%u]: &quot;</span>, error);</span><br><span class="line">    <span class="keyword">if</span> (error == OTA_AUTH_ERROR) &#123;</span><br><span class="line">      DebugPrintln(<span class="string">&quot;Auth Failed&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (error == OTA_BEGIN_ERROR) &#123;</span><br><span class="line">      DebugPrintln(<span class="string">&quot;Begin Failed&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (error == OTA_CONNECT_ERROR) &#123;</span><br><span class="line">      DebugPrintln(<span class="string">&quot;Connect Failed&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (error == OTA_RECEIVE_ERROR) &#123;</span><br><span class="line">      DebugPrintln(<span class="string">&quot;Receive Failed&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (error == OTA_END_ERROR) &#123;</span><br><span class="line">      DebugPrintln(<span class="string">&quot;End Failed&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  ArduinoOTA.begin();</span><br><span class="line">  DebugPrintln(<span class="string">&quot;Ready&quot;</span>);</span><br><span class="line">  DebugPrint(<span class="string">&quot;IP address: &quot;</span>);</span><br><span class="line">  DebugPrintln(WiFi.localIP());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">  ArduinoOTA.handle();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>烧写成功后，重启IDE（IDE与8266建立无线连接）端口项出现网络端口</p><p>新代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 功能描述：OTA之Arduino IDE更新 V1.1版本代码</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WiFi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266mDNS.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;WiFiUdp.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ArduinoOTA.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//调试定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugBegin(baud_rate)    Serial.begin(baud_rate)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrintln(message)    Serial.println(message)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrint(message)    Serial.print(message)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrintF(...) Serial.printf( __VA_ARGS__ )</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> CodeVersion <span class="string">&quot;CodeVersion V1.1&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* ssid = <span class="string">&quot;xxxx&quot;</span>;<span class="comment">//填上wifi账号</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* password = <span class="string">&quot;xxxx&quot;</span>;<span class="comment">//填上wifi密码</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">  DebugBegin(<span class="number">115200</span>);</span><br><span class="line">  DebugPrintln(<span class="string">&quot;Booting Sketch....&quot;</span>);</span><br><span class="line">  DebugPrintln(CodeVersion);</span><br><span class="line">  WiFi.mode(WIFI_STA);</span><br><span class="line">  WiFi.begin(ssid, password);</span><br><span class="line">  <span class="keyword">while</span> (WiFi.waitForConnectResult() != WL_CONNECTED) &#123;</span><br><span class="line">    DebugPrintln(<span class="string">&quot;Connection Failed! Rebooting...&quot;</span>);</span><br><span class="line">    delay(<span class="number">5000</span>);</span><br><span class="line">  <span class="comment">//重启ESP8266模块</span></span><br><span class="line">    ESP.restart();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Port defaults to 8266</span></span><br><span class="line">  <span class="comment">// ArduinoOTA.setPort(8266);</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// Hostname defaults to esp8266-[ChipID]</span></span><br><span class="line">  <span class="comment">// ArduinoOTA.setHostname(&quot;myesp8266&quot;);</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// No authentication by default</span></span><br><span class="line">  <span class="comment">// ArduinoOTA.setPassword(&quot;admin&quot;);</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// Password can be set with it&#x27;s md5 value as well</span></span><br><span class="line">  <span class="comment">// MD5(admin) = 21232f297a57a5a743894a0e4a801fc3</span></span><br><span class="line">  <span class="comment">// ArduinoOTA.setPasswordHash(&quot;21232f297a57a5a743894a0e4a801fc3&quot;);</span></span><br><span class="line"></span><br><span class="line">  ArduinoOTA.onStart([]() &#123;</span><br><span class="line">    String type;</span><br><span class="line">  <span class="comment">//判断一下OTA内容</span></span><br><span class="line">    <span class="keyword">if</span> (ArduinoOTA.getCommand() == U_FLASH) &#123;</span><br><span class="line">      type = <span class="string">&quot;sketch&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123; <span class="comment">// U_SPIFFS</span></span><br><span class="line">      type = <span class="string">&quot;filesystem&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// <span class="doctag">NOTE:</span> if updating SPIFFS this would be the place to unmount SPIFFS using SPIFFS.end()</span></span><br><span class="line">    DebugPrintln(<span class="string">&quot;Start updating &quot;</span> + type);</span><br><span class="line">  &#125;);</span><br><span class="line">  ArduinoOTA.onEnd([]() &#123;</span><br><span class="line">    DebugPrintln(<span class="string">&quot;\nEnd&quot;</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">  ArduinoOTA.onProgress([](<span class="type">unsigned</span> <span class="type">int</span> progress, <span class="type">unsigned</span> <span class="type">int</span> total) &#123;</span><br><span class="line">    DebugPrintF(<span class="string">&quot;Progress: %u%%\r&quot;</span>, (progress / (total / <span class="number">100</span>)));</span><br><span class="line">  &#125;);</span><br><span class="line">  ArduinoOTA.onError([](<span class="type">ota_error_t</span> error) &#123;</span><br><span class="line">    DebugPrintF(<span class="string">&quot;Error[%u]: &quot;</span>, error);</span><br><span class="line">    <span class="keyword">if</span> (error == OTA_AUTH_ERROR) &#123;</span><br><span class="line">      DebugPrintln(<span class="string">&quot;Auth Failed&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (error == OTA_BEGIN_ERROR) &#123;</span><br><span class="line">      DebugPrintln(<span class="string">&quot;Begin Failed&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (error == OTA_CONNECT_ERROR) &#123;</span><br><span class="line">      DebugPrintln(<span class="string">&quot;Connect Failed&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (error == OTA_RECEIVE_ERROR) &#123;</span><br><span class="line">      DebugPrintln(<span class="string">&quot;Receive Failed&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (error == OTA_END_ERROR) &#123;</span><br><span class="line">      DebugPrintln(<span class="string">&quot;End Failed&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  ArduinoOTA.begin();</span><br><span class="line">  DebugPrintln(<span class="string">&quot;Ready&quot;</span>);</span><br><span class="line">  DebugPrint(<span class="string">&quot;IP address: &quot;</span>);</span><br><span class="line">  DebugPrintln(WiFi.localIP());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">  ArduinoOTA.handle();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="2、WebUpdateOTA"><a href="#2、WebUpdateOTA" class="headerlink" title="2、WebUpdateOTA"></a>2、WebUpdateOTA</h2><p><a href="https://imgtu.com/i/fJ9d3T"><img src="https://z3.ax1x.com/2021/08/10/fJ9d3T.png" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/08/10/fJ9d3T.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="fJ9d3T.png"></a></p><ol><li>系统自带OTA之WEB更新（通过建立 webserver来上传新固件以达到更新目的）</li></ol><p>V1.1代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 功能描述：OTA之web更新 V1.0版本代码</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WiFi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;WiFiClient.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WebServer.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266mDNS.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266HTTPUpdateServer.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//调试定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugBegin(baud_rate)    Serial.begin(baud_rate)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrintln(message)    Serial.println(message)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrint(message)    Serial.print(message)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrintF(...) Serial.printf( __VA_ARGS__ )</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> CodeVersion <span class="string">&quot;CodeVersion V1.0&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* host = <span class="string">&quot;esp8266-webupdate&quot;</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* ssid = <span class="string">&quot;xxx&quot;</span>;<span class="comment">//填上wifi账号</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* password = <span class="string">&quot;xxx&quot;</span>;<span class="comment">//填上wifi密码</span></span><br><span class="line"></span><br><span class="line">ESP8266WebServer <span class="title function_">httpServer</span><span class="params">(<span class="number">80</span>)</span>;</span><br><span class="line">ESP8266HTTPUpdateServer httpUpdater;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">  DebugBegin(<span class="number">115200</span>);</span><br><span class="line">  DebugPrintln(<span class="string">&quot;Booting Sketch...&quot;</span>);</span><br><span class="line">  DebugPrintln(CodeVersion);</span><br><span class="line">  WiFi.mode(WIFI_AP_STA);</span><br><span class="line">  WiFi.begin(ssid, password);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> (WiFi.waitForConnectResult() != WL_CONNECTED) &#123;</span><br><span class="line">    WiFi.begin(ssid, password);</span><br><span class="line">    DebugPrintln(<span class="string">&quot;WiFi failed, retrying.&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//启动mdns服务</span></span><br><span class="line">  MDNS.begin(host);</span><br><span class="line">  <span class="comment">//配置webserver为更新server</span></span><br><span class="line">  httpUpdater.setup(&amp;httpServer);</span><br><span class="line">  httpServer.begin();</span><br><span class="line"></span><br><span class="line">  MDNS.addService(<span class="string">&quot;http&quot;</span>, <span class="string">&quot;tcp&quot;</span>, <span class="number">80</span>);</span><br><span class="line">  DebugPrintF(<span class="string">&quot;HTTPUpdateServer ready! Open http://%s.local/update in your browser\n&quot;</span>, host);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">  httpServer.handleClient();</span><br><span class="line">  MDNS.update();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同一WIFI下，打开调试器中提示的网站</p><p>编译V1.1代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 功能描述：OTA之web更新 V1.1版本代码</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WiFi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;WiFiClient.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WebServer.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266mDNS.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266HTTPUpdateServer.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//调试定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugBegin(baud_rate)    Serial.begin(baud_rate)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrintln(message)    Serial.println(message)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrint(message)    Serial.print(message)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrintF(...) Serial.printf( __VA_ARGS__ )</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> CodeVersion <span class="string">&quot;CodeVersion V1.1&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* host = <span class="string">&quot;esp8266-webupdate&quot;</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* ssid = <span class="string">&quot;xxx&quot;</span>;<span class="comment">//填上wifi账号</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* password = <span class="string">&quot;xxx&quot;</span>;<span class="comment">//填上wifi密码</span></span><br><span class="line"></span><br><span class="line">ESP8266WebServer <span class="title function_">httpServer</span><span class="params">(<span class="number">80</span>)</span>;</span><br><span class="line">ESP8266HTTPUpdateServer httpUpdater;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">  DebugBegin(<span class="number">115200</span>);</span><br><span class="line">  DebugPrintln(<span class="string">&quot;Booting Sketch...&quot;</span>);</span><br><span class="line">  DebugPrintln(CodeVersion);</span><br><span class="line">  WiFi.mode(WIFI_AP_STA);</span><br><span class="line">  WiFi.begin(ssid, password);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> (WiFi.waitForConnectResult() != WL_CONNECTED) &#123;</span><br><span class="line">    WiFi.begin(ssid, password);</span><br><span class="line">    DebugPrintln(<span class="string">&quot;WiFi failed, retrying.&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//启动mdns服务</span></span><br><span class="line">  MDNS.begin(host);</span><br><span class="line">  <span class="comment">//配置webserver为更新server</span></span><br><span class="line">  httpUpdater.setup(&amp;httpServer);</span><br><span class="line">  httpServer.begin();</span><br><span class="line"></span><br><span class="line">  MDNS.addService(<span class="string">&quot;http&quot;</span>, <span class="string">&quot;tcp&quot;</span>, <span class="number">80</span>);</span><br><span class="line">  DebugPrintF(<span class="string">&quot;HTTPUpdateServer ready! Open http://%s.local/update in your browser\n&quot;</span>, host);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">  httpServer.handleClient();</span><br><span class="line">  MDNS.update();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>选择bin文件，通过WEB网页上传</p><ol start="2"><li>自定义OTA之WEB更新（个性化页面）</li></ol><h2 id="3-SerialUpdateOTA—OTA之服务器更新"><a href="#3-SerialUpdateOTA—OTA之服务器更新" class="headerlink" title="3.SerialUpdateOTA—OTA之服务器更新"></a>3.SerialUpdateOTA—OTA之服务器更新</h2><p><a href="https://imgtu.com/i/ftmccj"><img src="https://z3.ax1x.com/2021/08/10/ftmccj.png" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/08/10/ftmccj.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="ftmccj.png"></a></p><p>放在服务器上，无感知更新</p><h1 id="22、WebSocket-Client–全双工通信"><a href="#22、WebSocket-Client–全双工通信" class="headerlink" title="22、WebSocket Client–全双工通信"></a>22、WebSocket Client–全双工通信</h1><p>问题：HTTP：一个<em><strong>请求-响应</strong></em>应用层协议，客户端没有主动发请求，服务器不能主动给客户端发数据</p><p>方法：</p><ol><li><em><strong>轮询</strong></em>（浪费带宽资源）</li><li>应用层协议解决<em><strong>MQTT</strong></em>协议</li><li><em><strong>WebSocket</strong></em>协议：让客户端与服务器之间建立无限制的全双工通信，任何一方都可主动发消息给对方（HTML5定义的协议，更好的节省服务器资源和带宽，并实时进行通讯）</li></ol><p>两阶段：</p><ol><li><p>通过HTTP请求确认WebSocket握手协议阶段；</p></li><li><p>通过WebSocket交互数据阶段。</p></li></ol><h1 id="23、例程"><a href="#23、例程" class="headerlink" title="23、例程"></a>23、例程</h1><h2 id="1、局域网应用–炫酷RGB"><a href="#1、局域网应用–炫酷RGB" class="headerlink" title="1、局域网应用–炫酷RGB"></a>1、局域网应用–炫酷RGB</h2><p>相关技术点：</p><ul><li>ArduinoJson库</li><li>TCP Server服务</li><li>STA模式</li><li>一键配网</li></ul><p>内容：</p><p>手机、ESP8266均连接在同一个路由器wifi，8266作为服务端，手机作为客户端，手机再通过wifi给8266发送数据，8266接收到数据再把数据发给Arduino（串口通信）,Arduino解析数据达到控制效果</p><p>实现：</p><p><a href="https://github.com/tingyouwu/WifiLamp">APP源码地址</a></p><p>8266端代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 功能：wifi RGB 8266端</span></span><br><span class="line"><span class="comment">*       加入SmartConfig功能</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WiFi.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX_SRV_CLIENTS 3   <span class="comment">//最大同时联接数，即你想要接入的设备数量，8266tcpserver只能接入五个</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LED 2</span></span><br><span class="line">  </span><br><span class="line">WiFiServer <span class="title function_">server</span><span class="params">(<span class="number">8266</span>)</span>;    <span class="comment">//你要的端口号，随意修改，范围0-65535</span></span><br><span class="line">WiFiClient serverClients[MAX_SRV_CLIENTS];</span><br><span class="line"><span class="type">int</span> flag = HIGH;<span class="comment">//默认当前灭灯</span></span><br><span class="line">  </span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">  Serial.begin(<span class="number">115200</span>);</span><br><span class="line">  pinMode(LED,OUTPUT);</span><br><span class="line">  digitalWrite(LED, HIGH);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(!autoConfig())&#123;              <span class="comment">//连接WIFI，先是自动连接，超过20秒自动连接失败，开始smartConfig()</span></span><br><span class="line">    smartConfig();</span><br><span class="line">    Serial.print(<span class="string">&quot;Connecting to WiFi&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span> (WiFi.status() != WL_CONNECTED) &#123;</span><br><span class="line">       delay(<span class="number">500</span>);</span><br><span class="line">       Serial.print(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  delay(<span class="number">1000</span>);</span><br><span class="line">  digitalWrite(LED, LOW);</span><br><span class="line">  Serial.println(<span class="string">&quot;IP address: &quot;</span>);</span><br><span class="line">  Serial.println(WiFi.localIP());      <span class="comment">//WiFi.localIP()返回8266获得的ip地址</span></span><br><span class="line">  server.begin();</span><br><span class="line">  server.setNoDelay(<span class="literal">true</span>);  <span class="comment">//加上后才正常些</span></span><br><span class="line">  <span class="comment">//使能软件看门狗的触发间隔</span></span><br><span class="line">  ESP.wdtEnable(<span class="number">5000</span>);</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="type">uint8_t</span> index;</span><br><span class="line">  <span class="keyword">if</span> (server.hasClient())&#123;</span><br><span class="line">        <span class="keyword">for</span> (index = <span class="number">0</span>; index &lt; MAX_SRV_CLIENTS; index++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (!serverClients[index] || !serverClients[index].connected())&#123;</span><br><span class="line">                <span class="keyword">if</span> (serverClients[index]) serverClients[index].stop();<span class="comment">//未联接,就释放</span></span><br><span class="line">                serverClients[index] = server.available();<span class="comment">//分配新的</span></span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//8266tcpserver只能接入五个  超出的需要释放</span></span><br><span class="line">        WiFiClient serverClient = server.available();</span><br><span class="line">        <span class="keyword">if</span> (serverClient)&#123;</span><br><span class="line">          serverClient.stop();</span><br><span class="line">        &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span> (index = <span class="number">0</span>; index &lt; MAX_SRV_CLIENTS; index++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (serverClients[index] &amp;&amp; serverClients[index].connected())&#123;</span><br><span class="line">            <span class="comment">//处理客户端发过来的数据</span></span><br><span class="line">            <span class="keyword">if</span> (serverClients[index].available())&#123;</span><br><span class="line">                <span class="keyword">while</span> (serverClients[index].available()) </span><br><span class="line">                    <span class="comment">//把数据发送给mega</span></span><br><span class="line">                    Serial.write(serverClients[index].read());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span>(Serial.available()&gt;<span class="number">0</span>)&#123;</span><br><span class="line">      <span class="type">char</span> ch = Serial.read();</span><br><span class="line">      <span class="comment">//收到ardunio发过来的进入smartconfig模式的命令</span></span><br><span class="line">      <span class="keyword">if</span>(ch == <span class="string">&#x27;1&#x27;</span>)&#123;</span><br><span class="line">        smartConfig();</span><br><span class="line">        delay(<span class="number">1000</span>);</span><br><span class="line">        digitalWrite(LED, LOW);</span><br><span class="line">        Serial.println(<span class="string">&quot;IP address: &quot;</span>);</span><br><span class="line">        Serial.println(WiFi.localIP());<span class="comment">//WiFi.localIP()返回8266获得的ip地址</span></span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//喂狗</span></span><br><span class="line">   ESP.wdtFeed();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 自动连接20s 超过之后自动进入SmartConfig模式</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">autoConfig</span><span class="params">()</span>&#123;</span><br><span class="line">  WiFi.mode(WIFI_AP_STA);     <span class="comment">//设置esp8266 工作模式</span></span><br><span class="line">  WiFi.begin();</span><br><span class="line">  delay(<span class="number">2000</span>);                <span class="comment">//刚启动模块的话 延时稳定一下</span></span><br><span class="line">  Serial.println(<span class="string">&quot;AutoConfiging ......&quot;</span>);</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> index=<span class="number">0</span>;index&lt;<span class="number">20</span>;index++)&#123;</span><br><span class="line">    <span class="type">int</span> wstatus = WiFi.status();</span><br><span class="line">    <span class="keyword">if</span> (wstatus == WL_CONNECTED)&#123;</span><br><span class="line">      Serial.println(<span class="string">&quot;AutoConfig Success&quot;</span>);</span><br><span class="line">      Serial.print(<span class="string">&quot;SSID:&quot;</span>);</span><br><span class="line">      Serial.println(WiFi.SSID().c_str());</span><br><span class="line">      Serial.print(<span class="string">&quot;PSW:&quot;</span>);</span><br><span class="line">      Serial.println(WiFi.psk().c_str());</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      Serial.print(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">      delay(<span class="number">1000</span>);</span><br><span class="line">      flag = !flag;</span><br><span class="line">      digitalWrite(LED, flag);</span><br><span class="line">    &#125; </span><br><span class="line">  &#125;</span><br><span class="line">  Serial.println(<span class="string">&quot;AutoConfig Faild!&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 开启SmartConfig功能</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">smartConfig</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  WiFi.mode(WIFI_STA);</span><br><span class="line">  delay(<span class="number">2000</span>);</span><br><span class="line">  Serial.println(<span class="string">&quot;Wait for Smartconfig&quot;</span>);<span class="comment">// 等待配网</span></span><br><span class="line">  WiFi.beginSmartConfig();</span><br><span class="line">  <span class="keyword">while</span> (<span class="number">1</span>)&#123;</span><br><span class="line">    Serial.print(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">    delay(<span class="number">500</span>);</span><br><span class="line">    flag = !flag;</span><br><span class="line">    digitalWrite(LED, flag);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (WiFi.smartConfigDone())&#123;</span><br><span class="line">      <span class="comment">//smartconfig配置完毕</span></span><br><span class="line">      Serial.println(<span class="string">&quot;SmartConfig Success&quot;</span>);</span><br><span class="line">      Serial.print(<span class="string">&quot;SSID:&quot;</span>);</span><br><span class="line">      Serial.println(WiFi.SSID().c_str());</span><br><span class="line">      Serial.print(<span class="string">&quot;PSW:&quot;</span>);</span><br><span class="line">      Serial.println(WiFi.psk().c_str());</span><br><span class="line">      WiFi.mode(WIFI_AP_STA);     <span class="comment">//设置esp8266 工作模式</span></span><br><span class="line">      WiFi.setAutoConnect(<span class="literal">true</span>);  <span class="comment">// 设置自动连接</span></span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Arduino端代码：（接收8266信息，JSON解析）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 功能：wifi lamp arduino端</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;SoftwareSerial.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ArduinoJson.h&gt;</span></span></span><br><span class="line">  </span><br><span class="line"><span class="type">const</span> <span class="type">unsigned</span> <span class="type">long</span> BAUD_RATE = <span class="number">115200</span>;                   <span class="comment">// serial connection speed</span></span><br><span class="line"><span class="type">const</span> <span class="type">size_t</span> MAX_CONTENT_SIZE = <span class="number">50</span>; </span><br><span class="line"><span class="type">const</span> <span class="type">size_t</span> t_bright=<span class="number">1</span>,t_color=<span class="number">2</span>,t_frequency=<span class="number">3</span>,t_switch=<span class="number">4</span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//#define UNO      //uncomment this line when you use it with UNO board</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MEGA    <span class="comment">//uncomment this line when you use it with MEGA board</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> UNO</span></span><br><span class="line"> SoftwareSerial <span class="title function_">mySerial</span><span class="params">(<span class="number">10</span>,<span class="number">11</span>)</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">  </span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> UNO</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WifiSerial  Serial</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MyDebugSerial mySerial</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">   </span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> MEGA</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WifiSerial Serial1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MyDebugSerial Serial</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span>  </span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//该条语句用于使能DEBUG输出信息，屏蔽掉就不会输出debug调试信息</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DEBUG</span></span><br><span class="line"><span class="comment">//该条语句用于使能是共阴RGB  屏蔽掉就是共阳RGB</span></span><br><span class="line"><span class="comment">//#define COMMON_GND</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> DEBUG</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DBGLN(message)    MyDebugSerial.println(message)</span></span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DBGLN(message)</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> UNO </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PIN_RED 3 <span class="comment">//red 引脚</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PIN_GREEN 5 <span class="comment">//green 引脚</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PIN_BLUE 6 <span class="comment">//blue 引脚</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PIN_ENABLE 9  <span class="comment">//使能引脚 pwm控制亮度</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PIN_KEY 7<span class="comment">// 按键</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PIN_RED 2</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PIN_GREEN 3</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PIN_BLUE 4</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PIN_ENABLE 5</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PIN_KEY 6  </span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> </span></span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> red = <span class="number">0</span>,green = <span class="number">0</span>,blue = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> type = <span class="number">4</span>;<span class="comment">//当前模式 1亮度 2颜色 3呼吸 4开关</span></span><br><span class="line"><span class="type">int</span> frequency = <span class="number">1</span>;<span class="comment">//频率</span></span><br><span class="line"><span class="type">int</span> switch_status = <span class="number">1</span>;<span class="comment">//关闭 or 开启</span></span><br><span class="line"><span class="type">int</span> bright = <span class="number">1</span>;<span class="comment">//亮度</span></span><br><span class="line"> </span><br><span class="line"><span class="type">char</span> response[MAX_CONTENT_SIZE];</span><br><span class="line"><span class="type">int</span> fadeValue = <span class="number">0</span>;<span class="comment">//当前亮度</span></span><br><span class="line"><span class="type">bool</span> isAdd = <span class="literal">true</span>;<span class="comment">//是否是从暗到亮</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">// 定义记录按键当前状态的变量</span></span><br><span class="line"><span class="type">int</span> state_btn;</span><br><span class="line"><span class="comment">// 定义记录按键最近一次状态变化的变量，并初始化状态为LOW。</span></span><br><span class="line"><span class="type">int</span> lastButtonState = LOW;</span><br><span class="line"><span class="comment">// 定义记录最近一次抖动的时间变量，并初始化时间为0毫秒。</span></span><br><span class="line"><span class="type">long</span> lastDebounceTime = <span class="number">0</span>;</span><br><span class="line"><span class="comment">// 定义延迟抖动的时间变量</span></span><br><span class="line"><span class="type">long</span> debouncdDelay = <span class="number">60</span>;</span><br><span class="line">  </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* @Desc 初始化操作</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">  pinMode(PIN_RED, OUTPUT);</span><br><span class="line">  pinMode(PIN_GREEN, OUTPUT);</span><br><span class="line">  pinMode(PIN_BLUE, OUTPUT);</span><br><span class="line">  pinMode(PIN_ENABLE, OUTPUT);</span><br><span class="line">  pinMode(PIN_KEY,INPUT);</span><br><span class="line">  </span><br><span class="line">  WifiSerial.begin(BAUD_RATE);</span><br><span class="line">  <span class="meta">#<span class="keyword">ifdef</span> DEBUG</span></span><br><span class="line">    <span class="meta">#<span class="keyword">ifdef</span> UNO</span></span><br><span class="line">      MyDebugSerial.begin(<span class="number">9600</span>);<span class="comment">//软串口9600稳定</span></span><br><span class="line">    <span class="meta">#<span class="keyword">else</span></span></span><br><span class="line">      MyDebugSerial.begin(BAUD_RATE);</span><br><span class="line">    <span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">  <span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">  DBGLN(<span class="string">&quot;Arduino Init End&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* @Desc  主函数</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">if</span>(WifiSerial.available()&gt;<span class="number">0</span>)&#123;</span><br><span class="line">    clrEsp8266ResponseBuffer();</span><br><span class="line">    <span class="type">int</span> data_size = ReceiveMessage(response, <span class="keyword">sizeof</span>(response));</span><br><span class="line">    <span class="keyword">if</span>(data_size&gt;<span class="number">0</span>)&#123;</span><br><span class="line">      <span class="comment">//开始解析数据</span></span><br><span class="line">      parseData(response);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">if</span>(type == t_frequency)&#123;</span><br><span class="line">    <span class="comment">//呼吸灯效果</span></span><br><span class="line">    breatheRGB(frequency);</span><br><span class="line">  &#125;</span><br><span class="line">  checkButton();</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 读取串口缓冲区里面的数据</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">ReceiveMessage</span><span class="params">(<span class="type">char</span>* content, <span class="type">size_t</span> maxSize)</span>&#123;</span><br><span class="line">  <span class="comment">//不用 readBytes 因为比较耗时</span></span><br><span class="line">  <span class="type">size_t</span> length = WifiSerial.readBytesUntil(<span class="string">&#x27;&#125;&#x27;</span>,content, maxSize);</span><br><span class="line">  content[length] = <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">  content[++length] = <span class="number">0</span>;</span><br><span class="line">  DBGLN(content);</span><br><span class="line">  <span class="keyword">return</span> length;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * @Desc 解析json</span></span><br><span class="line"><span class="comment">     * 有三种</span></span><br><span class="line"><span class="comment">     * 1.亮度控制页面(0 暗 1正常 2亮)</span></span><br><span class="line"><span class="comment">     * &#123;</span></span><br><span class="line"><span class="comment">     *     &quot;t&quot;: 1,</span></span><br><span class="line"><span class="comment">     *     &quot;bb&quot;: 2</span></span><br><span class="line"><span class="comment">     * &#125;</span></span><br><span class="line"><span class="comment">     * 2.颜色控制页面</span></span><br><span class="line"><span class="comment">     * &#123;</span></span><br><span class="line"><span class="comment">     *     &quot;t&quot;: 2,</span></span><br><span class="line"><span class="comment">     *     &quot;cr&quot;: 154,</span></span><br><span class="line"><span class="comment">     *     &quot;cg&quot;: 147,</span></span><br><span class="line"><span class="comment">     *     &quot;cb&quot;: 255</span></span><br><span class="line"><span class="comment">     * &#125;</span></span><br><span class="line"><span class="comment">     * 3.呼吸灯控制页面(0 慢呼吸 1正常 2快)</span></span><br><span class="line"><span class="comment">     * &#123;</span></span><br><span class="line"><span class="comment">     *    &quot;t&quot;: 3,</span></span><br><span class="line"><span class="comment">     *    &quot;gf&quot;: 1</span></span><br><span class="line"><span class="comment">     * &#125;</span></span><br><span class="line"><span class="comment">     * 4.开关控制(0关闭 1开启)</span></span><br><span class="line"><span class="comment">     * &#123;</span></span><br><span class="line"><span class="comment">     *    &quot;t&quot;: 4,</span></span><br><span class="line"><span class="comment">     *    &quot;ss&quot;: 1</span></span><br><span class="line"><span class="comment">     * &#125; </span></span><br><span class="line"><span class="comment">     **/</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">parseData</span><span class="params">(<span class="type">char</span>* content)</span> &#123;</span><br><span class="line"><span class="comment">//    -- 根据我们需要解析的数据来计算JSON缓冲区最佳大小</span></span><br><span class="line"><span class="comment">//   如果你使用StaticJsonBuffer时才需要</span></span><br><span class="line"><span class="comment">//    const size_t BUFFER_SIZE = 1024;</span></span><br><span class="line"><span class="comment">//   在堆栈上分配一个临时内存池</span></span><br><span class="line"><span class="comment">//    StaticJsonBuffer&lt;BUFFER_SIZE&gt; jsonBuffer;</span></span><br><span class="line"><span class="comment">//    -- 如果堆栈的内存池太大，使用 DynamicJsonBuffer jsonBuffer 代替</span></span><br><span class="line">  DynamicJsonBuffer jsonBuffer;</span><br><span class="line">   </span><br><span class="line">  JsonObject&amp; root = jsonBuffer.parseObject(content);</span><br><span class="line">   </span><br><span class="line">  <span class="keyword">if</span> (!root.success()) &#123;</span><br><span class="line">    Serial.println(<span class="string">&quot;JSON parsing failed!&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">    </span><br><span class="line">  type = root[<span class="string">&quot;t&quot;</span>];</span><br><span class="line">  <span class="keyword">switch</span>(type)&#123;</span><br><span class="line">    <span class="keyword">case</span> t_bright:</span><br><span class="line">         bright = root[<span class="string">&quot;bb&quot;</span>];</span><br><span class="line">         brightRGB(bright);</span><br><span class="line">         <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> t_color:</span><br><span class="line">         red = root[<span class="string">&quot;cr&quot;</span>];</span><br><span class="line">         green = root[<span class="string">&quot;cg&quot;</span>];</span><br><span class="line">         blue = root[<span class="string">&quot;cb&quot;</span>];</span><br><span class="line">         colorRGB(red,green,blue);</span><br><span class="line">         <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> t_frequency:</span><br><span class="line">         frequency = root[<span class="string">&quot;gf&quot;</span>];</span><br><span class="line">         <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> t_switch:</span><br><span class="line">         switch_status = root[<span class="string">&quot;ss&quot;</span>];</span><br><span class="line">         <span class="type">bool</span> enable = switch_status == <span class="number">1</span>;</span><br><span class="line">         switchRGB(enable);</span><br><span class="line">         <span class="keyword">break</span>;     </span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 控制灯亮度</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">brightRGB</span><span class="params">(<span class="type">int</span> bright)</span>&#123;</span><br><span class="line">  <span class="type">int</span> level = bright%<span class="number">3</span>;</span><br><span class="line">  <span class="type">int</span> bright_level;</span><br><span class="line">  <span class="keyword">switch</span>(level)&#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0</span>:<span class="comment">//暗  50</span></span><br><span class="line">      bright_level = <span class="number">50</span>;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:<span class="comment">//正常 100</span></span><br><span class="line">      bright_level = <span class="number">100</span>;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:<span class="comment">//亮  200</span></span><br><span class="line">      bright_level = <span class="number">200</span>;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">    <span class="meta">#<span class="keyword">ifdef</span> COMMON_GND</span></span><br><span class="line">     <span class="comment">//共地</span></span><br><span class="line">     analogWrite(PIN_ENABLE,bright_level);</span><br><span class="line">    <span class="meta">#<span class="keyword">else</span></span></span><br><span class="line">     analogWrite(PIN_ENABLE,<span class="number">255</span>-bright_level);</span><br><span class="line">    <span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 控制RGB颜色</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">colorRGB</span><span class="params">(<span class="type">int</span> red, <span class="type">int</span> green, <span class="type">int</span> blue)</span>&#123;</span><br><span class="line">  <span class="meta">#<span class="keyword">ifdef</span> COMMON_GND</span></span><br><span class="line">     analogWrite(PIN_RED,constrain(red,<span class="number">0</span>,<span class="number">255</span>));</span><br><span class="line">     analogWrite(PIN_GREEN,constrain(green,<span class="number">0</span>,<span class="number">255</span>));</span><br><span class="line">     analogWrite(PIN_BLUE,constrain(blue,<span class="number">0</span>,<span class="number">255</span>));</span><br><span class="line">  <span class="meta">#<span class="keyword">else</span></span></span><br><span class="line">     analogWrite(PIN_RED,constrain(<span class="number">255</span>-red,<span class="number">0</span>,<span class="number">255</span>));</span><br><span class="line">     analogWrite(PIN_GREEN,constrain(<span class="number">255</span>-green,<span class="number">0</span>,<span class="number">255</span>));</span><br><span class="line">     analogWrite(PIN_BLUE,constrain(<span class="number">255</span>-blue,<span class="number">0</span>,<span class="number">255</span>));</span><br><span class="line">  <span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 控制亮灭</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">switchRGB</span><span class="params">(<span class="type">bool</span> enable)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(enable)&#123;</span><br><span class="line">    <span class="comment">//打开</span></span><br><span class="line">    <span class="meta">#<span class="keyword">ifdef</span> COMMON_GND</span></span><br><span class="line">     <span class="comment">//共地</span></span><br><span class="line">     analogWrite(PIN_ENABLE,<span class="number">255</span>);</span><br><span class="line">    <span class="meta">#<span class="keyword">else</span></span></span><br><span class="line">     analogWrite(PIN_ENABLE,<span class="number">0</span>);</span><br><span class="line">    <span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">//关闭</span></span><br><span class="line">    <span class="meta">#<span class="keyword">ifdef</span> COMMON_GND</span></span><br><span class="line">     <span class="comment">//共地</span></span><br><span class="line">     analogWrite(PIN_ENABLE,<span class="number">0</span>);</span><br><span class="line">    <span class="meta">#<span class="keyword">else</span></span></span><br><span class="line">     analogWrite(PIN_ENABLE,<span class="number">255</span>);</span><br><span class="line">    <span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 呼吸灯</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">breatheRGB</span><span class="params">(<span class="type">int</span> frequency)</span>&#123;</span><br><span class="line">  <span class="type">int</span> level = frequency%<span class="number">3</span>;</span><br><span class="line">  <span class="type">int</span> f_level;</span><br><span class="line">  <span class="keyword">switch</span>(level)&#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0</span>:<span class="comment">//慢  50</span></span><br><span class="line">      f_level = <span class="number">3</span>;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:<span class="comment">//正常 100</span></span><br><span class="line">      f_level = <span class="number">10</span>;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:<span class="comment">//快  200</span></span><br><span class="line">      f_level = <span class="number">20</span>;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(isAdd)&#123;</span><br><span class="line">    <span class="comment">//递增方向</span></span><br><span class="line">     fadeValue +=f_level;</span><br><span class="line">     <span class="keyword">if</span>(fadeValue&gt;=<span class="number">255</span>)&#123;</span><br><span class="line">       fadeValue = <span class="number">255</span>;</span><br><span class="line">       isAdd =<span class="literal">false</span>;</span><br><span class="line">     &#125;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">//递减方向</span></span><br><span class="line">    fadeValue -=f_level;</span><br><span class="line">     <span class="keyword">if</span>(fadeValue&lt;=<span class="number">0</span>)&#123;</span><br><span class="line">       fadeValue = <span class="number">0</span>;</span><br><span class="line">       isAdd =<span class="literal">true</span>;</span><br><span class="line">     &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  analogWrite(PIN_ENABLE,fadeValue);</span><br><span class="line">  delay(<span class="number">20</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 检查按键功能</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">checkButton</span><span class="params">()</span>&#123;</span><br><span class="line">  <span class="type">int</span> buttonState = digitalRead(PIN_KEY);<span class="comment">//读取当前按键状态</span></span><br><span class="line">  <span class="keyword">if</span>(buttonState != lastButtonState)&#123;</span><br><span class="line">     <span class="comment">//如果按键发生了变化  则重新设置最近一次抖动的时间</span></span><br><span class="line">     <span class="comment">//方法millis()可以获取当前时间，单位统一为毫秒。</span></span><br><span class="line">     lastDebounceTime = millis();  </span><br><span class="line">  &#125;</span><br><span class="line">   </span><br><span class="line">  <span class="comment">// 判断按键按下状态时间间隔是否大于延迟抖动的时间长度。</span></span><br><span class="line">  <span class="keyword">if</span>(millis()-lastDebounceTime&gt;debouncdDelay)&#123;</span><br><span class="line">    <span class="comment">// 判断当前的按键状态是否和之前有所变化</span></span><br><span class="line">    <span class="keyword">if</span>(buttonState != state_btn)&#123;</span><br><span class="line">       <span class="comment">// 如果发生了变化，</span></span><br><span class="line">       <span class="comment">// 则更新按键状态变量。</span></span><br><span class="line">       state_btn = buttonState;</span><br><span class="line">       <span class="keyword">if</span>(state_btn == HIGH)&#123;</span><br><span class="line">        <span class="comment">//再次确认是否真的按下了按键</span></span><br><span class="line">         DBGLN(<span class="string">&quot;smartconfig&quot;</span>);</span><br><span class="line">         WifiSerial.write(<span class="string">&#x27;1&#x27;</span>);</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 更新按键最近一次状态变化的变量</span></span><br><span class="line">  lastButtonState = buttonState;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">clrEsp8266ResponseBuffer</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(response, <span class="number">0</span>, MAX_CONTENT_SIZE);      <span class="comment">//清空</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2、OLED显示天气屏"><a href="#2、OLED显示天气屏" class="headerlink" title="2、OLED显示天气屏"></a>2、OLED显示天气屏</h2><p>相关技术点：</p><ul><li>ArduinoJson V5库</li><li>TCP Client</li><li>STA模式</li><li>一键配网</li><li>U8G2 OLED库</li></ul><p>内容：</p><p>向心知天气请求当地城市天气情况，并在OLED上显示天气图标、温度值以及城市名称</p><p>心知天气参考<a href="https://docs.seniverse.com/api/weather/now.html">wiki</a></p><p>天气编码<a href="https://docs.seniverse.com/api/start/code.html">wiki</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 功能：OLED显示天气屏</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Arduino.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WiFi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ArduinoJson.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;U8g2lib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> U8X8_HAVE_HW_SPI</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;SPI.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> U8X8_HAVE_HW_I2C</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Wire.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LED D4</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DEBUG <span class="comment">//是否开启debug功能</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> DEBUG</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrintln(message)    Serial.println(message)</span></span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrintln(message)</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> DEBUG</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrint(message)    Serial.print(message)</span></span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DebugPrint(message)</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WEATHER_CODE_DAY_SUN <span class="string">&quot;0&quot;</span> <span class="comment">//晴（国内城市白天晴）</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WEATHER_CODE_NIGHT_SUN <span class="string">&quot;1&quot;</span> <span class="comment">//晴（国内城市夜晚晴）</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WEATHER_CODE_DAY_SUN1 <span class="string">&quot;2&quot;</span> <span class="comment">//晴（国外城市白天晴）</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WEATHER_CODE_NIGHT_SUN2 <span class="string">&quot;3&quot;</span> <span class="comment">//晴（国外城市夜晚晴）</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WEATHER_CODE_CLOUDY <span class="string">&quot;4&quot;</span> <span class="comment">//多云</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WEATHER_CODE_DAY_PARTLY_CLOUDY <span class="string">&quot;5&quot;</span> <span class="comment">//白天晴间多云</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WEATHER_CODE_NIGHT_PARTLY_CLOUDY <span class="string">&quot;6&quot;</span> <span class="comment">//夜晚晴间多云</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WEATHER_CODE_DAY_MOSTLY_CLOUDY <span class="string">&quot;7&quot;</span> <span class="comment">//白天大部多云</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WEATHER_CODE_NIGHT_MOSTLY_CLOUDY <span class="string">&quot;8&quot;</span> <span class="comment">//夜晚大部多云</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WEATHER_CODE_OVERCAST <span class="string">&quot;9&quot;</span> <span class="comment">//阴</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WEATHER_CODE_SHOWER <span class="string">&quot;10&quot;</span> <span class="comment">//阵雨</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WEATHER_CODE_THUNDERSHOWER <span class="string">&quot;11&quot;</span> <span class="comment">//雷阵雨</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WEATHER_CODE_THUNDERSHOWER_WITH_HAIL <span class="string">&quot;12&quot;</span> <span class="comment">//雷阵雨伴有冰雹</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WEATHER_CODE_LIGHT_RAIN <span class="string">&quot;13&quot;</span> <span class="comment">//小雨</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WEATHER_CODE_MODERATE_RAIN <span class="string">&quot;14&quot;</span> <span class="comment">//中雨</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WEATHER_CODE_HEAVY_RAIN <span class="string">&quot;15&quot;</span> <span class="comment">//大雨</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WEATHER_CODE_STORM <span class="string">&quot;16&quot;</span> <span class="comment">//暴雨</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WEATHER_CODE_HEAVY_STORM <span class="string">&quot;17&quot;</span> <span class="comment">//大暴雨</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WEATHER_CODE_SEVERE_STORM <span class="string">&quot;18&quot;</span> <span class="comment">//特大暴雨</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WEATHER_CODE_ICE_RAIN <span class="string">&quot;19&quot;</span> <span class="comment">//冻雨</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WEATHER_CODE_SLEET <span class="string">&quot;20&quot;</span> <span class="comment">//雨夹雪</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WEATHER_CODE_SNOW_FLURRY <span class="string">&quot;21&quot;</span> <span class="comment">//阵雪</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WEATHER_CODE_LIGHT_SNOW <span class="string">&quot;22&quot;</span> <span class="comment">//小雪</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WEATHER_CODE_MODERATE_SNOW <span class="string">&quot;23&quot;</span> <span class="comment">//中雪</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WEATHER_CODE_HEAVY_SNOW <span class="string">&quot;24&quot;</span> <span class="comment">//大雪</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WEATHER_CODE_SNOW_STORM <span class="string">&quot;25&quot;</span> <span class="comment">//暴雪</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SUN_DAY 0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SUN_NIGHT 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SUN_CLOUD 2</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> CLOUD 3</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> RAIN 4</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> THUNDER 5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//声明方法</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">autoConfig</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">smartConfig</span><span class="params">()</span>;</span><br><span class="line"><span class="type">bool</span> <span class="title function_">sendRequest</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* host, <span class="type">const</span> <span class="type">char</span>* cityid, <span class="type">const</span> <span class="type">char</span>* apiKey)</span>;</span><br><span class="line"><span class="type">bool</span> <span class="title function_">skipResponseHeaders</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">readReponseContent</span><span class="params">(<span class="type">char</span>* content, <span class="type">size_t</span> maxSize)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">stopConnect</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">clrEsp8266ResponseBuffer</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">bool</span> <span class="title function_">parseUserData</span><span class="params">(<span class="type">char</span>* content, <span class="keyword">struct</span> UserData* userData)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">drawWeatherSymbol</span><span class="params">(<span class="type">u8g2_uint_t</span> x, <span class="type">u8g2_uint_t</span> y, <span class="type">uint8_t</span> symbol)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">drawWeather</span><span class="params">(<span class="type">uint8_t</span> symbol, <span class="type">int</span> degree)</span>;</span><br><span class="line">  </span><br><span class="line"><span class="type">const</span> <span class="type">unsigned</span> <span class="type">long</span> BAUD_RATE = <span class="number">115200</span>;<span class="comment">// serial connection speed</span></span><br><span class="line"><span class="type">const</span> <span class="type">unsigned</span> <span class="type">long</span> HTTP_TIMEOUT = <span class="number">5000</span>;               <span class="comment">// max respone time from server</span></span><br><span class="line"><span class="type">const</span> <span class="type">size_t</span> MAX_CONTENT_SIZE = <span class="number">500</span>;                   <span class="comment">// max size of the HTTP response</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* host = <span class="string">&quot;api.seniverse.com&quot;</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* APIKEY = <span class="string">&quot;wcmquevztdy1jpca&quot;</span>;        <span class="comment">//API KEY</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* city = <span class="string">&quot;guangzhou&quot;</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* language = <span class="string">&quot;zh-Hans&quot;</span>;<span class="comment">//zh-Hans 简体中文  会显示乱码</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> flag = HIGH;<span class="comment">//默认当前灭灯</span></span><br><span class="line">U8G2_SSD1306_128X64_NONAME_F_HW_I2C <span class="title function_">u8g2</span><span class="params">(U8G2_R0, <span class="comment">/* reset=*/</span> U8X8_PIN_NONE)</span>;</span><br><span class="line"></span><br><span class="line">WiFiClient client;</span><br><span class="line"><span class="type">char</span> response[MAX_CONTENT_SIZE];</span><br><span class="line"><span class="type">char</span> endOfHeaders[] = <span class="string">&quot;\r\n\r\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">long</span> lastTime = <span class="number">0</span>;</span><br><span class="line"><span class="comment">// 请求服务间隔</span></span><br><span class="line"><span class="type">long</span> Delay = <span class="number">20000</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 我们要从此网页中提取的数据的类型</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">UserData</span> &#123;</span></span><br><span class="line">  <span class="type">char</span> city[<span class="number">16</span>];<span class="comment">//城市名称</span></span><br><span class="line">  <span class="type">char</span> weather_code[<span class="number">4</span>];<span class="comment">//天气现象code（多云...）</span></span><br><span class="line">  <span class="type">char</span> temp[<span class="number">5</span>];<span class="comment">//温度</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* @Desc 初始化操作</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">  Serial.begin(BAUD_RATE);</span><br><span class="line">  pinMode(LED,OUTPUT);</span><br><span class="line">  digitalWrite(LED, HIGH);</span><br><span class="line"></span><br><span class="line">  WiFi.disconnect();</span><br><span class="line">  <span class="keyword">if</span>(!autoConfig())&#123;</span><br><span class="line">    smartConfig();</span><br><span class="line">    DebugPrint(<span class="string">&quot;Connecting to WiFi&quot;</span>);<span class="comment">//写几句提示，哈哈</span></span><br><span class="line">    <span class="keyword">while</span> (WiFi.status() != WL_CONNECTED) &#123;</span><br><span class="line">    <span class="comment">//这个函数是wifi连接状态，返回wifi链接状态</span></span><br><span class="line">       delay(<span class="number">500</span>);</span><br><span class="line">       DebugPrint(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  delay(<span class="number">1000</span>);</span><br><span class="line">  digitalWrite(LED, LOW);</span><br><span class="line">  DebugPrintln(<span class="string">&quot;IP address: &quot;</span>);</span><br><span class="line">  DebugPrintln(WiFi.localIP());<span class="comment">//WiFi.localIP()返回8266获得的ip地址</span></span><br><span class="line">  lastTime = millis();</span><br><span class="line">  u8g2.begin();  </span><br><span class="line">  u8g2.enableUTF8Print();</span><br><span class="line">  <span class="comment">//使能软件看门狗的触发间隔</span></span><br><span class="line">  ESP.wdtEnable(<span class="number">5000</span>);</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* @Desc  主函数</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="keyword">while</span> (!client.connected())&#123;</span><br><span class="line">     <span class="keyword">if</span> (!client.connect(host, <span class="number">80</span>))&#123;</span><br><span class="line">         flag = !flag;</span><br><span class="line">         digitalWrite(LED, flag);</span><br><span class="line">         delay(<span class="number">500</span>);</span><br><span class="line">         <span class="comment">//喂狗</span></span><br><span class="line">         ESP.wdtFeed();</span><br><span class="line">     &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(millis()-lastTime&gt;=Delay)&#123;</span><br><span class="line">   <span class="comment">//每间隔20s左右调用一次</span></span><br><span class="line">     lastTime = millis();</span><br><span class="line">     <span class="keyword">if</span> (sendRequest(host, city, APIKEY) &amp;&amp; skipResponseHeaders()) &#123;</span><br><span class="line">       clrEsp8266ResponseBuffer();</span><br><span class="line">       readReponseContent(response, <span class="keyword">sizeof</span>(response));</span><br><span class="line">       UserData userData;</span><br><span class="line">       <span class="keyword">if</span> (parseUserData(response, &amp;userData)) &#123;</span><br><span class="line">          showWeather(&amp;userData);</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">   <span class="comment">//喂狗</span></span><br><span class="line">   ESP.wdtFeed();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 自动连接20s 超过之后自动进入SmartConfig模式</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">autoConfig</span><span class="params">()</span>&#123;</span><br><span class="line">  WiFi.mode(WIFI_AP_STA);     <span class="comment">//设置esp8266 工作模式</span></span><br><span class="line">  WiFi.begin();</span><br><span class="line">  delay(<span class="number">2000</span>);<span class="comment">//刚启动模块的话 延时稳定一下</span></span><br><span class="line">  DebugPrintln(<span class="string">&quot;AutoConfiging ......&quot;</span>);</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> index=<span class="number">0</span>;index&lt;<span class="number">10</span>;index++)&#123;</span><br><span class="line">    <span class="type">int</span> wstatus = WiFi.status();</span><br><span class="line">    <span class="keyword">if</span> (wstatus == WL_CONNECTED)&#123;</span><br><span class="line">      DebugPrintln(<span class="string">&quot;AutoConfig Success&quot;</span>);</span><br><span class="line">      DebugPrint(<span class="string">&quot;SSID:&quot;</span>);</span><br><span class="line">      DebugPrintln(WiFi.SSID().c_str());</span><br><span class="line">      DebugPrint(<span class="string">&quot;PSW:&quot;</span>);</span><br><span class="line">      DebugPrintln(WiFi.psk().c_str());</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      DebugPrint(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">      delay(<span class="number">500</span>);</span><br><span class="line">      flag = !flag;</span><br><span class="line">      digitalWrite(LED, flag);</span><br><span class="line">    &#125; </span><br><span class="line">  &#125;</span><br><span class="line">  DebugPrintln(<span class="string">&quot;AutoConfig Faild!&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 开启SmartConfig功能</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">smartConfig</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  WiFi.mode(WIFI_STA);</span><br><span class="line">  delay(<span class="number">1000</span>);</span><br><span class="line">  DebugPrintln(<span class="string">&quot;Wait for Smartconfig&quot;</span>);</span><br><span class="line">  <span class="comment">// 等待配网</span></span><br><span class="line">  WiFi.beginSmartConfig();</span><br><span class="line">  <span class="keyword">while</span> (<span class="number">1</span>)&#123;</span><br><span class="line">    DebugPrint(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">    delay(<span class="number">200</span>);</span><br><span class="line">    flag = !flag;</span><br><span class="line">    digitalWrite(LED, flag);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (WiFi.smartConfigDone())&#123;</span><br><span class="line">      <span class="comment">//smartconfig配置完毕</span></span><br><span class="line">      DebugPrintln(<span class="string">&quot;SmartConfig Success&quot;</span>);</span><br><span class="line">      DebugPrint(<span class="string">&quot;SSID:&quot;</span>);</span><br><span class="line">      DebugPrintln(WiFi.SSID().c_str());</span><br><span class="line">      DebugPrint(<span class="string">&quot;PSW:&quot;</span>);</span><br><span class="line">      DebugPrintln(WiFi.psk().c_str());</span><br><span class="line">      WiFi.mode(WIFI_AP_STA);     <span class="comment">//设置esp8266 工作模式</span></span><br><span class="line">      WiFi.setAutoConnect(<span class="literal">true</span>);  <span class="comment">// 设置自动连接</span></span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* @发送请求指令</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">sendRequest</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* host, <span class="type">const</span> <span class="type">char</span>* cityid, <span class="type">const</span> <span class="type">char</span>* apiKey)</span> &#123;</span><br><span class="line">  <span class="comment">// We now create a URI for the request</span></span><br><span class="line">  <span class="comment">//心知天气</span></span><br><span class="line">  String GetUrl = <span class="string">&quot;/v3/weather/now.json?key=&quot;</span>;</span><br><span class="line">  GetUrl += apiKey;</span><br><span class="line">  GetUrl += <span class="string">&quot;&amp;location=&quot;</span>;</span><br><span class="line">  GetUrl += city;</span><br><span class="line">  GetUrl += <span class="string">&quot;&amp;language=&quot;</span>;</span><br><span class="line">  GetUrl += language;</span><br><span class="line">  <span class="comment">// This will send the request to the server</span></span><br><span class="line">  client.print(String(<span class="string">&quot;GET &quot;</span>) + GetUrl + <span class="string">&quot; HTTP/1.1\r\n&quot;</span> +</span><br><span class="line">               <span class="string">&quot;Host: &quot;</span> + host + <span class="string">&quot;\r\n&quot;</span> +</span><br><span class="line">               <span class="string">&quot;Connection: close\r\n\r\n&quot;</span>);</span><br><span class="line">  DebugPrintln(<span class="string">&quot;create a request:&quot;</span>);</span><br><span class="line">  DebugPrintln(String(<span class="string">&quot;GET &quot;</span>) + GetUrl + <span class="string">&quot; HTTP/1.1\r\n&quot;</span> +</span><br><span class="line">               <span class="string">&quot;Host: &quot;</span> + host + <span class="string">&quot;\r\n&quot;</span> +</span><br><span class="line">               <span class="string">&quot;Connection: close\r\n&quot;</span>);</span><br><span class="line">  delay(<span class="number">1000</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* @Desc 跳过 HTTP 头，使我们在响应正文的开头</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">skipResponseHeaders</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="comment">// HTTP headers end with an empty line</span></span><br><span class="line">  <span class="type">bool</span> ok = client.find(endOfHeaders);</span><br><span class="line">  <span class="keyword">if</span> (!ok) &#123;</span><br><span class="line">    DebugPrintln(<span class="string">&quot;No response or invalid response!&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> ok;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* @Desc 从HTTP服务器响应中读取正文</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">readReponseContent</span><span class="params">(<span class="type">char</span>* content, <span class="type">size_t</span> maxSize)</span> &#123;</span><br><span class="line">  <span class="type">size_t</span> length = client.readBytes(content, maxSize);</span><br><span class="line">  delay(<span class="number">100</span>);</span><br><span class="line">  DebugPrintln(<span class="string">&quot;Get the data from Internet!&quot;</span>);</span><br><span class="line">  content[length] = <span class="number">0</span>;</span><br><span class="line">  DebugPrintln(content);</span><br><span class="line">  DebugPrintln(<span class="string">&quot;Read data Over!&quot;</span>);</span><br><span class="line">  client.flush();<span class="comment">//这句代码需要加上  不然会发现每隔一次client.find会失败</span></span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="comment">// 关闭与HTTP服务器连接</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">stopConnect</span><span class="params">()</span> &#123;</span><br><span class="line">  client.stop();</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">clrEsp8266ResponseBuffer</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(response, <span class="number">0</span>, MAX_CONTENT_SIZE);      <span class="comment">//清空</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> <span class="title function_">parseUserData</span><span class="params">(<span class="type">char</span>* content, <span class="keyword">struct</span> UserData* userData)</span> &#123;</span><br><span class="line"><span class="comment">//    -- 根据我们需要解析的数据来计算JSON缓冲区最佳大小</span></span><br><span class="line"><span class="comment">//   如果你使用StaticJsonBuffer时才需要</span></span><br><span class="line"><span class="comment">//    const size_t BUFFER_SIZE = 1024;</span></span><br><span class="line"><span class="comment">//   在堆栈上分配一个临时内存池</span></span><br><span class="line"><span class="comment">//    StaticJsonBuffer&lt;BUFFER_SIZE&gt; jsonBuffer;</span></span><br><span class="line"><span class="comment">//    -- 如果堆栈的内存池太大，使用 DynamicJsonBuffer jsonBuffer 代替</span></span><br><span class="line">  DynamicJsonBuffer jsonBuffer;</span><br><span class="line">  </span><br><span class="line">  JsonObject&amp; root = jsonBuffer.parseObject(content);</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> (!root.success()) &#123;</span><br><span class="line">    Serial.println(<span class="string">&quot;JSON parsing failed!&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">   </span><br><span class="line">  <span class="comment">//复制我们感兴趣的字符串</span></span><br><span class="line">  <span class="built_in">strcpy</span>(userData-&gt;city, root[<span class="string">&quot;results&quot;</span>][<span class="number">0</span>][<span class="string">&quot;location&quot;</span>][<span class="string">&quot;name&quot;</span>]);</span><br><span class="line">  <span class="built_in">strcpy</span>(userData-&gt;weather_code, root[<span class="string">&quot;results&quot;</span>][<span class="number">0</span>][<span class="string">&quot;now&quot;</span>][<span class="string">&quot;code&quot;</span>]);</span><br><span class="line">  <span class="built_in">strcpy</span>(userData-&gt;temp, root[<span class="string">&quot;results&quot;</span>][<span class="number">0</span>][<span class="string">&quot;now&quot;</span>][<span class="string">&quot;temperature&quot;</span>]);</span><br><span class="line">  <span class="comment">//  -- 这不是强制复制，你可以使用指针，因为他们是指向“内容”缓冲区内，所以你需要确保</span></span><br><span class="line">  <span class="comment">//   当你读取字符串时它仍在内存中</span></span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据天气接口返回的数据判断显示</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">showWeather</span><span class="params">(<span class="keyword">struct</span> UserData* userData)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(<span class="built_in">strcmp</span>(userData-&gt;weather_code,WEATHER_CODE_DAY_SUN) == <span class="number">0</span> </span><br><span class="line">  || <span class="built_in">strcmp</span>(userData-&gt;weather_code,WEATHER_CODE_DAY_SUN1) == <span class="number">0</span>)&#123;</span><br><span class="line">    drawWeather(SUN_DAY,userData-&gt;temp,userData-&gt;city);</span><br><span class="line">  &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">strcmp</span>(userData-&gt;weather_code,WEATHER_CODE_NIGHT_SUN) == <span class="number">0</span> </span><br><span class="line">  || <span class="built_in">strcmp</span>(userData-&gt;weather_code,WEATHER_CODE_NIGHT_SUN2) == <span class="number">0</span> )&#123;</span><br><span class="line">    drawWeather(SUN_NIGHT,userData-&gt;temp,userData-&gt;city);</span><br><span class="line">  &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">strcmp</span>(userData-&gt;weather_code,WEATHER_CODE_DAY_PARTLY_CLOUDY) == <span class="number">0</span> </span><br><span class="line">  || <span class="built_in">strcmp</span>(userData-&gt;weather_code,WEATHER_CODE_NIGHT_PARTLY_CLOUDY) == <span class="number">0</span> )&#123;</span><br><span class="line">    drawWeather(SUN_CLOUD,userData-&gt;temp,userData-&gt;city);</span><br><span class="line">  &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">strcmp</span>(userData-&gt;weather_code,WEATHER_CODE_CLOUDY) == <span class="number">0</span> </span><br><span class="line">  || <span class="built_in">strcmp</span>(userData-&gt;weather_code,WEATHER_CODE_DAY_MOSTLY_CLOUDY) == <span class="number">0</span> </span><br><span class="line">  || <span class="built_in">strcmp</span>(userData-&gt;weather_code,WEATHER_CODE_NIGHT_MOSTLY_CLOUDY) == <span class="number">0</span> </span><br><span class="line">  || <span class="built_in">strcmp</span>(userData-&gt;weather_code,WEATHER_CODE_OVERCAST) == <span class="number">0</span>)&#123;</span><br><span class="line">    drawWeather(CLOUD,userData-&gt;temp,userData-&gt;city); </span><br><span class="line">  &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">strcmp</span>(userData-&gt;weather_code,WEATHER_CODE_SHOWER) == <span class="number">0</span> </span><br><span class="line">  || <span class="built_in">strcmp</span>(userData-&gt;weather_code,WEATHER_CODE_LIGHT_RAIN) == <span class="number">0</span> </span><br><span class="line">  || <span class="built_in">strcmp</span>(userData-&gt;weather_code,WEATHER_CODE_MODERATE_RAIN) == <span class="number">0</span> </span><br><span class="line">  || <span class="built_in">strcmp</span>(userData-&gt;weather_code,WEATHER_CODE_HEAVY_RAIN) == <span class="number">0</span> </span><br><span class="line">  || <span class="built_in">strcmp</span>(userData-&gt;weather_code,WEATHER_CODE_STORM) == <span class="number">0</span></span><br><span class="line">  || <span class="built_in">strcmp</span>(userData-&gt;weather_code,WEATHER_CODE_HEAVY_STORM) == <span class="number">0</span> </span><br><span class="line">  || <span class="built_in">strcmp</span>(userData-&gt;weather_code,WEATHER_CODE_SEVERE_STORM) == <span class="number">0</span>)&#123;</span><br><span class="line">    drawWeather(RAIN,userData-&gt;temp,userData-&gt;city);</span><br><span class="line">  &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">strcmp</span>(userData-&gt;weather_code,WEATHER_CODE_THUNDERSHOWER) == <span class="number">0</span> </span><br><span class="line">  || <span class="built_in">strcmp</span>(userData-&gt;weather_code,WEATHER_CODE_THUNDERSHOWER_WITH_HAIL) == <span class="number">0</span>)&#123;</span><br><span class="line">    drawWeather(THUNDER,userData-&gt;temp,userData-&gt;city);</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    drawWeather(CLOUD,userData-&gt;temp,userData-&gt;city); </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">drawWeather</span><span class="params">(<span class="type">uint8_t</span> symbol, <span class="type">char</span>* degree,<span class="type">char</span>* city)</span></span><br><span class="line">&#123;</span><br><span class="line">  DebugPrintln(city);</span><br><span class="line">  u8g2.clearBuffer();         <span class="comment">// clear the internal memory</span></span><br><span class="line">  <span class="comment">//绘制天气符号</span></span><br><span class="line">  drawWeatherSymbol(<span class="number">0</span>, <span class="number">48</span>, symbol);</span><br><span class="line">  <span class="comment">//绘制温度</span></span><br><span class="line">  u8g2.setFont(u8g2_font_logisoso32_tf);</span><br><span class="line">  u8g2.setCursor(<span class="number">48</span>+<span class="number">3</span>, <span class="number">42</span>);</span><br><span class="line">  u8g2.print(degree);</span><br><span class="line">  u8g2.print(<span class="string">&quot;°C&quot;</span>);   <span class="comment">// requires enableUTF8Print()</span></span><br><span class="line">  u8g2.setFont(u8g2_font_unifont_t_chinese3);</span><br><span class="line"></span><br><span class="line">  <span class="type">u8g2_uint_t</span> strWidth = u8g2.getUTF8Width(city);</span><br><span class="line">  <span class="type">u8g2_uint_t</span> displayWidth = u8g2.getDisplayWidth();</span><br><span class="line">  </span><br><span class="line">  u8g2.setCursor(displayWidth - strWidth - <span class="number">5</span>, <span class="number">60</span>);</span><br><span class="line">  u8g2.print(city);</span><br><span class="line">  u8g2.sendBuffer();        <span class="comment">// transfer internal memory to the display</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 绘制天气符号</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">drawWeatherSymbol</span><span class="params">(<span class="type">u8g2_uint_t</span> x, <span class="type">u8g2_uint_t</span> y, <span class="type">uint8_t</span> symbol)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">// fonts used:</span></span><br><span class="line">  <span class="comment">// u8g2_font_open_iconic_embedded_6x_t</span></span><br><span class="line">  <span class="comment">// u8g2_font_open_iconic_weather_6x_t</span></span><br><span class="line">  <span class="comment">// encoding values, see: https://github.com/olikraus/u8g2/wiki/fntgrpiconic</span></span><br><span class="line">  <span class="keyword">switch</span>(symbol)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">case</span> SUN_DAY:<span class="comment">//太阳</span></span><br><span class="line">      u8g2.setFont(<span class="type">u8g2_font_open_iconic_weather_6x_t</span>);</span><br><span class="line">      u8g2.drawGlyph(x, y, <span class="number">69</span>); </span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> SUN_NIGHT:<span class="comment">//太阳</span></span><br><span class="line">      u8g2.setFont(<span class="type">u8g2_font_open_iconic_weather_6x_t</span>);</span><br><span class="line">      u8g2.drawGlyph(x, y, <span class="number">66</span>); </span><br><span class="line">      <span class="keyword">break</span>;  </span><br><span class="line">    <span class="keyword">case</span> SUN_CLOUD:<span class="comment">//晴间多云</span></span><br><span class="line">      u8g2.setFont(<span class="type">u8g2_font_open_iconic_weather_6x_t</span>);</span><br><span class="line">      u8g2.drawGlyph(x, y, <span class="number">65</span>); </span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> CLOUD:<span class="comment">//多云</span></span><br><span class="line">      u8g2.setFont(<span class="type">u8g2_font_open_iconic_weather_6x_t</span>);</span><br><span class="line">      u8g2.drawGlyph(x, y, <span class="number">64</span>); </span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> RAIN:<span class="comment">//下雨</span></span><br><span class="line">      u8g2.setFont(<span class="type">u8g2_font_open_iconic_weather_6x_t</span>);</span><br><span class="line">      u8g2.drawGlyph(x, y, <span class="number">67</span>); </span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> THUNDER:<span class="comment">//打雷</span></span><br><span class="line">      u8g2.setFont(<span class="type">u8g2_font_open_iconic_embedded_6x_t</span>);</span><br><span class="line">      u8g2.drawGlyph(x, y, <span class="number">67</span>);</span><br><span class="line">      <span class="keyword">break</span>;      </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3、WIFI小车"><a href="#3、WIFI小车" class="headerlink" title="3、WIFI小车"></a>3、WIFI小车</h2><p>相关技术点：</p><p>WebSocket Client 全双工通信</p><p>WebSocket Server 全双工通信</p><p>内容：</p><ul><li>NodeMcu作为AP。手机控制端作为STA，连接AP</li><li>NodeMcu作为WebSocketServer端，手机作为WebSocketClient端</li><li>两者建立WS通信，手机往NodeMcu发送控制命令</li><li>NodeMcu控制电机</li></ul><p>实现：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *功能：wifi小车 ESP8266</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WiFi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;WebSocketsServer.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WebServer.h&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ArduinoJson.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> AP_SSID <span class="string">&quot;WiFiCar&quot;</span> <span class="comment">//这里改成你的AP名字</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> AP_PSW  <span class="string">&quot;12345678&quot;</span> <span class="comment">//这里改成你的AP密码 8位以上</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IN1 D1 <span class="comment">// 7 6 右轮</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IN2 D2 </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IN3 D3 <span class="comment">// 5 4 左轮</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IN4 D4</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LEFT <span class="string">&quot;3&quot;</span> <span class="comment">//左转编码</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> RIGHT <span class="string">&quot;4&quot;</span><span class="comment">//右转编码</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GO <span class="string">&quot;1&quot;</span><span class="comment">//前进编码</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BACK <span class="string">&quot;2&quot;</span><span class="comment">//后退编码</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> STOP <span class="string">&quot;0&quot;</span><span class="comment">//停止编码</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> USE_SERIAL Serial</span></span><br><span class="line"></span><br><span class="line">IPAddress <span class="title function_">local_IP</span><span class="params">(<span class="number">192</span>,<span class="number">168</span>,<span class="number">4</span>,<span class="number">25</span>)</span>;</span><br><span class="line">IPAddress <span class="title function_">gateway</span><span class="params">(<span class="number">192</span>,<span class="number">168</span>,<span class="number">4</span>,<span class="number">1</span>)</span>;</span><br><span class="line">IPAddress <span class="title function_">subnet</span><span class="params">(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0</span>)</span>;</span><br><span class="line"></span><br><span class="line">WebSocketsServer webSocket = WebSocketsServer(<span class="number">81</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">initSys</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">initAP</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">initWS</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">initCar</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">stopCar</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">turnLeft</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">turnRight</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">go</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">back</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">webSocketEvent</span><span class="params">(<span class="type">uint8_t</span> num, WStype_t type, <span class="type">uint8_t</span> * payload, <span class="type">size_t</span> length)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="comment">// put your setup code here, to run once:</span></span><br><span class="line">  initSys();</span><br><span class="line">  initAP();</span><br><span class="line">  initWS();</span><br><span class="line">  initCar();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="comment">// put your main code here, to run repeatedly:</span></span><br><span class="line">  webSocket.loop();</span><br><span class="line">  <span class="comment">//喂狗</span></span><br><span class="line">  ESP.wdtFeed();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">initSys</span><span class="params">()</span>&#123;</span><br><span class="line">  USE_SERIAL.begin(<span class="number">115200</span>);</span><br><span class="line">  USE_SERIAL.println();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">initAP</span><span class="params">()</span>&#123;</span><br><span class="line">  <span class="comment">//配置AP信息</span></span><br><span class="line">  WiFi.mode(WIFI_AP);</span><br><span class="line">  WiFi.softAPConfig(local_IP, gateway, subnet);</span><br><span class="line">  boolean result = WiFi.softAP(AP_SSID, AP_PSW);</span><br><span class="line">  <span class="keyword">if</span>(!result)&#123;</span><br><span class="line">     ESP.restart();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">initWS</span><span class="params">()</span>&#123;</span><br><span class="line">   <span class="comment">// start webSocket server</span></span><br><span class="line">   webSocket.begin();</span><br><span class="line">   webSocket.onEvent(webSocketEvent);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">initCar</span><span class="params">()</span>&#123;</span><br><span class="line">  pinMode(IN1,OUTPUT);</span><br><span class="line">  pinMode(IN2,OUTPUT);</span><br><span class="line">  pinMode(IN3,OUTPUT);</span><br><span class="line">  pinMode(IN4,OUTPUT);  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">stopCar</span><span class="params">()</span>&#123;</span><br><span class="line">  <span class="comment">//默认全是低电平 停止状态</span></span><br><span class="line">  digitalWrite(IN1,LOW);      </span><br><span class="line">  digitalWrite(IN2,LOW);</span><br><span class="line">  digitalWrite(IN3,LOW);   </span><br><span class="line">  digitalWrite(IN4,LOW);  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 左转</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">turnLeft</span><span class="params">()</span>&#123;</span><br><span class="line">  digitalWrite(IN1,HIGH);      </span><br><span class="line">  digitalWrite(IN2,LOW);         <span class="comment">//右轮前进</span></span><br><span class="line">  digitalWrite(IN3,LOW);      </span><br><span class="line">  digitalWrite(IN4,LOW);         <span class="comment">//左轮不动</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 右转</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">turnRight</span><span class="params">()</span>&#123;</span><br><span class="line">  digitalWrite(IN1,LOW);      </span><br><span class="line">  digitalWrite(IN2,LOW);         <span class="comment">//右轮不动</span></span><br><span class="line">  digitalWrite(IN3,HIGH);      </span><br><span class="line">  digitalWrite(IN4,LOW);         <span class="comment">//左轮前进</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 前进</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">go</span><span class="params">()</span>&#123;</span><br><span class="line">  digitalWrite(IN1,HIGH);      </span><br><span class="line">  digitalWrite(IN2,LOW);         <span class="comment">//右轮前进</span></span><br><span class="line">  digitalWrite(IN3,HIGH);      </span><br><span class="line">  digitalWrite(IN4,LOW);         <span class="comment">//左轮前进</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 倒车</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">back</span><span class="params">()</span>&#123;</span><br><span class="line">  digitalWrite(IN1,LOW);      </span><br><span class="line">  digitalWrite(IN2,HIGH);        <span class="comment">//右轮后退</span></span><br><span class="line">  digitalWrite(IN3,LOW);      </span><br><span class="line">  digitalWrite(IN4,HIGH);        <span class="comment">//左轮后退</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">webSocketEvent</span><span class="params">(<span class="type">uint8_t</span> num, WStype_t type, <span class="type">uint8_t</span> * payload, <span class="type">size_t</span> length)</span> &#123;</span><br><span class="line">    <span class="keyword">switch</span>(type) &#123;</span><br><span class="line">        <span class="keyword">case</span> WStype_DISCONNECTED:</span><br><span class="line">            USE_SERIAL.<span class="built_in">printf</span>(<span class="string">&quot;[%u] Disconnected!\n&quot;</span>, num);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> WStype_CONNECTED: &#123;</span><br><span class="line">            IPAddress ip = webSocket.remoteIP(num);</span><br><span class="line">            USE_SERIAL.<span class="built_in">printf</span>(<span class="string">&quot;[%u] Connected from %d.%d.%d.%d url: %s\n&quot;</span>, num, ip[<span class="number">0</span>], ip[<span class="number">1</span>], ip[<span class="number">2</span>], ip[<span class="number">3</span>], payload);</span><br><span class="line">            <span class="comment">// send message to client</span></span><br><span class="line">            webSocket.sendTXT(num, <span class="string">&quot;Connected&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> WStype_TEXT:</span><br><span class="line">            USE_SERIAL.<span class="built_in">printf</span>(<span class="string">&quot;[%u] get Text: %s\n&quot;</span>, num, payload);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 缺少控制逻辑</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 嵌入式开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>墨水屏</title>
      <link href="/2021/07/23/mo-shui-ping/"/>
      <url>/2021/07/23/mo-shui-ping/</url>
      
        <content type="html"><![CDATA[<h1 id="1、背景"><a href="#1、背景" class="headerlink" title="1、背景"></a>1、背景</h1><p>咸鱼淘的，15一套，三色的18一套，兼容微雪驱动，拆机屏幕，质量的确没有微雪的屏幕好，但还够用，要及时清屏，防止有残影。<a href="https://www.waveshare.net/">微雪电子官网</a></p><p><img src="https://z3.ax1x.com/2021/07/25/WRCeKA.md.jpg" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/07/25/WRCeKA.md.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="WRCeKA.md.jpg"></p><h1 id="2、2-13寸黑白屏幕常用函数："><a href="#2、2-13寸黑白屏幕常用函数：" class="headerlink" title="2、2.13寸黑白屏幕常用函数："></a>2、2.13寸黑白屏幕常用函数：</h1><p><a href="https://imgtu.com/i/WDvGIx"><img src="https://z3.ax1x.com/2021/07/23/WDvGIx.md.jpg" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/07/23/WDvGIx.md.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="WDvGIx.md.jpg"></a></p><p>epd1in54.ino：使用Arduino IDE打开即可；<br>epd1in54.cpp(.h):是墨水屏的驱动程序；<br>epdif.cpp(.h):是硬件接口定义，里面封装了读写管脚电平，SPI传输数据，以及管脚初始化；<br>font8.cpp、font12.cpp、font16.cpp、font20.cpp、font24.cpp、fonts.h：为不同大小字符的模；<br>imagedata.cpp(.h)：是图片数据，这个可以通过Img2Lcd(在开发资料中可下载)把2位深度的BMP图片转换成数组。<br>程序分为底层硬件接口、中间层墨水屏驱动、上层应用；</p><h2 id="1、底层硬件接口："><a href="#1、底层硬件接口：" class="headerlink" title="1、底层硬件接口："></a>1、底层硬件接口：</h2><p>在epdif.cpp(.h)两个文件中定义了硬件接口，并封装好读写管脚电平、延时、SPI传输等函数。</p><p>1、写管脚电平</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">DigitalWrite</span><span class="params">(<span class="type">int</span> pin,<span class="type">int</span> value)</span></span><br></pre></td></tr></table></figure><p>2、读管脚电平</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">DigitalRead</span><span class="params">(<span class="type">int</span> pin)</span></span><br></pre></td></tr></table></figure><p>3、延时</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DelayMs(<span class="type">unsigned</span> <span class="type">int</span> delaytime)</span><br></pre></td></tr></table></figure><p>4、SPI数据输出</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SpiTransfer(<span class="type">unsigned</span> <span class="type">char</span> data)</span><br></pre></td></tr></table></figure><p>5、硬件初始化</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">IfInit</span><span class="params">(<span class="type">void</span>)</span></span><br></pre></td></tr></table></figure><h2 id="2、中间层墨水屏驱动："><a href="#2、中间层墨水屏驱动：" class="headerlink" title="2、中间层墨水屏驱动："></a>2、中间层墨水屏驱动：</h2><p>1、实例化墨水屏</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Epd epd;</span><br></pre></td></tr></table></figure><p>2、墨水屏初始化，再屏幕开始工作时和退出睡眠模式之后调用<br>1.54inch e-Paper、1.54inch e-Paper V2、2.13inch e-Paper、2.13inch e-Paper V2、2.13inch e-Paper (D)、2.9inch e-Paper、2.9inch e-Paper (D)</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">epd.Init(lut_full_update); <span class="comment">//全刷初始化</span></span><br><span class="line">epd.Init(lut_partial_update); <span class="comment">//局刷初始化</span></span><br></pre></td></tr></table></figure><p>其他型号</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">epd.Init();</span><br></pre></td></tr></table></figure><p>3、清屏，把墨水屏刷成白色</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">epd.clear();</span><br></pre></td></tr></table></figure><p>可能某些程序里面会被拆分成两句，但是他们最终的效果都是一样的：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">epd.ClearFrameMemory(<span class="number">0xFF</span>); </span><br><span class="line">epd.DisplayFrame();<span class="comment">//打开显示</span></span><br></pre></td></tr></table></figure><p>4、传输一帧的图片数据并显示</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">Display</span><span class="params">(<span class="type">const</span> <span class="type">unsigned</span> <span class="type">char</span>* frame_buffer)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">DisplayFrame</span><span class="params">(<span class="type">const</span> <span class="type">unsigned</span> <span class="type">char</span>* frame_buffer_black, <span class="type">const</span> <span class="type">unsigned</span> <span class="type">char</span>* frame_buffer_red)</span>; <span class="comment">//三色屏幕</span></span><br></pre></td></tr></table></figure><p>5、睡眠</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">epd.Sleep();</span><br></pre></td></tr></table></figure><p>进入睡眠模式，墨水屏讲进入超低耗电，如果长时间不用需要刷白保存，否则长时间会有残影。</p><h2 id="3、上层应用："><a href="#3、上层应用：" class="headerlink" title="3、上层应用："></a>3、上层应用：</h2><p>上层应用也就是我们的需要用墨水屏实现的功能，一般就是画图、字符等功能，也就是epdpaint.cpp里面定义的功能<br>首先需要讲解一下缓存的坐标系，为了传输方便通常吧坐上定位原点，往右X轴增加，往下Y轴增加。只需要看public下函数即可。<br>1、初始化图片缓存</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Paint(<span class="type">unsigned</span> <span class="type">char</span>* image, <span class="type">int</span> width, <span class="type">int</span> height);</span><br></pre></td></tr></table></figure><p>第一个参数是图片缓存，第二个参数是定义图片长度，第三个参数定义图片高度，你可能会在程序中看到如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Paint <span class="title function_">paint</span><span class="params">(image, <span class="number">0</span>, <span class="number">0</span>)</span>;    <span class="comment">// width should be the multiple of 8</span></span><br></pre></td></tr></table></figure><p>第二、三个参数这里设置成0，是因为下面还可以设置。<br>2、设置高宽、获取高宽、设置翻转角度、获取翻转角度</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>  <span class="title function_">GetWidth</span><span class="params">(<span class="type">void</span>)</span>; <span class="comment">//得到宽度</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">SetWidth</span><span class="params">(<span class="type">int</span> width)</span>;<span class="comment">//设置宽度</span></span><br><span class="line"><span class="type">int</span>  <span class="title function_">GetHeight</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//得到高度</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">SetHeight</span><span class="params">(<span class="type">int</span> height)</span>;<span class="comment">//设置高度</span></span><br><span class="line"><span class="type">int</span>  <span class="title function_">GetRotate</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//得到翻转角度</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">SetRotate</span><span class="params">(<span class="type">int</span> rotate)</span>;<span class="comment">//设置翻转角度</span></span><br><span class="line">···</span><br><span class="line"><span class="number">3</span>、获取图像缓存</span><br><span class="line">```c</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span>* <span class="title function_">GetImage</span><span class="params">(<span class="type">void</span>)</span>;</span><br></pre></td></tr></table></figure><p>4、画点</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">DrawPixel</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y, <span class="type">int</span> colored)</span>;</span><br></pre></td></tr></table></figure><p>在坐标(x,y)<br>5、写字符</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">DrawCharAt</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y, <span class="type">char</span> ascii_char, sFONT* font, <span class="type">int</span> colored)</span>;</span><br></pre></td></tr></table></figure><p>在（x,y）这一点为左顶点写字符ascii_char，字体大小为font，颜色为colored<br>6、写字符串</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">DrawStringAt</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y, <span class="type">const</span> <span class="type">char</span>* text, sFONT* font, <span class="type">int</span> colored)</span>;</span><br></pre></td></tr></table></figure><p>在（x,y）这一点为左顶点写字符串text，字体大小为font，颜色为colored<br>7、画线</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">DrawLine</span><span class="params">(<span class="type">int</span> x0, <span class="type">int</span> y0, <span class="type">int</span> x1, <span class="type">int</span> y1, <span class="type">int</span> colored)</span>;</span><br></pre></td></tr></table></figure><p>以（x0,y0）为起点，（x1,y1）为终点画一条线，斜率任意；<br>8、画横线</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">DrawHorizontalLine</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y, <span class="type">int</span> width, <span class="type">int</span> colored)</span>;</span><br></pre></td></tr></table></figure><p>以（x0,y0）为起点，（x1,y1）为终点画一条横线，速度比DrawLine()快<br>9、画竖线</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">DrawVerticalLine</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y, <span class="type">int</span> height, <span class="type">int</span> colored)</span>;</span><br></pre></td></tr></table></figure><p>以（x0,y0）为起点，（x1,y1）为终点画一条竖线，速度比DrawLine()快<br>10、矩形，画空心框</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">DrawRectangle</span><span class="params">(<span class="type">int</span> x0, <span class="type">int</span> y0, <span class="type">int</span> x1, <span class="type">int</span> y1, <span class="type">int</span> colored)</span>;</span><br></pre></td></tr></table></figure><p>以（x0,y0）为起点，（x1,y1）为终点画一个框，边的颜色为colored<br>11、填充矩形，画实心框</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">DrawFilledRectangle</span><span class="params">(<span class="type">int</span> x0, <span class="type">int</span> y0, <span class="type">int</span> x1, <span class="type">int</span> y1, <span class="type">int</span> colored)</span>;</span><br></pre></td></tr></table></figure><p>以（x0,y0）为起点，（x1,y1）为终点画一个框，并且内部填充，颜色为colored<br>12、画空心圆</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">DrawCircle</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y, <span class="type">int</span> radius, <span class="type">int</span> colored)</span>;</span><br></pre></td></tr></table></figure><p>以（x,y）为圆心，radius为半斤画一个空心圆，颜色为colored<br>13、实心圆</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">DrawFilledCircle</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y, <span class="type">int</span> radius, <span class="type">int</span> colored)</span>;</span><br></pre></td></tr></table></figure><p>以（x,y）为圆心，radius为半斤画一个实心心圆，颜色为colored</p><h1 id="3、PS制作散点图"><a href="#3、PS制作散点图" class="headerlink" title="3、PS制作散点图"></a>3、PS制作散点图</h1><p>取模，2.13寸三色墨水屏（不兼容微雪的程序，但可参考）<a href="https://www.waveshare.net/wiki/2.13inch_e-Paper_HAT_(B)">微雪：2.13inch e-Paper HAT (B)</a></p><p>图片素材制作：首先用PS制作三色散点图，然后用PS将三色（黑白红）分两类，一张黑白，一张红白（使用PS吸管工具颜色替换，先将三色图中红色替换为白色，制成黑白图片；再将三色图中黑色替换为白色）实际上三色墨水屏是通过两张图片叠加而成的。<br>[<img src="https://z3.ax1x.com/2021/07/25/WRpUQs.md.jpg" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/07/25/WRpUQs.md.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="WRpUQs.md.jpg"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 嵌入式开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>APM28四旋翼装机</title>
      <link href="/2021/07/07/apm28-si-xuan-yi-zhuang-ji/"/>
      <url>/2021/07/07/apm28-si-xuan-yi-zhuang-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="1、基本装机和调试"><a href="#1、基本装机和调试" class="headerlink" title="1、基本装机和调试"></a>1、基本装机和调试</h1><pre><code>1. 安装APM的地面站；1. 飞控连接电脑，GPS与接收机连接飞控；1. 地面站点击连接，第一步校准加速度计，按照要求一步一步摆放飞控位置；1. 罗盘校准：点击地面站罗盘校准，移动GPS位置，使之全部校准完毕；1. 遥控器校准；1. 飞行模式设置，一般就要自稳，定点，定高..1. APM解锁检查，左摇杆右下角3秒解锁，左下角3秒上锁；1. 装机：四轴电调信号线，右上角机架为1通道，对角为2通道，左上角为3通道，对角为4通道；1. APM失控保护设置。</code></pre><p><a href="https://imgtu.com/i/RbbUlq"><img src="https://z3.ax1x.com/2021/07/07/RbbUlq.md.jpg" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/07/07/RbbUlq.md.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="RbbUlq.md.jpg"></a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 航模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通信课设--基于STM32与OneNet的温室大棚</title>
      <link href="/2021/06/03/tong-xin-ke-she-ji-yu-stm32-yu-onenet-de-wen-shi-da-peng/"/>
      <url>/2021/06/03/tong-xin-ke-she-ji-yu-stm32-yu-onenet-de-wen-shi-da-peng/</url>
      
        <content type="html"><![CDATA[<p>​通信课设终于做完了（智能温室大棚）</p><p><a href="https://imgtu.com/i/288AA0"><img src="https://z3.ax1x.com/2021/06/03/288AA0.md.png" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/06/03/288AA0.md.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="288AA0.md.png"></a></p><p>​简要记述一下：</p><p>​用原子的精英版相关例程组合形成本地端界面，主要包括LCD字符显示，中文字库显示，DHT11传感器的库（其中DHT11的信号重点看了一下，其中有一个传感器检测的信号，判断连接是否正确），还有就是YL69土壤湿度传感器和光敏电阻传感器，这两个使用的是ADC采集，STM32ZET6内部集成了3个ADC：注意一下相关ADC的使能和通道的启用，避免冲突，选择合适的ADC通道（这个地方卡了一段时间）。</p><p><a href="https://imgtu.com/i/28JU0A"><img src="https://z3.ax1x.com/2021/06/03/28JU0A.md.png" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/06/03/28JU0A.md.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="28JU0A.md.png"></a></p><p>还有注意一下引入硬件库时，记得要在MDK“小魔术棒”的C++里添加相关文件的路径，要不会报错。传感器采集正常后，我的强迫症又犯了，花了一部分时间在设计界面上，接下来就是添加了阈值设置与相关控制器的开启与关闭，充分的利用了精英版上的个实体按键（复位按键不能用），也不用外接按键了。</p><p>​接下来就是网络部分，采用正点原子的esp8266模块（一开始用的时01s,感觉不太好调，其实也是能用的），参考了中国移动onenet出的一部分MQTT部分程序，挺好用的，精英版的串口1用来调试，串口2用来和8266进行串口通信，发送AT指令。服务器用的emqx(杭州营映云科技)免费的在线MQTT 5服务器，网络调试使用的时电脑端：MQTT.fx,后来因为没有时间做小程序了，改用了APP Store的一个叫MQTTool的手机端网络调试器，也算是手机小程序了吧。。。（小程序接下来要继续做的话准备使用mpvue.com的快速框架，使用VScode进行开发，微信开发者工具作为调试端，下载快速框架是时遇到点问题还没有及时解决）。</p><p>​连接服务器后，就要订阅和上传数据，上传数据很好解决，订阅，数据下行使用了JSON的格式数据进行传输解析的，速度很快，虽然代码变多了。主要时51假期期间搞了几天，基本上就是这样了，然后为了解决刚开机就连服务器导致本地端数据卡住的问题，使用了最后一个按键—–板子上的触摸按键，作为连接服务器的开关，使得刚开机进入本地模式，要想连接服务器再按一下触摸开关，同时，我把串口调试的输出信息放在了LCD下面的剩余空间处，便于脱机运行时出现问题的及时分析。大概就做成了这样。</p><p>​接下来主要就是帮同学做了，主要使用的点灯科技开发文档，直接用，复制到他们的项目上，很好用，还能连接小爱同学语音训练，就是有个同学的51单片机串口通信那块没做好，现学得得51串口通信，可是它原有的串口被当作普通IO口用了，重新定义还会和之前它使用的寄存器初值冲突，总之不太好改，最后只做了8266与服务器端的数据上传，无法从51串口实时获取采集的数据。。。我那课设放了一个多月，再拿出来后，数据下发不了了，查了很多原因，一直以为是我程序写的过于臃肿，加上服务器的延时，导致程序进不去，一直在调延时时间，一直不好用，卡了我两天，最后才发现，是我加入触摸连接服务器后形成了先订阅，后连接的错误顺序，总之一个很低级的问题。。。卡了我两天。</p><p>​在当天快要答辩时，受学姐相关实验课的启发，我想，掏出我的古董树莓派，自己搭一个MQTT的服务器，不用公共或者买的服务器，兴许还能多加点分，调了2个多小时，调出来了，拿去实验室时虽然连接上了，但是显示端口被占用，应该是我之前开了一个端口忘关了，开了其他的端口，后来还是可以用的，但答辩时还是用的公共服务器。。。</p><p>​就这么多，只有动手去做了，才会发现，原来问题那么多，不过会被解决的，也算是一次经验吧。其他的细节暂时想不起来了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 项目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STC51</title>
      <link href="/2021/04/05/stc51/"/>
      <url>/2021/04/05/stc51/</url>
      
        <content type="html"><![CDATA[<h1 id="1、硬件-BST-M51"><a href="#1、硬件-BST-M51" class="headerlink" title="1、硬件(BST-M51)"></a>1、硬件(BST-M51)</h1><h2 id="1、51最小系统"><a href="#1、51最小系统" class="headerlink" title="1、51最小系统"></a>1、51最小系统</h2><p>​<a href="https://imgtu.com/i/cQwm6A"><img src="https://z3.ax1x.com/2021/04/05/cQwm6A.png" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/04/05/cQwm6A.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="cQwm6A.png"></a></p><h2 id="2、流水灯"><a href="#2、流水灯" class="headerlink" title="2、流水灯"></a>2、流水灯</h2><p><a href="https://imgtu.com/i/cQwM0P"><img src="https://z3.ax1x.com/2021/04/05/cQwM0P.png" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/04/05/cQwM0P.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="cQwM0P.png"></a></p><h2 id="3、CH340烧录模块"><a href="#3、CH340烧录模块" class="headerlink" title="3、CH340烧录模块"></a>3、CH340烧录模块</h2><p><a href="https://imgtu.com/i/cQw1k8"><img src="https://z3.ax1x.com/2021/04/05/cQw1k8.png" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/04/05/cQw1k8.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="cQw1k8.png"></a></p><h2 id="4、USB供电"><a href="#4、USB供电" class="headerlink" title="4、USB供电"></a>4、USB供电</h2><p><a href="https://imgtu.com/i/cQwYlj"><img src="https://z3.ax1x.com/2021/04/05/cQwYlj.png" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/04/05/cQwYlj.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="cQwYlj.png"></a></p><h2 id="5、数码管、WIFI、红外发送模块"><a href="#5、数码管、WIFI、红外发送模块" class="headerlink" title="5、数码管、WIFI、红外发送模块"></a>5、数码管、WIFI、红外发送模块</h2><p><a href="https://imgtu.com/i/cQwHcd"><img src="https://z3.ax1x.com/2021/04/05/cQwHcd.md.png" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/04/05/cQwHcd.md.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="cQwHcd.md.png"></a></p><h2 id="6、红外接收、蜂鸣器、4位按键"><a href="#6、红外接收、蜂鸣器、4位按键" class="headerlink" title="6、红外接收、蜂鸣器、4位按键"></a>6、红外接收、蜂鸣器、4位按键</h2><p><a href="https://imgtu.com/i/cQwz4S"><img src="https://z3.ax1x.com/2021/04/05/cQwz4S.png" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/04/05/cQwz4S.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="cQwz4S.png"></a></p><h2 id="7、温度传感器"><a href="#7、温度传感器" class="headerlink" title="7、温度传感器"></a>7、温度传感器</h2><p><a href="https://imgtu.com/i/cQ0kBq"><img src="https://z3.ax1x.com/2021/04/05/cQ0kBq.png" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/04/05/cQ0kBq.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="cQ0kBq.png"></a></p><h2 id="8、复位电路"><a href="#8、复位电路" class="headerlink" title="8、复位电路"></a>8、复位电路</h2><p><a href="https://imgtu.com/i/cQ0nCF"><img src="https://z3.ax1x.com/2021/04/05/cQ0nCF.png" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/04/05/cQ0nCF.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="cQ0nCF.png"></a></p><h2 id="9、供电"><a href="#9、供电" class="headerlink" title="9、供电"></a>9、供电</h2><p><a href="https://imgtu.com/i/cQ01D1"><img src="https://z3.ax1x.com/2021/04/05/cQ01D1.png" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/04/05/cQ01D1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="cQ01D1.png"></a></p><h1 id="2、示例代码"><a href="#2、示例代码" class="headerlink" title="2、示例代码"></a>2、示例代码</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/***************************</span></span><br><span class="line"><span class="comment">1、51单片机点灯(IO口控制）</span></span><br><span class="line"><span class="comment">****************************/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;reg52.h&quot;</span><span class="comment">//&lt;reg52.h&gt;在当前工程文件夹下搜索；“reg52.h&quot;先在当前工程文件夹下搜索，没有则到软件安装目录找</span></span></span><br><span class="line">sbit led1 = P1^<span class="number">0</span>;<span class="comment">//P1口最低位；sfr P0 = 0X80;(寄存器重命名）；sbit CY = PSW^7 （PSW最高位重命名）   </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">led1 = <span class="number">0</span>;<span class="comment">//3~20mA</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/***************************</span></span><br><span class="line"><span class="comment">2、51单片机点灯(总线操作法）</span></span><br><span class="line"><span class="comment">****************************/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;reg52.h&quot;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">P1 = <span class="number">0</span>;<span class="comment">//0xaa = 10101010 = 170</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/***************************</span></span><br><span class="line"><span class="comment">3、延时语句精确计算</span></span><br><span class="line"><span class="comment">****************************/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;reg52.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> uint unsigned int<span class="comment">//#define 宏定义（#define 新名称 原内容）只能定义一次</span></span></span><br><span class="line">sbit led1 = P1^<span class="number">0</span>;</span><br><span class="line">uint i,j;</span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">led1 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1000</span>;i&gt;<span class="number">0</span>;i--)</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">110</span>;j&gt;<span class="number">0</span>;j--);</span><br><span class="line">led1 = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1000</span>;i&gt;<span class="number">0</span>;i--)</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">110</span>;j&gt;<span class="number">0</span>;j--);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/****************************</span></span><br><span class="line"><span class="comment">4、带参数函数写法及调用</span></span><br><span class="line"><span class="comment">*****************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">delayms</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> xms)</span></span><br><span class="line">&#123;</span><br><span class="line">uint i,j;</span><br><span class="line"><span class="keyword">for</span>(i=xms;i&gt;<span class="number">0</span>;i--)</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">110</span>;j&gt;<span class="number">0</span>;j--);<span class="comment">//i=xms即延时xms毫秒</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*****************************</span></span><br><span class="line"><span class="comment">5、利用C51库函数实现流水灯（leil\C51\HIP\C51Lib）</span></span><br><span class="line"><span class="comment">*******************************/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;intrins.h&gt;</span></span></span><br><span class="line">_cro_(aa,<span class="number">1</span>);<span class="comment">//将aa循环左移1位 </span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*******************************</span></span><br><span class="line"><span class="comment">6、数码管静态显示，BST51第一个数码管显示字符“b”（共阴数码管）</span></span><br><span class="line"><span class="comment">********************************/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;reg52.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> duan P0</span></span><br><span class="line">sbit wei1 = P2^<span class="number">4</span>;<span class="comment">//定义第一位数码管</span></span><br><span class="line">sbit wei2 = P2^<span class="number">5</span>;<span class="comment">//定义第二位数码管</span></span><br><span class="line">sbit wei3 = P2^<span class="number">6</span>;<span class="comment">//定义第三位数码管</span></span><br><span class="line">sbit wei4 = P2^<span class="number">7</span>;<span class="comment">//定义第四位数码管</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">wei1 = <span class="number">1</span>;</span><br><span class="line">wei2 = <span class="number">0</span>;</span><br><span class="line">wei3 = <span class="number">0</span>;</span><br><span class="line">wei4 = <span class="number">0</span>;</span><br><span class="line">duan = <span class="number">0x7c</span>;</span><br><span class="line">    <span class="comment">//0111 1100 &quot;b&quot;0x3f , 0x06 , 0x5b , 0x4f , 0x66 , 0x6d ,0x7d , 0x07 , 0x7f , 0x6f , 0x77 , 0x7c ,</span></span><br><span class="line"><span class="comment">//0x39 , 0x5e , 0x79 , 0x71 , 0x00（0，1，2，3，4，5，6，7，8，9，A,B,C,D,E,F,不显示）</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/***********补充************************</span></span><br><span class="line"><span class="comment">unsigned char code table[]=&#123;</span></span><br><span class="line"><span class="comment">0x3f , 0x06 , 0x5b , 0x4f ,</span></span><br><span class="line"><span class="comment">0x66 , 0x6d ,0x7d , 0x07 , </span></span><br><span class="line"><span class="comment">0x7f , 0x6f , 0x77 , 0x7c ,</span></span><br><span class="line"><span class="comment">0x39 , 0x5e , 0x79 , 0x71 , 0x00&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">//table[0] = 0x3f</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**************************************</span></span><br><span class="line"><span class="comment">7、74HC573锁存器 段选、位选（数码管静态显示）（共阴数码管）第一个数码管显示字符“8”</span></span><br><span class="line"><span class="comment">74H573锁存器：20引脚，-OE脚：三态允许控制端（低电平有效）（即输出使能端）</span></span><br><span class="line"><span class="comment">  INPUTS   OUTPUT 1D~8D：数据输入端；1Q~8Q;数据输出端</span></span><br><span class="line"><span class="comment">-OELED Q     LE：锁存允许端（锁存控制端）</span></span><br><span class="line"><span class="comment"> L HH H</span></span><br><span class="line"><span class="comment"> L HL L</span></span><br><span class="line"><span class="comment"> L L  X    Q0（上一次的数据状态）</span></span><br><span class="line"><span class="comment"> H   X  X    Z（高阻态）</span></span><br><span class="line"><span class="comment"> (真值表)</span></span><br><span class="line"><span class="comment">***************************************/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;reg52.h&quot;</span></span></span><br><span class="line">sbit duan = P2^<span class="number">6</span>;<span class="comment">//申明U1锁存器的锁存端</span></span><br><span class="line">sbit wela = P2^<span class="number">7</span>;<span class="comment">//申明U2锁存器的锁存端</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">wela = <span class="number">1</span>;<span class="comment">//打开U2锁存器</span></span><br><span class="line">P0 = <span class="number">0xFE</span>;<span class="comment">//送入位选信号11111110</span></span><br><span class="line">wela = <span class="number">0</span>;<span class="comment">//关闭U2锁存端（Q0）</span></span><br><span class="line"></span><br><span class="line">duan = <span class="number">1</span>;<span class="comment">//打开U1锁存器</span></span><br><span class="line">P0 = <span class="number">0x7F</span>;<span class="comment">//送入段选信号01111111</span></span><br><span class="line">duan = <span class="number">0</span>;<span class="comment">//关闭U1锁存器（Q0）</span></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>);<span class="comment">//程序停在这里</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*************补充***************************</span></span><br><span class="line"><span class="comment">6个数码管同时点亮，依次显示0~F，时间间隔为0.5s，循环下去</span></span><br><span class="line"><span class="comment">void main()</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">wela = 1;//打开U2锁存器</span></span><br><span class="line"><span class="comment">P0 = 0xc0;//送入位选信号11000000</span></span><br><span class="line"><span class="comment">wela = 0;//关闭U2锁存端（Q0）</span></span><br><span class="line"><span class="comment">while(1)</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">for(num=0;num&lt;16;num++)</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">duan = 1;//打开U1锁存器</span></span><br><span class="line"><span class="comment">P0 = table[num];//送入段选信号</span></span><br><span class="line"><span class="comment">duan = 0;//关闭U1锁存端</span></span><br><span class="line"><span class="comment">delayms(500);//延时0.5秒</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/********************************************</span></span><br><span class="line"><span class="comment">8、数码管动态显示（逐渐缩短延时时长，则同时显示）（实际上是轮流显示的）</span></span><br><span class="line"><span class="comment">*********************************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">duan = <span class="number">1</span>;</span><br><span class="line">P0 = table[<span class="number">1</span>];<span class="comment">//送段选信号</span></span><br><span class="line">duan = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">P0 = <span class="number">0xff</span>;<span class="comment">//11111111送位选数据前关闭所有显示，防止打开位选锁存时(消影）</span></span><br><span class="line"><span class="comment">//原来段选数据通过位选锁存器造成混乱</span></span><br><span class="line">wela = <span class="number">1</span>;<span class="comment">//11111110送位选数据</span></span><br><span class="line">P0 = <span class="number">0xfe</span>;</span><br><span class="line">wela = <span class="number">0</span>;</span><br><span class="line">delayms(<span class="number">500</span>);</span><br><span class="line"></span><br><span class="line">duan = <span class="number">1</span>;</span><br><span class="line">P0 = table[<span class="number">2</span>];</span><br><span class="line">duan = <span class="number">0</span>;</span><br><span class="line">P0 = <span class="number">0xff</span>;</span><br><span class="line">wela = <span class="number">1</span>;</span><br><span class="line">P0 = <span class="number">0xfd</span>;<span class="comment">//11111101送位选数据</span></span><br><span class="line">wela = <span class="number">0</span>;</span><br><span class="line">delayms(<span class="number">500</span>);</span><br><span class="line"></span><br><span class="line">duan = <span class="number">1</span>;</span><br><span class="line">P0 = table[<span class="number">3</span>];</span><br><span class="line">duan = <span class="number">0</span>;</span><br><span class="line">P0 = <span class="number">0xff</span>;</span><br><span class="line">wela = <span class="number">1</span>;</span><br><span class="line">P0 = <span class="number">0xfb</span>;<span class="comment">//11111011送位选数据</span></span><br><span class="line">wela = <span class="number">0</span>;</span><br><span class="line">delayms(<span class="number">500</span>);</span><br><span class="line"></span><br><span class="line">duan = <span class="number">1</span>;</span><br><span class="line">P0 = table[<span class="number">4</span>];</span><br><span class="line">duan = <span class="number">0</span>;</span><br><span class="line">P0 = <span class="number">0xff</span>;</span><br><span class="line">wela = <span class="number">1</span>;</span><br><span class="line">P0 = <span class="number">0xff</span>;<span class="comment">//11110111送位选数据</span></span><br><span class="line">wela = <span class="number">0</span>;</span><br><span class="line">delayms(<span class="number">500</span>);</span><br><span class="line"></span><br><span class="line">duan = <span class="number">1</span>;</span><br><span class="line">P0 = table[<span class="number">5</span>];</span><br><span class="line">duan = <span class="number">0</span>;</span><br><span class="line">P0 = <span class="number">0xff</span>;</span><br><span class="line">wela = <span class="number">1</span>;</span><br><span class="line">P0 = <span class="number">0xef</span>;<span class="comment">//11101111送位选数据</span></span><br><span class="line">wela = <span class="number">0</span>;</span><br><span class="line">delayms(<span class="number">500</span>);</span><br><span class="line"></span><br><span class="line">duan = <span class="number">1</span>;</span><br><span class="line">P0 = table[<span class="number">6</span>];</span><br><span class="line">duan = <span class="number">0</span>;</span><br><span class="line">P0 = <span class="number">0xff</span>;</span><br><span class="line">wela = <span class="number">1</span>;</span><br><span class="line">P0 = <span class="number">0xdf</span>;<span class="comment">//11011111送位选数据</span></span><br><span class="line">wela = <span class="number">0</span>;</span><br><span class="line">delayms(<span class="number">500</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**************************************************</span></span><br><span class="line"><span class="comment">*实验名：数码管动态显示（逐渐缩短延时时长，则同时显示）（实际上是轮流显示的）</span></span><br><span class="line"><span class="comment">***************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;reg52.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> duan P0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> uchar unsigned char </span></span><br><span class="line">sbit wei1 = P2^<span class="number">4</span>;<span class="comment">//定义第一位数码管</span></span><br><span class="line">sbit wei2 = P2^<span class="number">5</span>;<span class="comment">//定义第二位数码管</span></span><br><span class="line">sbit wei3 = P2^<span class="number">6</span>;<span class="comment">//定义第三位数码管</span></span><br><span class="line">sbit wei4 = P2^<span class="number">7</span>;<span class="comment">//定义第四位数码管</span></span><br><span class="line"></span><br><span class="line">uchar code sz[]=&#123;<span class="number">0x3f</span> , <span class="number">0x06</span> , <span class="number">0x5b</span> ,<span class="number">0x4f</span> , <span class="number">0x66</span> , <span class="number">0x6d</span> ,<span class="number">0x7d</span> ,</span><br><span class="line"><span class="number">0x07</span> , <span class="number">0x7f</span> , <span class="number">0x6f</span> ,<span class="number">0x77</span> , <span class="number">0x7c</span> , <span class="number">0x39</span> , <span class="number">0x5e</span> , <span class="number">0x79</span> , <span class="number">0x71</span> , <span class="number">0x00</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> xms)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> i,j;</span><br><span class="line"><span class="keyword">for</span>(i=xms;i&gt;<span class="number">0</span>;i--)      <span class="comment">//i=xms即延时约xms毫秒</span></span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">112</span>;j&gt;<span class="number">0</span>;j--);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">   &#123;</span><br><span class="line">   duan = sz[<span class="number">4</span>];</span><br><span class="line">wei1 = <span class="number">0</span>;</span><br><span class="line">wei2 = <span class="number">0</span>;</span><br><span class="line">wei3 = <span class="number">0</span>;</span><br><span class="line">wei4 = <span class="number">1</span>;</span><br><span class="line">delay(<span class="number">1000</span>);</span><br><span class="line">duan = sz[<span class="number">3</span>];</span><br><span class="line">wei1 = <span class="number">0</span>;</span><br><span class="line">wei2 = <span class="number">0</span>;</span><br><span class="line">wei3 = <span class="number">1</span>;</span><br><span class="line">wei4 = <span class="number">0</span>;</span><br><span class="line">delay(<span class="number">1000</span>);</span><br><span class="line">duan = sz[<span class="number">2</span>];</span><br><span class="line">wei1 = <span class="number">0</span>;</span><br><span class="line">wei2 = <span class="number">1</span>;</span><br><span class="line">wei3 = <span class="number">0</span>;</span><br><span class="line">wei4 = <span class="number">0</span>;</span><br><span class="line">delay(<span class="number">1000</span>);</span><br><span class="line">duan = sz[<span class="number">1</span>];</span><br><span class="line">wei1 = <span class="number">1</span>;</span><br><span class="line">wei2 = <span class="number">0</span>;</span><br><span class="line">wei3 = <span class="number">0</span>;</span><br><span class="line">wei4 = <span class="number">0</span>;</span><br><span class="line">delay(<span class="number">1000</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="3、中断"><a href="#3、中断" class="headerlink" title="3、中断"></a>3、中断</h1><p><a href="https://imgtu.com/i/cGZAG6"><img src="https://z3.ax1x.com/2021/04/07/cGZAG6.png" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/04/07/cGZAG6.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="cGZAG6.png"></a></p><h2 id="1、中断源-中断嵌套，中断优先级"><a href="#1、中断源-中断嵌套，中断优先级" class="headerlink" title="1、中断源(中断嵌套，中断优先级)"></a>1、中断源(中断嵌套，中断优先级)</h2><p>​51有5个，52有6个（多一个T2定时器&#x2F;计数器2）；</p><p>​默认优先级（由高到低）：</p><ol><li><strong>INT0</strong>——外部中断0，P3.2口，低电平或下降沿引起（序号：0；入口地址：0003H）；</li><li><strong>INT1</strong>——外部中断1，P3.3口，低电平或下降沿引起（序号：1；入口地址：000BH）；</li><li><strong>T0</strong>——定时器&#x2F;计数器0中断，由T0计数器计满回零引起（序号：2；入口地址：0013H）；</li><li><strong>T1</strong>——定时器&#x2F;计数器1中断，由T1计数器计满回零引起（序号：3；入口地址：001BH）；</li><li><strong>T2</strong>——定时器&#x2F;计数器2中断，由T2计数器计满回零引起（序号：4；入口地址：0023H）；</li><li><strong>TI&#x2F;IR</strong>——串行口中断，串行端口完成一帧字符发送&#x2F;接收后引起（序号：5；入口地址：002BH）；</li></ol><h2 id="2、中断允许寄存器IE："><a href="#2、中断允许寄存器IE：" class="headerlink" title="2、中断允许寄存器IE："></a>2、中断允许寄存器IE：</h2><p>​设定各个中断源的打开和关闭，是特殊功能寄存器，字节地址：A8H，位地址：A8H~AFH，可进行位寻址（即可对寄存器的每一位进行单独操作，复位时，IE全被清零。</p><p><a href="https://imgtu.com/i/cGnTS0"><img src="https://z3.ax1x.com/2021/04/07/cGnTS0.md.png" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/04/07/cGnTS0.md.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="cGnTS0.md.png"></a></p><p><strong>EA</strong>：全局中断允许位；</p><p>**–**：无效位；</p><p><strong>ET2</strong>：定时器&#x2F;计数器2中断允许位（为1时打开，为0时关闭）；</p><p><strong>ES</strong>:串行口中断允许位；</p><p><strong>ET1</strong>：定时器&#x2F;计数器1中断允许位；</p><p><strong>EX1</strong>：外部中断1中断允许位；</p><p><strong>ET0</strong>：定时器&#x2F;计数器0中断允许位；</p><p><strong>EX0</strong>：外部中断0中断允许位。</p><h2 id="3、中断优先级寄存器IP："><a href="#3、中断优先级寄存器IP：" class="headerlink" title="3、中断优先级寄存器IP："></a>3、中断优先级寄存器IP：</h2><p>特殊功能寄存器，B8H~BFH。可位寻址，复位时，全清零</p><p><a href="https://imgtu.com/i/cGug91"><img src="https://z3.ax1x.com/2021/04/07/cGug91.md.png" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/04/07/cGug91.md.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="cGug91.md.png"></a></p><p>**–**：无效位；</p><p><strong>PS</strong>：串行口中断优先级控制位（为1定义为高优先级中断）；</p><p><strong>PT1</strong>：定时器&#x2F;计数器1中断优先级控制位；</p><p><strong>PX1</strong>：外部中断1中断优先级控制位；</p><p><strong>PT0</strong>：定时器&#x2F;计数器0中断优先级控制位；</p><p><strong>PX0</strong>：外部中断0中断优先级控制位；</p><p>按优先级可形成中断嵌套。</p><h2 id="4、单片机的定时器中断"><a href="#4、单片机的定时器中断" class="headerlink" title="4、单片机的定时器中断"></a>4、单片机的定时器中断</h2><p>​定时器&#x2F;计数器实质是加1计数器（16位），由高8位和低8位两个寄存器组成：TMOD(定时器&#x2F;计数器工作方式寄存器)</p><p>TCON（控制寄存器，控制T0、T1的启动停止及设置溢出标志）</p><p><a href="https://imgtu.com/i/cGMmsf"><img src="https://z3.ax1x.com/2021/04/07/cGMmsf.md.png" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/04/07/cGMmsf.md.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="cGMmsf.md.png"></a></p><p>加1计数器输入计数脉冲两个来源；由系统的时钟振荡器输出脉冲经12分频后送来；T0或T1引脚输入的外部脉冲源，每来一个脉冲计数器加1，加到全1时，在输入一个脉冲，计数器回零，且计数器的溢出使TCON寄存器中TF0或TF1置1，向CPU发送中断请求（定时器&#x2F;计数器中断允许时）</p><h2 id="5、定时器-计数器工作方式寄存器TMOD"><a href="#5、定时器-计数器工作方式寄存器TMOD" class="headerlink" title="5、定时器&#x2F;计数器工作方式寄存器TMOD"></a>5、定时器&#x2F;计数器工作方式寄存器TMOD</h2><p>​字节地址：89H，不能位寻址，用来确定定时器的工作方式及功能选择，复位时全清零</p><p><a href="https://imgtu.com/i/cUZZHU"><img src="https://z3.ax1x.com/2021/04/09/cUZZHU.md.png" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/04/09/cUZZHU.md.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="cUZZHU.md.png"></a></p><p>TMOD高四位设置定时器1，低四位用于设置定时器0；</p><p><strong>GATE</strong>:门控制位</p><p>GATE&#x3D;0,定时器&#x2F;计数器启动与停止仅受TCON寄存器中的TRX（X&#x3D;0,1)来控制；</p><p>GATE&#x3D;1，定时器&#x2F;计数器启动与停止由TCON寄存器中TRX和外部中断引脚（INT0或INT1）上的电平状态来共同控制。</p><p><strong>C&#x2F;T</strong>:定时器模式（&#x3D;0）和计数器模式（&#x3D;1）选择位；</p><p><strong>M1M0</strong>:工作方式选择位</p><p>（每个定时器&#x2F;计数器都有4种工作方式）</p><p><a href="https://imgtu.com/i/cUeNLV"><img src="https://z3.ax1x.com/2021/04/09/cUeNLV.md.png" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/04/09/cUeNLV.md.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="cUeNLV.md.png"></a></p><h2 id="6、定时器-计数器控制寄存器TCON"><a href="#6、定时器-计数器控制寄存器TCON" class="headerlink" title="6、定时器&#x2F;计数器控制寄存器TCON"></a>6、定时器&#x2F;计数器控制寄存器TCON</h2><p>​字节地址：88H~8FH，可位寻址，TCON寄存器用来控制定时器的启、停，标志定时器溢出和中断情况。复位时全清零。</p><p><a href="https://imgtu.com/i/cUmK61"><img src="https://z3.ax1x.com/2021/04/09/cUmK61.md.png" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/04/09/cUmK61.md.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="cUmK61.md.png"></a></p><p>TF1、TR1、TF0和TR0位用于定时器&#x2F;计数器；IE1、IT1、IE0和IT0位用于外部中断。</p><p><strong>TF1</strong>:定时器1溢出标志（当定时器1溢出时，由硬件使TF1置1，并且申请中断。进入中断服务程序后，由硬件自动清0。）（如果使用定时器的中断，则该位完全不用人为去操作，但是如果用软件查询方式，当查询到该位置1后，就需要用软件清0。）</p><p><strong>TR1</strong>:定时器1运行控制位。（由软件清0关闭定时器1.当GATE&#x3D;1，且INT1为高电平时，TR1置1启动定时器1；当GATE&#x3D;0 时，TR1置1启动定时器1。</p><p><strong>TF0</strong>:定时器0溢出标志，功能及操作方法同TF1。</p><p><strong>TR0</strong>：定时器0运行控制位，同TR1。</p><p><strong>IE1</strong>：外部中断1请求标志。</p><p>。。。。。。。。。</p><p>**计算定时器的初值问题 **</p><p>默认<strong>TH0</strong>和<strong>TL0</strong>为0，当用定时器的方式1时，机器周期为<strong>Tcy</strong>（一个机器周期为12个时钟周期），定时器产生一次中断的时间为t，则需计数的个数<strong>N&#x3D;t&#x2F;Tcy</strong>，装入THX和TLX中的数分别为;</p><p>​THX &#x3D; （65536-N）&#x2F;256TLX &#x3D; （65536-N）%256</p><h2 id="7、示例"><a href="#7、示例" class="headerlink" title="7、示例"></a>7、示例</h2><p>补充：中断服务程序的写法（C51）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">形式：</span><br><span class="line">void 函数名 () interrupt 中断号 using 工作组</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">中断服务程序内容</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">说明：中断号：中断源的序号</span><br><span class="line"> using 工作组：指这个中断函数使用单片机内存中4组工作寄存器中的哪一组，一般不写，会自动分配。</span><br></pre></td></tr></table></figure><p>​</p><p>写单片机的定时器程序时，再开始处需对定时器及中断寄存器做初始化配置：</p><p>1、对TMOD赋值，确定T0和T1的工作方式；</p><p>2、计算初值，并将初值写入TH0、TL0或TH1、TL1;</p><p>3、中断方式时，则对IE赋值，开放中断；</p><p>4、使TR0或TR1置位，启动定时器&#x2F;计数器定时或计数。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/************************************************************</span></span><br><span class="line"><span class="comment">9、利用定时器0工作方式1，LED 1S闪烁</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;reg52.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> uchar unsigned char</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> uint unsigned int </span></span><br><span class="line">sbit led1 = P1^<span class="number">0</span>;</span><br><span class="line">uchar num;</span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//定时器初始化</span></span><br><span class="line">TMOD = <span class="number">0x01</span>;<span class="comment">//设置定时器0为工作方式1（M1M0为01）</span></span><br><span class="line">TH0 = (<span class="number">65536</span><span class="number">-45872</span>)/<span class="number">256</span>;<span class="comment">//装初值11.0592M晶振定时50ms数为45872</span></span><br><span class="line">TL0 = (<span class="number">65536</span><span class="number">-45872</span>)%<span class="number">256</span>;</span><br><span class="line">EA = <span class="number">1</span>;<span class="comment">//开总中断</span></span><br><span class="line">ET0 = <span class="number">1</span>;<span class="comment">//开定时器0中断</span></span><br><span class="line">TR0 = <span class="number">1</span>;<span class="comment">//启动定时器0</span></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>);<span class="comment">//程序停止在这里等待中断发生</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">T0_time</span><span class="params">()</span>interrupt 1<span class="comment">//中断服务程序</span></span><br><span class="line">&#123;</span><br><span class="line">TH0 = (<span class="number">65536</span><span class="number">-45872</span>)/<span class="number">256</span>;<span class="comment">//重装初值</span></span><br><span class="line">TL0 = (<span class="number">65536</span><span class="number">-45872</span>)%<span class="number">256</span>;</span><br><span class="line">num++;<span class="comment">//num每加1次判断一次是否到20次</span></span><br><span class="line"><span class="keyword">if</span>(num==<span class="number">20</span>)<span class="comment">//如果到了20次，说明1秒时间到</span></span><br><span class="line">&#123;</span><br><span class="line">num = <span class="number">0</span>;<span class="comment">//然后把num清0重新再计20次</span></span><br><span class="line">led1 = ~led1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>能在主程序中完成的功能就不在中断函数中写，中断函数中要高效简洁：</p><p>优化后：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/************************************************************</span></span><br><span class="line"><span class="comment">9、利用定时器0工作方式1，LED 1S闪烁</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;reg52.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> uchar unsigned char</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> uint unsigned int </span></span><br><span class="line">sbit led1 = P1^<span class="number">0</span>;</span><br><span class="line">uchar num;</span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//定时器初始化</span></span><br><span class="line">TMOD = <span class="number">0x01</span>;<span class="comment">//设置定时器0为工作方式1（M1M0为01）</span></span><br><span class="line">TH0 = (<span class="number">65536</span><span class="number">-45872</span>)/<span class="number">256</span>;<span class="comment">//装初值11.0592M晶振定时50ms数为45872</span></span><br><span class="line">TL0 = (<span class="number">65536</span><span class="number">-45872</span>)%<span class="number">256</span>;</span><br><span class="line">EA = <span class="number">1</span>;<span class="comment">//开总中断</span></span><br><span class="line">ET0 = <span class="number">1</span>;<span class="comment">//开定时器0中断</span></span><br><span class="line">TR0 = <span class="number">1</span>;<span class="comment">//启动定时器0</span></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(num==<span class="number">20</span>)<span class="comment">//如果到了20次，说明1秒时间到</span></span><br><span class="line">&#123;</span><br><span class="line">num = <span class="number">0</span>;<span class="comment">//然后把num清0重新再计20次</span></span><br><span class="line">led1 = ~led1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//程序停止在这里等待中断发生</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">T0_time</span><span class="params">()</span>interrupt 1<span class="comment">//中断服务程序</span></span><br><span class="line">&#123;</span><br><span class="line">TH0 = (<span class="number">65536</span><span class="number">-45872</span>)/<span class="number">256</span>;<span class="comment">//重装初值</span></span><br><span class="line">TL0 = (<span class="number">65536</span><span class="number">-45872</span>)%<span class="number">256</span>;</span><br><span class="line">num++;<span class="comment">//num每加1次判断一次是否到20次</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*********************************************************</span></span><br><span class="line"><span class="comment">10、中断（TX-1C）定时器0的方式1实现第一个发光管以200ms间隔闪烁</span></span><br><span class="line"><span class="comment">用定时器1的方式1实现数码管前两位59s循环计时</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;reg52.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> uchar unsigned char</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> uint unsigned int </span></span><br><span class="line">sbit dula = P2^<span class="number">6</span>;</span><br><span class="line">sbit wela = P2^<span class="number">7</span>;</span><br><span class="line">sbit led1 = P1^<span class="number">0</span>;</span><br><span class="line">uchar code table[]=&#123;</span><br><span class="line"><span class="number">0x3f</span> , <span class="number">0x06</span> , <span class="number">0x5b</span> , <span class="number">0x4f</span> ,</span><br><span class="line"><span class="number">0x66</span> , <span class="number">0x6d</span> ,<span class="number">0x7d</span> , <span class="number">0x07</span> , </span><br><span class="line"><span class="number">0x7f</span> , <span class="number">0x6f</span> , <span class="number">0x77</span> , <span class="number">0x7c</span> ,</span><br><span class="line"><span class="number">0x39</span> , <span class="number">0x5e</span> , <span class="number">0x79</span> , <span class="number">0x71</span> &#125;;</span><br><span class="line"><span class="type">void</span> <span class="title function_">delayms</span><span class="params">(uint)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">display</span><span class="params">(uchar,uchar)</span>;</span><br><span class="line">uchar num,num1,num2,shi,ge;</span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">TMOD = <span class="number">0x11</span>;<span class="comment">//设置定时器0和1为工作方式1（0001 0001）</span></span><br><span class="line">TH0 = (<span class="number">65535</span><span class="number">-45872</span>)/<span class="number">256</span>;<span class="comment">//装初值</span></span><br><span class="line">TL0 = (<span class="number">65536</span><span class="number">-45872</span>)%<span class="number">256</span>;</span><br><span class="line">TH1 = (<span class="number">65536</span><span class="number">-45872</span>)/<span class="number">256</span>;<span class="comment">//装初值</span></span><br><span class="line">TL1 = (<span class="number">65536</span><span class="number">-45872</span>)%<span class="number">256</span>;</span><br><span class="line">EA = <span class="number">1</span>;<span class="comment">//开总中断</span></span><br><span class="line">ET0 = <span class="number">1</span>;<span class="comment">//开定时器0中断</span></span><br><span class="line">ET1 = <span class="number">1</span>;<span class="comment">//开定时器1中断</span></span><br><span class="line">TR0 =<span class="number">1</span>;<span class="comment">//启动定时器0</span></span><br><span class="line">TR1 = <span class="number">1</span>;<span class="comment">//启动定时器1</span></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">display(shi,ge);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">display</span><span class="params">(uchar shi,uchar ge)</span><span class="comment">//显示子函数</span></span><br><span class="line">&#123;</span><br><span class="line">dula = <span class="number">1</span>;</span><br><span class="line">P0 = table[shi];<span class="comment">//送段选数据</span></span><br><span class="line">dula = <span class="number">0</span>;</span><br><span class="line">P0 = <span class="number">0xff</span>;<span class="comment">//送位选数据前关闭所有显示，防止打开位选锁存时原来的段选数据通过位选锁存器造成混乱</span></span><br><span class="line">wela = <span class="number">1</span>;</span><br><span class="line">P0 = <span class="number">0xfe</span>;<span class="comment">//送位选数据</span></span><br><span class="line">wela = <span class="number">0</span>;</span><br><span class="line">delayms(<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">dula = <span class="number">1</span>;</span><br><span class="line">P0 = table[ge];</span><br><span class="line">dula = <span class="number">0</span>;</span><br><span class="line">P0 =<span class="number">0xff</span>;</span><br><span class="line">wela = <span class="number">1</span>;</span><br><span class="line">P0 = <span class="number">0xfd</span>;</span><br><span class="line">wela = <span class="number">0</span>;</span><br><span class="line">delayms(<span class="number">5</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">delayms</span><span class="params">(uint xms)</span></span><br><span class="line">&#123;</span><br><span class="line">uint i,j;</span><br><span class="line"><span class="keyword">for</span>(i=xms;i&gt;<span class="number">0</span>;i--)</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">110</span>;j&gt;<span class="number">0</span>;j--);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">T0_time</span><span class="params">()</span> interrupt 1</span><br><span class="line">&#123;</span><br><span class="line">TH0=(<span class="number">65536</span><span class="number">-45872</span>)/<span class="number">256</span>;<span class="comment">//重装初值</span></span><br><span class="line">TL0=(<span class="number">65536</span><span class="number">-45872</span>)%<span class="number">256</span>;</span><br><span class="line">num1++;</span><br><span class="line"><span class="keyword">if</span>(num1==<span class="number">4</span>)<span class="comment">//4次中断=200ms</span></span><br><span class="line">&#123;</span><br><span class="line">num1 = <span class="number">0</span>;<span class="comment">//清0</span></span><br><span class="line">led1 = ~led1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">T1_time</span><span class="params">()</span> interrupt 3</span><br><span class="line">&#123;</span><br><span class="line">TH1=(<span class="number">65536</span><span class="number">-45872</span>)/<span class="number">256</span>;<span class="comment">//重装初值</span></span><br><span class="line">TL1=(<span class="number">65536</span><span class="number">-45872</span>)%<span class="number">256</span>;</span><br><span class="line">num2++;</span><br><span class="line"><span class="keyword">if</span>(num2==<span class="number">20</span>)<span class="comment">//20次中断=1秒</span></span><br><span class="line">&#123;</span><br><span class="line">num2=<span class="number">0</span>;<span class="comment">//清0</span></span><br><span class="line">num++;</span><br><span class="line"><span class="keyword">if</span>(num==<span class="number">60</span>)<span class="comment">//该数用来送数码管显示，到60后归0</span></span><br><span class="line">num=<span class="number">0</span>;</span><br><span class="line">shi=num/<span class="number">10</span>;<span class="comment">//把一个2位数分离后分别送数码管显示</span></span><br><span class="line">ge=num%<span class="number">10</span>;<span class="comment">//十位和个位</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*********************************************************</span></span><br><span class="line"><span class="comment">10、中断（BST-M51）定时器0的方式1实现第一个发光管以200ms间隔闪烁</span></span><br><span class="line"><span class="comment">用定时器1的方式1实现数码管前两位59s循环计时</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;reg52.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> uchar unsigned char</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> uint unsigned int </span></span><br><span class="line">sbit wei1 = P2^<span class="number">4</span>;<span class="comment">//定义第一位数码管</span></span><br><span class="line">sbit wei2 = P2^<span class="number">5</span>;<span class="comment">//定义第二位数码管</span></span><br><span class="line">sbit wei3 = P2^<span class="number">6</span>;<span class="comment">//定义第三位数码管</span></span><br><span class="line">sbit wei4 = P2^<span class="number">7</span>;<span class="comment">//定义第四位数码管</span></span><br><span class="line">sbit led1 = P1^<span class="number">0</span>;</span><br><span class="line">uchar code table[]=&#123;</span><br><span class="line"><span class="number">0x3f</span> , <span class="number">0x06</span> , <span class="number">0x5b</span> , <span class="number">0x4f</span> ,</span><br><span class="line"><span class="number">0x66</span> , <span class="number">0x6d</span> ,<span class="number">0x7d</span> , <span class="number">0x07</span> , </span><br><span class="line"><span class="number">0x7f</span> , <span class="number">0x6f</span> , <span class="number">0x77</span> , <span class="number">0x7c</span> ,</span><br><span class="line"><span class="number">0x39</span> , <span class="number">0x5e</span> , <span class="number">0x79</span> , <span class="number">0x71</span> &#125;;</span><br><span class="line"><span class="type">void</span> <span class="title function_">delayms</span><span class="params">(uint)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">display</span><span class="params">(uchar,uchar)</span>;</span><br><span class="line">uchar num,num1,num2,shi,ge;</span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">TMOD = <span class="number">0x11</span>;<span class="comment">//设置定时器0和1为工作方式1（0001 0001）</span></span><br><span class="line">TH0 = (<span class="number">65535</span><span class="number">-45872</span>)/<span class="number">256</span>;<span class="comment">//装初值</span></span><br><span class="line">TL0 = (<span class="number">65536</span><span class="number">-45872</span>)%<span class="number">256</span>;</span><br><span class="line">TH1 = (<span class="number">65536</span><span class="number">-45872</span>)/<span class="number">256</span>;<span class="comment">//装初值</span></span><br><span class="line">TL1 = (<span class="number">65536</span><span class="number">-45872</span>)%<span class="number">256</span>;</span><br><span class="line">EA = <span class="number">1</span>;<span class="comment">//开总中断</span></span><br><span class="line">ET0 = <span class="number">1</span>;<span class="comment">//开定时器0中断</span></span><br><span class="line">ET1 = <span class="number">1</span>;<span class="comment">//开定时器1中断</span></span><br><span class="line">TR0 =<span class="number">1</span>;<span class="comment">//启动定时器0</span></span><br><span class="line">TR1 = <span class="number">1</span>;<span class="comment">//启动定时器1</span></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">display(shi,ge);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">display</span><span class="params">(uchar shi,uchar ge)</span><span class="comment">//显示子函数</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">P0 = table[shi];<span class="comment">//送段选数据</span></span><br><span class="line">wei1 = <span class="number">1</span>;</span><br><span class="line">wei2 = <span class="number">0</span>;</span><br><span class="line">wei3 = <span class="number">0</span>;</span><br><span class="line">wei4 = <span class="number">0</span>;</span><br><span class="line">delayms(<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">P0 = table[ge];</span><br><span class="line">wei1 = <span class="number">0</span>;</span><br><span class="line">wei2 = <span class="number">1</span>;</span><br><span class="line">wei3 = <span class="number">0</span>;</span><br><span class="line">wei4 = <span class="number">0</span>;                                                                                                                                                                                                                  </span><br><span class="line">delayms(<span class="number">5</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">delayms</span><span class="params">(uint xms)</span></span><br><span class="line">&#123;</span><br><span class="line">uint i,j;</span><br><span class="line"><span class="keyword">for</span>(i=xms;i&gt;<span class="number">0</span>;i--)</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">110</span>;j&gt;<span class="number">0</span>;j--);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">T0_time</span><span class="params">()</span> interrupt 1</span><br><span class="line">&#123;</span><br><span class="line">TH0=(<span class="number">65536</span><span class="number">-45872</span>)/<span class="number">256</span>;<span class="comment">//重装初值</span></span><br><span class="line">TL0=(<span class="number">65536</span><span class="number">-45872</span>)%<span class="number">256</span>;</span><br><span class="line">num1++;</span><br><span class="line"><span class="keyword">if</span>(num1==<span class="number">4</span>)<span class="comment">//4次中断=200ms</span></span><br><span class="line">&#123;</span><br><span class="line">num1 = <span class="number">0</span>;<span class="comment">//清0</span></span><br><span class="line">led1 = ~led1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">T1_time</span><span class="params">()</span> interrupt 3</span><br><span class="line">&#123;</span><br><span class="line">TH1=(<span class="number">65536</span><span class="number">-45872</span>)/<span class="number">256</span>;<span class="comment">//重装初值</span></span><br><span class="line">TL1=(<span class="number">65536</span><span class="number">-45872</span>)%<span class="number">256</span>;</span><br><span class="line">num2++;</span><br><span class="line"><span class="keyword">if</span>(num2==<span class="number">20</span>)<span class="comment">//20次中断=1秒</span></span><br><span class="line">&#123;</span><br><span class="line">num2=<span class="number">0</span>;<span class="comment">//清0</span></span><br><span class="line">num++;</span><br><span class="line"><span class="keyword">if</span>(num==<span class="number">60</span>)<span class="comment">//该数用来送数码管显示，到60后归0</span></span><br><span class="line">num=<span class="number">0</span>;</span><br><span class="line">shi=num/<span class="number">10</span>;<span class="comment">//把一个2位数分离后分别送数码管显示</span></span><br><span class="line">ge=num%<span class="number">10</span>;<span class="comment">//十位和个位</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="4、按键检测原理及应用实现"><a href="#4、按键检测原理及应用实现" class="headerlink" title="4、按键检测原理及应用实现"></a>4、按键检测原理及应用实现</h1><p>​键盘分为编码键盘和非编码键盘（是否有编码器）；非编码键盘分为独立键盘和行列式（矩阵式）键盘。</p><h2 id="1、独立键盘检测"><a href="#1、独立键盘检测" class="headerlink" title="1、独立键盘检测"></a>1、独立键盘检测</h2><p>​抖动现象（5~10ms），一般在检测按下时加入去抖延时，检测松手时不需。</p><p><a href="https://imgtu.com/i/cXXarj"><img src="https://z3.ax1x.com/2021/04/23/cXXarj.jpg" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/04/23/cXXarj.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="cXXarj.jpg"></a></p><p>目标：1、数码管前两位显示一个十进制数，变化范围00~59，开始时显示00，</p><p>​2、每按下S2键一次，数值加1；每按下S3键一次，数值减1；每按下S4键一次，数值归零；</p><p>​3、每按下S5键一次，利用定时器功能使数值开始自动每秒加1，再次按下S5键，数值暂停。</p><p>代码分析：(省略版)</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;reg52.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> uchar.....</span></span><br><span class="line">sbit....</span><br><span class="line">uchar code table[]=&#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">display</span><span class="params">(uchar numdis)</span>&#123;</span><br><span class="line">shi=numdis/<span class="number">10</span>;</span><br><span class="line">ge=numdis%<span class="number">10</span>;</span><br><span class="line">&#125;<span class="comment">//显示子函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">delayms</span><span class="params">(uint xms)</span>&#123;&#125;  <span class="comment">//延时子函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">init</span><span class="params">()</span>&#123;                      <span class="comment">//初始化函数</span></span><br><span class="line"><span class="comment">//定时器初始化</span></span><br><span class="line">TMOD = <span class="number">0x01</span>;<span class="comment">//设置定时器0为工作方式1（M1M0为01）</span></span><br><span class="line">TH0 = (<span class="number">65536</span><span class="number">-45872</span>)/<span class="number">256</span>; <span class="comment">//装初值11.0592M晶振定时50ms数为45872</span></span><br><span class="line">TL0 = (<span class="number">65536</span><span class="number">-45872</span>)%<span class="number">256</span>;</span><br><span class="line">EA = <span class="number">1</span>;        <span class="comment">//开总中断</span></span><br><span class="line">ET0 = <span class="number">1</span>;    <span class="comment">//开定时器0中断（通过 TR0 = 1;开启）</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">keyscan</span><span class="params">()</span>&#123;<span class="comment">//按键扫描子函数</span></span><br><span class="line"><span class="keyword">if</span>(key1==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">delayms(<span class="number">10</span>);<span class="comment">//消抖</span></span><br><span class="line"><span class="keyword">if</span>(key1==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">num++;</span><br><span class="line"><span class="keyword">if</span>(num==<span class="number">60</span>)</span><br><span class="line">num=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(!key1);<span class="comment">//等待按键释放</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(key2==<span class="number">0</span>)&#123;&#125;</span><br><span class="line"><span class="keyword">if</span>(key3==<span class="number">0</span>)&#123;&#125;</span><br><span class="line"><span class="keyword">if</span>(key4==<span class="number">0</span>)&#123;<span class="keyword">while</span>(!key4); TR0=~TR0;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">init();</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">keyscan();</span><br><span class="line">display(num);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">T0_time</span><span class="params">()</span>interrupt 1</span><br><span class="line">&#123;</span><br><span class="line">TH0 = (<span class="number">65536</span><span class="number">-45872</span>)/<span class="number">256</span>;<span class="comment">//重装初值</span></span><br><span class="line">TL0 = (<span class="number">65536</span><span class="number">-45872</span>)%<span class="number">256</span>;</span><br><span class="line">numt0++;</span><br><span class="line"><span class="keyword">if</span>(numt0==<span class="number">20</span>)<span class="comment">//1秒时间到</span></span><br><span class="line">&#123;</span><br><span class="line">numt0=<span class="number">0</span>;    <span class="comment">//时间清零重计</span></span><br><span class="line">num++;<span class="comment">//每秒加1</span></span><br><span class="line"><span class="keyword">if</span>(num==<span class="number">60</span>)</span><br><span class="line">num=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="2、矩阵键盘检测"><a href="#2、矩阵键盘检测" class="headerlink" title="2、矩阵键盘检测"></a>2、矩阵键盘检测</h2><p><a href="https://imgtu.com/i/cjpVPI"><img src="https://z3.ax1x.com/2021/04/23/cjpVPI.md.jpg" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/04/23/cjpVPI.md.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="cjpVPI.md.jpg" style="zoom:150%;" /></a></p><p>目标：TX-1C：上电，数码管不显示，顺序按下矩阵键盘后，数码管上依次显示0~F，6个数码管同时静态显示即可</p><p>代码分析：（省略版）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    P0=<span class="number">0</span>;<span class="comment">//关闭所有数码管段选</span></span><br><span class="line">    dula=<span class="number">1</span>;</span><br><span class="line">    dula=<span class="number">0</span>;</span><br><span class="line">    P0=<span class="number">0xc0</span>;<span class="comment">//位选中所有数码管（以后直接送段选信号）</span></span><br><span class="line">    wela=<span class="number">1</span>;</span><br><span class="line">    wela=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">      matrixkeyscan();<span class="comment">//不停调用键盘扫描程序</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">display</span><span class="params">(uchar num)</span></span><br><span class="line">&#123;</span><br><span class="line">    P0=table[num];<span class="comment">//显示函数只送段选数据</span></span><br><span class="line">    dula=<span class="number">1</span>;</span><br><span class="line">    dula=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">matrixkeyscan</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    uchar temp,key;</span><br><span class="line">    P3=<span class="number">0xfe</span>;<span class="comment">//1111 1110 第一行线置低电平，其余为高电平</span></span><br><span class="line">    temp=P3;<span class="comment">//P3状态赋给临时变量，用于计算</span></span><br><span class="line">    temp=temp&amp;<span class="number">0xf0</span>;<span class="comment">//1111 0000 若temp高四位有0，则结果不为0xf0;若无，则一直为0xf0</span></span><br><span class="line">    <span class="keyword">if</span>(temp!=<span class="number">0xf0</span>)<span class="comment">//说明有键按下</span></span><br><span class="line">    &#123;</span><br><span class="line">        delayms(<span class="number">10</span>);<span class="comment">//消抖</span></span><br><span class="line">        temp=P3;<span class="comment">//重读</span></span><br><span class="line">        temp=temp&amp;<span class="number">0xf0</span>;<span class="comment">//重&amp;</span></span><br><span class="line">         <span class="keyword">if</span>(temp!=<span class="number">0xf0</span>)<span class="comment">//说明确实有键按下</span></span><br><span class="line">         &#123;</span><br><span class="line">             temp=P3;<span class="comment">//再读一下P3状态（行列交叉）</span></span><br><span class="line">             <span class="keyword">switch</span>(temp)</span><br><span class="line">             &#123;</span><br><span class="line">                 <span class="keyword">case</span> <span class="number">0xee</span>:<span class="comment">//1110 1110</span></span><br><span class="line">                     key=<span class="number">0</span>;</span><br><span class="line">                     <span class="keyword">break</span>;</span><br><span class="line">                 <span class="keyword">case</span> <span class="number">0xde</span>:<span class="comment">//1101 1110</span></span><br><span class="line">                     key=<span class="number">1</span>;</span><br><span class="line">                     <span class="keyword">break</span>;</span><br><span class="line">                 <span class="keyword">case</span> <span class="number">0xbe</span>:<span class="comment">//1011 1110</span></span><br><span class="line">                     key=<span class="number">2</span>;</span><br><span class="line">                     <span class="keyword">break</span>;</span><br><span class="line">                 <span class="keyword">case</span> <span class="number">0x7e</span>:<span class="comment">//0111 1110</span></span><br><span class="line">                     key=<span class="number">3</span>;</span><br><span class="line">                     <span class="keyword">break</span>;                </span><br><span class="line">             &#125;</span><br><span class="line">             <span class="keyword">while</span>(temp!=<span class="number">0xf0</span>)<span class="comment">//等待按键释放</span></span><br><span class="line">             &#123;</span><br><span class="line">                 temp=P3;<span class="comment">//不断读取</span></span><br><span class="line">                 temp=temp&amp;<span class="number">0xf0</span>;<span class="comment">//不断相&amp;，只要结果不为0xf0，就说明按键没有被释放</span></span><br><span class="line">             &#125;</span><br><span class="line">             display(key);<span class="comment">//显示</span></span><br><span class="line">         &#125;</span><br><span class="line">            </span><br><span class="line">    &#125;</span><br><span class="line">     P3=<span class="number">0xfd</span>;<span class="comment">//1111 1101第二行置低电平，其余为高电平</span></span><br><span class="line">    。。。。。。。。。。。。。</span><br><span class="line">     P3=<span class="number">0xfb</span>;</span><br><span class="line">    .......................</span><br><span class="line">     P3=<span class="number">0xf7</span>;</span><br><span class="line">    .......................</span><br><span class="line">        </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="5、模-数转换"><a href="#5、模-数转换" class="headerlink" title="5、模&#x2F;数转换"></a>5、模&#x2F;数转换</h1><h2 id="1、转换原理及参数指标"><a href="#1、转换原理及参数指标" class="headerlink" title="1、转换原理及参数指标"></a>1、转换原理及参数指标</h2><p>​采样保持、量化、编码。</p><p>​<strong>采样定理</strong>：$f_s&gt;&#x3D;2f_{ i max }$，通常取3-5倍（量化需要时间)，$f_s$为采样频率，$f_{i max}$为输入信号的最高频率分量的频率。在满足采样定理的条件下可以使用一个低通滤波器将信号还原出来，该低通滤波器电压传输系数在低于$f_{imax}$的范围内保持不变，在$f_s$-$f_{imax}$以前迅速下降为0</p><p>​量化和编码：</p><p>​量化：化成一个最小数量单位（量化单位$\bigtriangleup$）的整数倍。（会产生量化误差，最大为$\bigtriangleup$，解决：取中点，缩小为$\bigtriangleup$&#x2F;2）</p><p>​编码：把量化的数值用二进制代码表示，即输出信号。</p><p>​<strong>补充</strong>：采样保持电路（N沟道MOS管可做采样开关用，高电平T导通）</p><h2 id="2、直接A-D转换器"><a href="#2、直接A-D转换器" class="headerlink" title="2、直接A&#x2F;D转换器"></a>2、直接A&#x2F;D转换器</h2><h3 id="1、并行比较型"><a href="#1、并行比较型" class="headerlink" title="1、并行比较型"></a>1、并行比较型</h3><p>​（电压比较器+寄存器+代码转换器）</p><p>​单片集成并行比较型A&#x2F;D转换器如：AD9012(8位)、AD9002（8位）、AD9020（10位）等</p><p>​特点：①并行，转换时间只受比较器、触发器和编码电路延迟时间限制，转换速度快；②随着分辨率提高，元件数目按几何级数增加；③这种含寄存器的并行A&#x2F;D转换电路，可以不用附加采样-保持电路（比较器和寄存器兼有采样-保持功能）。</p><p>​缺点：需要很多的电压比较器和触发器。</p><h3 id="2、反馈比较型"><a href="#2、反馈比较型" class="headerlink" title="2、反馈比较型"></a>2、反馈比较型</h3><p>​原理：取一个数字量加到D&#x2F;A转换器上，得到一个对应的输出模拟电压，将这个模拟电压与输入的模拟电压信号比较，如果两者不相等，则调整所取的数字量，直至两个模拟电压相等为止，最后所取的数字量就是转换结果。</p><h3 id="3、计数型"><a href="#3、计数型" class="headerlink" title="3、计数型"></a>3、计数型</h3><p>​（ 比较器C+D&#x2F;A转换器+计数器+脉冲源+控制门G+输出寄存器等）</p><p>​使用寄存器原因：转换过程计数器中数字不停变化，不宜将计数器状态直接作为输出信号。</p><p>​缺点：转换速度低。</p><h3 id="4、逐次比较型"><a href="#4、逐次比较型" class="headerlink" title="4、逐次比较型"></a>4、逐次比较型</h3><p>​（提高转换速度，在计数型基础上，采用类似天平称重的思路：将输入模拟信号与不同的参考电压做多次比较，使转换所得的数字量在树数值上逐次逼近输入模拟量的对应值）</p><p>​一次转换时间与其位数和时钟脉冲频率相关。位数越少，时钟频率越高，转换时间越短。</p><p>​优点：转换速度快，精度高等。</p><p>​集成逐次比较型A&#x2F;D转换器如：8位：ADC0804、ADC0808、ADC0809系列；10位：AD575；12位：AD574A等</p><h2 id="3、间接A-D转换器（主要两种）"><a href="#3、间接A-D转换器（主要两种）" class="headerlink" title="3、间接A&#x2F;D转换器（主要两种）"></a>3、间接A&#x2F;D转换器（主要两种）</h2><h3 id="1、时间-电压变换型（V-T变换型）"><a href="#1、时间-电压变换型（V-T变换型）" class="headerlink" title="1、时间-电压变换型（V-T变换型）"></a>1、时间-电压变换型（V-T变换型）</h3><p>​首先把输入的模拟电压信号转换成与之成正比的<em><strong>时间宽度</strong></em>信号，然后在这个时间宽度里对固定频率的时钟脉冲计数，计数结果就是正比于输入模拟电压的数字信号。</p><h3 id="2、电压-频率变换型（V-F变换型）"><a href="#2、电压-频率变换型（V-F变换型）" class="headerlink" title="2、电压-频率变换型（V-F变换型）"></a>2、电压-频率变换型（V-F变换型）</h3><p>​首先把输入的模拟电压信号转换成与之成正比的<em><strong>频率</strong></em>信号，然后在一个固定的时间间隔里对得到的频率信号计数，所得到的结果就是正比于输入模拟电压的数字量。</p><h2 id="4、A-D转换器的参数指标"><a href="#4、A-D转换器的参数指标" class="headerlink" title="4、A&#x2F;D转换器的参数指标"></a>4、A&#x2F;D转换器的参数指标</h2><ol><li>分辨率：对输入信号的分辨能力，以输出二进制的位数表示。eg:输出8位二进制数，输入信号最大值5V,分辨最小电压：$5V×1&#x2F;2^8≈19.53mv$；</li><li>转换误差：理论与实际输出数字量之间的差别，一般用最低有效位表示；</li><li>转换精度：A&#x2F;D转换器的最大量化误差和模拟部分精度的共同体现；</li><li>最大量化误差：应为分辨率数值的一半（实际还要低些）；</li><li>模拟处理（如积分器、比较器等）部分的误差：一般与数字转换误差应尽量处于同一数量等级。eg:10位A&#x2F;D转换器用其中9位计数；</li><li>总误差：累加和；</li><li>最大相对量化误差：2^9×0.5≈0.1％，模拟部分也为0.1％，总精度0.2％；</li><li>转换时间：转换控制信号来，到输出端得到稳定的数字信号所经过的时间。并行比较A&#x2F;D转换器（8位单片集成50ns）&lt; 逐次比较型A&#x2F;D转换型（10-50us,也有几百纳秒的）&lt; 间接A&#x2F;D转换器（双积分A&#x2F;D转换器时间几十毫秒~几百毫秒）</li></ol><h2 id="5、小结："><a href="#5、小结：" class="headerlink" title="5、小结："></a>5、小结：</h2><p>​①高速：并行；</p><p>​②高精度：双积分A&#x2F;D转换器；</p><p>​③逐次比较型A&#x2F;D转换器兼有，普遍使用；</p><p>​④主要技术参数：转换精度、转换速度（决定系统）</p><h2 id="6、ADC0804工作原理及其实现方法"><a href="#6、ADC0804工作原理及其实现方法" class="headerlink" title="6、ADC0804工作原理及其实现方法"></a>6、ADC0804工作原理及其实现方法</h2><p><a href="https://imgtu.com/i/RiZqCF"><img src="https://z3.ax1x.com/2021/06/20/RiZqCF.md.jpg" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/06/20/RiZqCF.md.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="RiZqCF.md.jpg" style="zoom:150%;" /></a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*********************************************************</span></span><br><span class="line"><span class="comment">11、TX-IC上ADC0804的数模转换使用(逐次比较型)</span></span><br><span class="line"><span class="comment">*********************************************************/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;reg52.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;intrins.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> uchar unsigned char</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> uint unsigned int </span></span><br><span class="line">sbit dula = P2^<span class="number">6</span>;<span class="comment">//U1锁存端</span></span><br><span class="line">sbit wela = P2^<span class="number">7</span>;<span class="comment">//U2锁存端</span></span><br><span class="line">sbit adwr = P3^<span class="number">6</span>;<span class="comment">//A/D的WR端口</span></span><br><span class="line">sbit adrd = P3^<span class="number">7</span>;<span class="comment">//A/D的RD端口</span></span><br><span class="line"></span><br><span class="line">uchar code table[]=&#123;</span><br><span class="line"><span class="number">0x3f</span> , <span class="number">0x06</span> , <span class="number">0x5b</span> , <span class="number">0x4f</span> ,</span><br><span class="line"><span class="number">0x66</span> , <span class="number">0x6d</span> ,<span class="number">0x7d</span> , <span class="number">0x07</span> , </span><br><span class="line"><span class="number">0x7f</span> , <span class="number">0x6f</span> , <span class="number">0x77</span> , <span class="number">0x7c</span> ,</span><br><span class="line"><span class="number">0x39</span> , <span class="number">0x5e</span> , <span class="number">0x79</span> , <span class="number">0x71</span> &#125;;</span><br><span class="line"><span class="type">void</span> <span class="title function_">delayms</span><span class="params">(uint xms)</span></span><br><span class="line">&#123;</span><br><span class="line">uint i,j;</span><br><span class="line"><span class="keyword">for</span>(i=xms;i&gt;<span class="number">0</span>;i--)</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">110</span>;j&gt;<span class="number">0</span>;j--);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">display</span><span class="params">(uchar bai,uchar shi,uchar ge)</span></span><br><span class="line">&#123;</span><br><span class="line">dula = <span class="number">1</span>;</span><br><span class="line">P0 = table[bai];</span><br><span class="line">dula = <span class="number">0</span>;</span><br><span class="line">P0 = <span class="number">0xff</span>;<span class="comment">//送位选数据前关闭所有显示，防止打开位选锁存时，原来的段选数据通过位选锁存器造成混乱</span></span><br><span class="line">wela = <span class="number">1</span>;</span><br><span class="line">P0 = <span class="number">0x7e</span>;<span class="comment">//送位选数据   0111 1110 (始终保持最高位为0，是下方CS端一直被选中)</span></span><br><span class="line">wela = <span class="number">0</span>;</span><br><span class="line">delayms(<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">dula = <span class="number">1</span>;</span><br><span class="line">P0 = table[shi];</span><br><span class="line">dula = <span class="number">0</span>;</span><br><span class="line">P0 = <span class="number">0xff</span>;</span><br><span class="line">wela = <span class="number">1</span>;</span><br><span class="line">P0 = <span class="number">0x7d</span>;<span class="comment">//0111 1101</span></span><br><span class="line">wela = <span class="number">0</span>;</span><br><span class="line">delayms(<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">dula = <span class="number">1</span>;</span><br><span class="line">P0 = table[ge];</span><br><span class="line">dula = <span class="number">0</span>;</span><br><span class="line">P0 = <span class="number">0xff</span>;</span><br><span class="line">wela = <span class="number">1</span>;</span><br><span class="line">P0 = <span class="number">0x7b</span>;<span class="comment">//0111 1011</span></span><br><span class="line">wela = <span class="number">0</span>;</span><br><span class="line">delayms(<span class="number">5</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">uchar a,A1,A2,A3,adval;</span><br><span class="line">wela = <span class="number">1</span>;</span><br><span class="line">P0 = <span class="number">0x7f</span>;<span class="comment">//CSAD为0，选通ADCS后不再管ADCS</span></span><br><span class="line">wela = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">adwr = <span class="number">1</span>;</span><br><span class="line">_nop_();<span class="comment">//延迟一个机器周期</span></span><br><span class="line">adwr = <span class="number">0</span>;<span class="comment">//AD启动</span></span><br><span class="line">_nop_();</span><br><span class="line">adwr = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(a=<span class="number">10</span>;a&gt;<span class="number">0</span>;a--)<span class="comment">//此处A/D工作频率较低，所以启动后要多留时间用来转换（将显示部分放在这里）</span></span><br><span class="line">&#123;</span><br><span class="line">display(A1,A2,A3);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">P1 = <span class="number">0xff</span>;<span class="comment">//读取P1口之前全赋1</span></span><br><span class="line">adrd = <span class="number">1</span>;<span class="comment">//选通ADCS</span></span><br><span class="line">_nop_();</span><br><span class="line">adrd = <span class="number">0</span>;<span class="comment">//A/D读使能</span></span><br><span class="line">_nop_();</span><br><span class="line">adval = P1;<span class="comment">//将A/D数据赋给P1口</span></span><br><span class="line">adrd = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">A1 = adval/<span class="number">100</span>;</span><br><span class="line">A2 = adval%<span class="number">100</span>/<span class="number">10</span>;</span><br><span class="line">A3 = adval%<span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="6、数-模转换"><a href="#6、数-模转换" class="headerlink" title="6、数&#x2F;模转换"></a>6、数&#x2F;模转换</h1>]]></content>
      
      
      
        <tags>
            
            <tag> 嵌入式开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>魔方闲玩</title>
      <link href="/2021/04/04/mo-fang-xian-wan/"/>
      <url>/2021/04/04/mo-fang-xian-wan/</url>
      
        <content type="html"><![CDATA[<h1 id="1、起因"><a href="#1、起因" class="headerlink" title="1、起因"></a>1、起因</h1><p>​小学时我爸就给我买了一个魔方，说明书看着太复杂，就被我随手扔了，自己瞎鼓捣，魔方自从打乱过就再也没有拼好过（除了我拿螺丝刀把中心轴全拆下来重新拼好），最多也就拼好一个面过，我姐也对…，然后就扔一边去了，看别人玩的挺溜的，然后看公式一大堆，就没耐心去看了，高中室友有一段时间买了各种形状的魔方，我就学会了拼金字塔那种简单的异形魔方，其他也就没耐心看下去了，最基础的三阶的一直没去看，就一直没学会，就是很菜…然后，就是近期拼多多给我推了魔方，我就又产生了兴趣，买了两个（一个三阶一个五阶）（额。。。5阶的再鸽一阵子吧），然后看了一晚上的视频教程，还是没有学会（太菜了……），第二天一早，自己回顾了一下，终于能拼好六个面了。</p><p><a href="https://imgtu.com/i/cKtV74"><img src="https://z3.ax1x.com/2021/04/04/cKtV74.md.jpg" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/04/04/cKtV74.md.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="cKtV74.md.jpg" style="zoom:150%;" /></a></p><h1 id="2、三阶教程（层先法"><a href="#2、三阶教程（层先法" class="headerlink" title="2、三阶教程（层先法)"></a>2、三阶教程（层先法)</h1><h2 id="1、第一步（底面白色十字）"><a href="#1、第一步（底面白色十字）" class="headerlink" title="1、第一步（底面白色十字）"></a>1、第一步（底面白色十字）</h2><p>​先拼好一个黄白小花（中间黄色一块，四周四个白色块），然后对齐底层棱块，前面一层旋转180°。。。，最后拼成底面一个白色十字。</p><h2 id="2、第二步（底面白色，底层T形"><a href="#2、第二步（底面白色，底层T形" class="headerlink" title="2、第二步（底面白色，底层T形)"></a>2、第二步（底面白色，底层T形)</h2><p>​先找除底面白色十字的其余白色块，顶角三面对齐，然后如果白色块在右上角，则使用一次右公式（右上左下），如果在左上角，则使用一次左公式（左上右下），如果在顶上时，则使用两次右公式，顶上的白色块就会跑到右上角，这时就变成了第一种情况，再使用一次右公式就好了（相当于顶上的白色块使用三次右公式就可以了）。</p><h2 id="3、第三步（中层）"><a href="#3、第三步（中层）" class="headerlink" title="3、第三步（中层）"></a>3、第三步（中层）</h2><p>​要拼好中层的话就只要调整好四个棱块就好了，上层棱块对齐，看哪些是我们需要的，黄色块是不需要的，如果顶层四个棱块全是黄色块即没有我们所需要的棱块，则使用一次右公式就有了。然后找到我们需要的棱块，它要去左边还是右边，去右就用一次右公式，这时白色块会上来一块，则使用第二步的方法；它要去左的话，则类推，用左公式一下。。。</p><h2 id="4、第四步-顶层十字，黄色"><a href="#4、第四步-顶层十字，黄色" class="headerlink" title="4、第四步(顶层十字，黄色)"></a>4、第四步(顶层十字，黄色)</h2><pre><code> 1. 黄色块九点钟形状：前面一层顺时针90°，右公式一次，前面一层逆时针90°就好了； 2. 黄色块三点一线：横着对向自己，前面一层顺时针90°，右公式一次前面一层顺时针90°回来，就变成了情况1； 3. 顶层只有一个黄色点：则前面一层顺时针90°，右公式一次，前面一层逆时针90°就变成了情况2。</code></pre><h2 id="5、第五步（顶角位置）"><a href="#5、第五步（顶角位置）" class="headerlink" title="5、第五步（顶角位置）"></a>5、第五步（顶角位置）</h2><p>​顶角一定是有两块对齐了，这时只有两种情况：</p><pre><code>    1. 相邻两边不对齐：则不对齐的放在右侧，右公式三次，魔方整体顺时针90°，再来三次左公式；    1. 对角不对齐：右公式三次，整体顺时针90°，再来三次左公式。</code></pre><h2 id="6、第六步（顶角方向）"><a href="#6、第六步（顶角方向）" class="headerlink" title="6、第六步（顶角方向）"></a>6、第六步（顶角方向）</h2><p>​魔方整体倒过来，白色一面向上，选一色面向自己（选完后不能变），则右下角一块为处理位，处理时（右公式两次，则处理位的顶角方向逆时针转一次），处理完后底层转动，切换要处理的顶角，直至四角全部处理完毕。处理完后再整体倒过来，可以发现原来的魔方并没有被打乱。</p><h2 id="7、第七步（顶棱位置）"><a href="#7、第七步（顶棱位置）" class="headerlink" title="7、第七步（顶棱位置）"></a>7、第七步（顶棱位置）</h2><p>​可以发现有一面已经完成好了，则这面对向自己，看对面需要的棱块在左还是在右：</p><pre><code>    1. 在左：左公式两次，右公式两次，左公式四次，右公式四次，完毕。    1. 在右：右公式两次，左公式两次，右公式四次，左公式四次，完毕。</code></pre><h1 id="3、总结"><a href="#3、总结" class="headerlink" title="3、总结"></a>3、总结</h1><p>​因为觉得很难，一直没有去尝试，尝试一点就放一边去了，还有就是要找到合适的方法，是看视频，还是看教程文字，适合自己的才是最好的，但一定要去尝试。接下来就是看看能不能把5阶的魔方给拼好，还有就是把以前学一半或者没有一半的给补上，比如笛子等，还有就是学的不深入的51、32等，PCB绘制等。。。</p><p>​推荐学习视频;<a href="https://www.bilibili.com/video/BV1zp411o75F?t=1869">https://www.bilibili.com/video/BV1zp411o75F?t=1869</a></p><p>​</p>]]></content>
      
      
      
        <tags>
            
            <tag> 魔方 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021年RM机甲大师高校联盟赛</title>
      <link href="/2021/03/28/2021-nian-rm-ji-jia-da-shi-gao-xiao-lian-meng-sai/"/>
      <url>/2021/03/28/2021-nian-rm-ji-jia-da-shi-gao-xiao-lian-meng-sai/</url>
      
        <content type="html"><![CDATA[<h1 id="2021RM高校联盟赛落幕"><a href="#2021RM高校联盟赛落幕" class="headerlink" title="2021RM高校联盟赛落幕"></a>2021RM高校联盟赛落幕</h1><p><a href="https://imgtu.com/i/c9Ex1I"><img src="https://z3.ax1x.com/2021/03/29/c9Ex1I.jpg" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/03/29/c9Ex1I.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="c9Ex1I.jpg"></a></p><p><a href="https://imgtu.com/i/c9EXhd"><img src="https://z3.ax1x.com/2021/03/29/c9EXhd.jpg" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/03/29/c9EXhd.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="c9EXhd.jpg"></a></p><p><a href="https://imgtu.com/i/c9Ev9A"><img src="https://z3.ax1x.com/2021/03/29/c9Ev9A.jpg" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/03/29/c9Ev9A.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="c9Ev9A.jpg"></a></p><p>​第一次正式跟着学长参加RM比赛，以前一直是通过视频了解RM的，第一次近距离的接触，确实感到很震撼，但震撼的同时也瞬间感觉到我们的小车和其他学校的小车之间巨大的实力悬殊，别人的车无论是机械、电控、视觉方面都比我们高一大截（我们其实就没有视觉方面的自瞄系统，全靠手动瞄准，还是遥控器操作的），透过比赛，发现了很多的问题，相关代码不够完善（枪管过热、裁判系统回传、键鼠操作指令等问题），据我观察，全场就我一人使用遥控器操作的，确实没有键鼠操作灵活。车的问题一大堆，说实话，拿着这辆拼凑的小车去参赛确实挺丢人的，场上也听到了别人背后的议论与嘲笑，确实不太好受，但这也怪不了谁，只能怪自己技术不到家，也不能一昧的把原因放到学校资金不足上。</p><p>​随着比赛的推进，逐渐感受到了RM的魅力，看到了每一个参赛队对战车的投入，他们的设计有很多值得学习的地方（已经成为标配的“小陀螺”，视觉自瞄系统，通过5连发间断发射解决枪管过热问题的方法。。。），亲自操作小车比赛，感觉确实不错，就是自己太菜了。。。</p><p>​其实，这次比赛的意义还是很大的，虽然输的很丢人（其实是在意料之中的，但重大那局我感觉是有机会的，但是没有把握住，上场之前没有较好的优化代码，及时发现云台晃动的问题），其实还是有很多感想的，只不过一时要把它写下来，就不知道如何说了。。。</p><p><a href="https://imgtu.com/i/c9EOtH"><img src="https://z3.ax1x.com/2021/03/29/c9EOtH.jpg" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/03/29/c9EOtH.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="c9EOtH.jpg"></a></p><p>​<a href="https://imgtu.com/i/c9Eb7D"><img src="https://z3.ax1x.com/2021/03/29/c9Eb7D.jpg" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/03/29/c9Eb7D.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="c9Eb7D.jpg"></a></p><p>遗憾的是，在丁毅涵的最后一年比赛中没有给他打出一分的成绩，感觉挺难受的。希望学长考研上岸，继续朝着RM努力。</p><p>​真不知道学长走后，实验室的我们还能不能继续打RM，确实挺迷茫的。。。不过我觉得比赛结果其实也没那么重要，重要的是在这个过程中能够从零开始，造出一辆“属于”自己的车，提高能力的同时收获快乐。</p><p>​RM的主题曲确实很有感染力。。。。。。“我一直追寻着你，你好像不远也不近，却总保持着距离。。。。。”</p><p>​你: <a href="https://y.qq.com/n/yqq/mv/v/o0025wv26q0.html">https://y.qq.com/n/yqq/mv/v/o0025wv26q0.html</a></p><p>​终于写了自己的第一篇博客，记录一下平时的学习经验和生活吧，希望以此能够督促自己，也相当于一个备忘录吧。。。</p><p>​学长发的博客：</p><p><a href="https://imgtu.com/i/28a1MT"><img src="https://z3.ax1x.com/2021/06/03/28a1MT.md.png" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/06/03/28a1MT.md.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="28a1MT.md.png" style="zoom:150%;" /></a></p>]]></content>
      
      
      
        <tags>
            
            <tag> RM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>随笔日志</title>
      <link href="/2021/03/25/sui-bi-ri-zhi/"/>
      <url>/2021/03/25/sui-bi-ri-zhi/</url>
      
        <content type="html"><![CDATA[<h1 id="2024"><a href="#2024" class="headerlink" title="2024"></a>2024</h1><h2 id="目标："><a href="#目标：" class="headerlink" title="目标："></a>目标：</h2><ol><li>成功入伍；</li></ol><h2 id="日志："><a href="#日志：" class="headerlink" title="日志："></a>日志：</h2><h3 id="7月："><a href="#7月：" class="headerlink" title="7月："></a>7月：</h3><h1 id="2023"><a href="#2023" class="headerlink" title="2023"></a>2023</h1><h2 id="目标：-1"><a href="#目标：-1" class="headerlink" title="目标："></a>目标：</h2><p>1：学习LVGL（制作<a href="https://www.xutoubee.cn/">espMointor_plus</a>;墨水屏气象站，了解GUI的制作和相关程序编写）</p><p>2：学习C++&amp;C#</p><h2 id="日志：-1"><a href="#日志：-1" class="headerlink" title="日志："></a>日志：</h2><h2 id="9月："><a href="#9月：" class="headerlink" title="9月："></a>9月：</h2><p><strong>1日：</strong>[ —[——基于STM32MP157开发板 文档 (embedfire.com)]</p><ol><li>cubemx &amp;HAL（<a href="https://blog.csdn.net/as480133937/article/details/98845509">【STM32】系统时钟RCC详解(超详细，超全面)_rcc时钟_Z小旋的博客-CSDN博客</a>）</li></ol><p>学习系列，<a href="https://blog.csdn.net/as480133937/article/details/98885316">【STM32】STM32 CubeMx </a>， <a href="https://doc.embedfire.com/linux/stm32mp1/hal/zh/latest/doc/chapter41/chapter41.html">将STM32CubeIDE工程转为keil MDK工程</a>;</p><ol start="2"><li>J-FLASH查看数据（安装目录下有很多小工具）</li></ol><h3 id="8月："><a href="#8月：" class="headerlink" title="8月："></a>8月：</h3><p><strong>31日：</strong></p><ol><li>掉电重启参数CRC校验失败-&gt;可能是bootloader里的影响，（改为从0x0800 0000启动，大小0x4000）；</li><li>基站设置画面：添加基站；</li><li><a href="https://www.cnblogs.com/pertor/p/9484663.html">STM32学习笔记：读写内部Flash（介绍+附代码） </a></li></ol><p><strong>30日：</strong></p><ol><li>安装产测工具：找不到msvcp120dll无法继续运行-&gt;win+r-&gt;cmd-&gt;scf&#x2F;scannow-&gt;重启（未解决）；</li><li>RDSS的zigbee页面：</li></ol><blockquote><p>①切换到zigbee设置画面，文本框显示zigbee参数（不用批量更新）（else if互斥）</p><p>②点击对应文本框，弹出自定义键盘，并且键盘文本框显示此时的参数，通过键盘修改后按go键显示在zigbee参数文本框，若按退出键盘页面不修改内容，最后点击confirm按键提交zigbee参数设置</p><p>③仿照系统自带键盘，使用lua脚本通过只操作串口屏实现自定义键盘（按键通知改为仅按下时，否则如果定义为切换画面，先切画面，再发送按钮通知）</p><p><strong>strtoul()</strong> 会扫描参数nptr 字符串，跳过前面的空白字符（例如空格，tab缩进等，可以通过 isspace() 函数来检测），直到遇上数字或正负符号才开始做转换，再遇到非数字或字符串结束时(‘\0’)结束转换，并将结果返回；</p></blockquote><ol start="3"><li>CRC校验：Cyclic Redundancy Check</li></ol><p><strong>17日：</strong></p><p>大彩：控件：</p><blockquote><p><strong>滑动选择</strong>控件（滑动选择、状态选择）;</p><p><strong>滑块</strong>控件（item代表选项，如10；20；30…则item&#x3D;0代表选择第0项10）;</p><p><strong>RTC</strong>控件；</p><p><strong>GIF</strong>控件；</p><p><strong>图标</strong>控件（按钮互斥：选中互斥的所有按钮-&gt;编辑-&gt;按钮互斥）；</p><p><strong>曲线</strong>控件（例如，把曲线宽度设置为480像素，采样点数设置为480个，1个像素点对应1个曲线采样数据。那么整个宽度的曲线显示完毕正好需要480个数据，当481个数据到来的时候，更新FIFO数据，曲线向右平移显示。如果曲线宽度为200像素，采样点数为201，整个控件宽度只能显示200个采样点，那么第201个曲线的数据点到来的时候屏幕上显示的曲线就会开始向右平移显示）；</p><p><strong>菜单</strong>控件；</p><p><strong>二维码</strong>控件；</p><p><strong>数据记录</strong>控件；</p><p><strong>历史曲线</strong>控件;</p><blockquote><p>数据记录控件与历史曲线共用存储块在128K flash里面，开启数据存储时，应设置存储地址</p><p>数据存储地址计算：</p><p>数据控件存储大小 &#x3D; 最大记录数*单条记录大小+24 （单位：字节）</p><p>历史曲线存储大小 &#x3D; 通道个数*采样点数+30 （单位： 字节）</p></blockquote><p><strong>圆形进度条</strong>控件：LUA脚本关联圆形进度条与文本框（代替MCU下发指令，串口屏内部直接回调控制）；</p><p><strong>旋转控件</strong>： （可实现仪表效果）；</p><p><strong>基本图形</strong>控件，<strong>视频</strong>控件，<strong>AV输入</strong>控件 </p></blockquote><p><strong>16日：</strong></p><ol><li>看大彩官网开发文档，visualTFT、keil与虚拟串口屏调试，MCU程序处理框架；</li><li>文件系统-&gt;FATFS；</li><li>IAP（In-Application Programming”），ICP（In-Application Programming），ISP: Bootloader；</li><li>uc-osll</li></ol><h1 id="2022"><a href="#2022" class="headerlink" title="2022"></a>2022</h1><h2 id="目标：-2"><a href="#目标：-2" class="headerlink" title="目标："></a>目标：</h2><p>考研上岸！！！×</p><h2 id="日志：-2"><a href="#日志：-2" class="headerlink" title="日志："></a>日志：</h2><h3 id="11月："><a href="#11月：" class="headerlink" title="11月："></a>11月：</h3><p><strong>5日：</strong>毕设选题了关于无人机跟踪识别的，大概了解了下，开了一篇博客帖子积累素材，差不多了，要收收心，现在不要太关注这个，全身心投入考研，还有48天，加油！</p><h3 id="10月："><a href="#10月：" class="headerlink" title="10月："></a>10月：</h3><p><strong>26日：</strong><a href="https://www.jb51.net/softjc/842790.html">ToDesk如何打开音频播放</a>  <a href="https://www.somode.com/course/7896.html">找不到文件gpedit.msc怎么办详细介绍</a></p><p><strong>25日：</strong><a href="https://www.jianshu.com/p/5e38fa61ea29?utm_campaign=maleskine&utm_content=note&utm_medium=seo_notes">使用Atom打造无懈可击的Markdown编辑器</a> 图床出了点问题，考虑后续换</p><p><strong>17~20日：</strong>认识实习：eNSP网络仿真（网络设施配置相关、ping、PC通信、VLAN、IP、mac、子网掩码与IP相与，网关、路由，(教程：B站：众元助教元元)、抓包软件wireshark、RRT、BBT、吸顶天线、子网，网元）（交换机好像不是太高深的东西，不是很贵，家用的几十块钱，像HUB集线器一样）</p><p><strong>11~15日：</strong>金工实习：激光雕刻机可以搞一下；（3B代码，数控G代码）</p><h3 id="9月：-1"><a href="#9月：-1" class="headerlink" title="9月："></a>9月：</h3><p><strong>16日：</strong><a href="http://t.zoukankan.com/qsyll0916-p-7788475.html">关于串口通信波特率的几点思考</a></p><h3 id="6月："><a href="#6月：" class="headerlink" title="6月："></a>6月：</h3><p><strong>15日：</strong><a href="https://blog.csdn.net/qq_44907926/article/details/118585030?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522165526055716781818777291%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=165526055716781818777291&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-118585030-null-null.142%5Ev16%5Epc_search_result_control_group,157%5Ev14%5Enew_3&utm_term=%E7%88%AC%E8%99%AB&spm=1018.2226.3001.4187">一篇万字博文带你入坑爬虫这条不归路 【万字图文】</a></p><p><a href="https://blog.csdn.net/weixin_52122271/article/details/120718703?spm=1001.2014.3001.5501">Flask框架——第一个Flask程序</a></p><h3 id="4月："><a href="#4月：" class="headerlink" title="4月："></a>4月：</h3><p><strong>9日：</strong><a href="https://blog.csdn.net/zs1342084776/article/details/88701261">MYSQL WorkBench使用教程</a></p><p><strong>8日：</strong><a href="https://rossning92.github.io/pid-simulation/">PID在线直观感受</a></p><h3 id="3月："><a href="#3月：" class="headerlink" title="3月："></a>3月：</h3><p><strong>20日：</strong><a href="http://c.biancheng.net/view/2625.html">MySQL WorkBench使用教程</a></p><p><strong>9日：</strong><a href="https://www.cnblogs.com/xuexianqi/p/12795890.html">MySQL安装教程</a></p><h3 id="2月："><a href="#2月：" class="headerlink" title="2月："></a>2月：</h3><p><strong>8日：</strong><a href="https://blog.csdn.net/sysjtlwx/article/details/73824903">[Arduino]烧写Arduino BootLoader的几种方法</a></p><h1 id="2021"><a href="#2021" class="headerlink" title="2021"></a>2021</h1><h2 id="目标：-3"><a href="#目标：-3" class="headerlink" title="目标："></a>目标：</h2><h2 id="日志：-3"><a href="#日志：-3" class="headerlink" title="日志："></a>日志：</h2><h3 id="10月：-1"><a href="#10月：-1" class="headerlink" title="10月："></a>10月：</h3><p><strong>5日：</strong>开始新一阶段的学习</p><h3 id="8月：-1"><a href="#8月：-1" class="headerlink" title="8月："></a>8月：</h3><p><strong>8日：</strong>系统学习8266系列模组，了解相关网络协议（淘了一把pocker2键盘，修了修，准备换ipad的触摸总成，了解了一些邮票的知识，买了一个集邮册，准备收集着玩）</p><h3 id="7月：-1"><a href="#7月：-1" class="headerlink" title="7月："></a>7月：</h3><p><strong>29日：</strong>做墨水屏气象站，翻新了一下博客</p><p><strong>26日：</strong><a href="https://blog.csdn.net/m0_45040529/article/details/109254507">Arduino文件梳理</a></p><p><strong>25日：</strong> 研究esp8266驱动墨水屏，手上的8266应该是重复刷固件了，导致出错，参考网上教程使用Python2安装esptool进行固件擦除，正好看一下python知识，接下来准备用8266获取相关网络信息，并进行墨水屏GUI设计，为墨水屏天气站做准备。</p><p><strong>22日：</strong> 飞机飞丢了。正好开始做些正事。树莓派图传做出来了，效果很好，是摄像头的问题。在看微雪的墨水屏资料。<br><strong>21日：</strong> 准备做墨水屏天气站，尝试用VScode。</p><p><strong>20日：</strong>一直在玩航模，树莓派图传发射端遇到点问题，应是没有识别出摄像头，重新买了一个，还没到，不能在这方面花太多时间了，要开始学习了，有点缺少方向。</p><p><strong>5~7日：</strong> 看了一下实验室的3D打印机，拆开来修了一下，然后打印东西，不太好用。</p><p><strong>4日：</strong> 找点零件凑了一架F330四轴。</p><p><strong>3日：</strong>考试基本都完了，还差一个12号的大跨。一到放假，手又痒了，想玩航模了。看到了OpenHD树莓派图传方案（最远70公里），要入坑了，在学校调好后回去玩远航FPV。还有就是墨水屏天气站，修一下实验室的3D打印机。</p><h3 id="6月：-1"><a href="#6月：-1" class="headerlink" title="6月："></a>6月：</h3><p><strong>26日：</strong>  复习信号与系统，要加快进度了，还要带着复习信息论，抽空看了一下示波器的FFT运算功能，准备结合信号与系统的复习了解一下正点原子小示波器的这项功能使用。</p><p><strong>25日：</strong>大概了解了一下光耦，没仔细看完。了解了一下实验室那台3D打印机，考完试拆开来看看，打印点东西，感觉不错。</p><p><strong>24日：</strong>了解了一下电荷泵的原理，可以升压，产生负压。</p><p><strong>23日：</strong>复习信号与系统，上课走神，感觉复习的不在状态，实验室原来的桌子搬到了毕业学长的桌子上，感觉还好（我比较容易受外界环境的影响），（大四毕业了，看着他们拖着行李走出校园，不难想到两年后的自己会是什么样的）晚上听了一个信息工程大学的研究生招生宣讲，加上这几天的不在状态，感觉很迷茫，迷茫中又感觉，从现在开始该做些什么了，该做出一些改变了，该思考一下未来的发展规划了。尝试在实验室里静下心来学习</p><p><a href="https://imgtu.com/i/Ru4DsS"><img src="https://z3.ax1x.com/2021/06/23/Ru4DsS.md.jpg" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/06/23/Ru4DsS.md.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Ru4DsS.md.jpg"></a></p><p>快放暑假了，估计会留校，心里又想留校又想回家，最好的是，先留校，趁着有时间多学点东西，然后电赛后的剩余时间回趟家。</p><p><a href="https://imgtu.com/i/Ru5Cod"><img src="https://z3.ax1x.com/2021/06/23/Ru5Cod.md.jpg" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/06/23/Ru5Cod.md.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Ru5Cod.md.jpg"></a></p><p>（按照学长的建议，暑假应该找点时间考虑考研考哪所学校了，要有一个目标）</p><p><strong>22日：</strong>NFC卡的元件都到了，焊接了一下，风枪从板子底下加热的，类似于回流焊，配上自己买的锡膏和洗板水，用的很顺手，很成功，第一次焊接这种精密的板子，做了四块，自己留了一块，其余送人了，挺好的。（正点原子的示波器DS100也到了，感觉很好，今后会很方便的）</p><p><a href="https://imgtu.com/i/RuhwB4"><img src="https://z3.ax1x.com/2021/06/23/RuhwB4.md.jpg" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/06/23/RuhwB4.md.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="RuhwB4.md.jpg"></a></p><p><strong>21日：</strong> 上课，上课，发呆，发呆。。。</p><p><strong>20日：</strong>白天主要帮同学做数电课设了（太浪费时间了。。），今天突发奇想，把很老的（2013年的）TI G2口袋实验板子资料翻了翻，感觉设计的不错，正好也回顾了下寒假学的MSP430，接下来也可以带着学下去，单片机都是通用的，换汤不换药，还是以一个板子为主，学内在的技术。总感觉不能这样下去了，得要有些改变了，对未来又有点小迷茫了。明天一定要开始复习信号与系统了。</p><p><strong>19日：</strong>数电课设完成了，白天主要帮同学解决课设的一些问题，昨天晚上辗转反侧，趁着618买了正点原子的迷你示波器DS100，挺好的，以后用着也方便，就是这个月得吃土了。。。晚上没什么事干，看了一下别人用32制作示波器的开源方案，感觉都不太好，然后收拾了一下各种元件，然后趁着熄灯前把51的AD转换学完了，完善了之前的博客内容。明天得把信号与系统实验完善一下了（明天最后一节课了），然后开始信号与系统的复习了。下下周三期末，还什么都不太懂。。。</p><p><strong>18日：</strong>今天把数电课设做完了（数字频率计），明天去答辩，接下来会学些新知识，顺带着玩一些开源项目（今天618，买了点东西）</p><p><a href="https://imgtu.com/i/R9YVUA"><img src="https://z3.ax1x.com/2021/06/18/R9YVUA.md.png" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/06/18/R9YVUA.md.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="R9YVUA.md.png"></a></p><p><strong>15日：</strong>看到B站有个做NFC卡片的，挺好看的，改了一下，发到嘉立创打样了，元件也买了点（实际焊盘应该是银色的，不知道好不好看，金色的太贵了）</p><p><a href="https://imgtu.com/i/R9JUne"><img src="https://z3.ax1x.com/2021/06/18/R9JUne.md.png" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/06/18/R9JUne.md.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="R9JUne.md.png" style="zoom: 50%;" /></a><a href="https://imgtu.com/i/R9Js9P"><img src="https://z3.ax1x.com/2021/06/18/R9Js9P.md.png" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/06/18/R9Js9P.md.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="R9Js9P.md.png" style="zoom:50%;" /></a></p><p>2021.6.13：数电复习了一周，考完了，准备复习剩下的几门课。这几天把树莓派搭建服务器看一下。树莓派使用3.5寸TFT屏幕与HDMI交互使用：<a href="https://www.jianshu.com/p/67f593706e15">树莓派安装3.5寸屏幕驱动</a> <a href="https://blog.csdn.net/Link2Points/article/details/113002383">树莓派4b3.5inch显示屏+远程+FTP+建站</a> （屏幕切换之间遇到点小问题，加装屏幕后影响散热1.需要先开启root权限sudo passwd root &#x2F;&#x2F;设置root密码su root&#x2F;&#x2F;切到root用户，输入密码2.进入boot ：cd boot（1：cd LCD-show&#x2F;   2：.&#x2F;LCD-hdmi    .&#x2F;LCD35-show）</p><p><a href="https://imgtu.com/i/27VTPJ"><img src="https://z3.ax1x.com/2021/06/14/27VTPJ.md.jpg" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/06/14/27VTPJ.md.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="27VTPJ.md.jpg" /></a></p><p><strong>5日：</strong>板子到了，焊接了一下，锡膏不太好用，芯片忘供电了，最终制作出来一张完整的板子</p><p><a href="https://imgtu.com/i/2I7kTJ"><img src="https://z3.ax1x.com/2021/06/13/2I7kTJ.md.jpg" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/06/13/2I7kTJ.md.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="2I7kTJ.md.jpg" /></a></p><p><strong>3日：</strong>课设弄完了，得好好复习了。</p><h3 id="5月："><a href="#5月：" class="headerlink" title="5月："></a>5月：</h3><p><strong>30日：</strong>画了一个usb2.0集线器PCB，用嘉立创打板了，元件也买了。</p><p><strong>29日：</strong>接下来主要还是学习，又快要考试了。其次就是一些还没跳的坑：</p><ol><li><p>51单片机继续学习（现在到AD部分了）。</p></li><li><p>通信课设继续完善，尽量把小程序做出来，通过一套完整的开发流程增加开发经验（还有就是室友和同学的课设，带着完善。还有就是以后要学会拒绝别人，不能什么事都揽到自己身上）。</p></li><li><p>自己做一个USB集线器，从电路PCB到元件采买，焊接，到制作外壳，学会使用3D打印机，学几项新技能，通过项目充实自己。</p></li><li><p>买了3块墨水屏，有时间研究研究显示部分，然后准备制作WIFI气象站，尽量想B站大佬做出那种带QQ信息显示的部分，做好后尽量也画个外壳，尽量再暑假结束前做出来。</p></li><li><p>想趁着618改改键盘，主要换键帽，改键线分离，可以的话准备再加个白灯或者蓝灯。</p></li><li><p>树莓派，近期还没想好怎么玩，想想吧。</p></li><li><p>做一个简易的小电源，以后用着方便。</p></li><li><p>对了，可见光通信，有机会搞搞。</p><p>以上都是想做的，但我这个性格估计能做出来一半就不错了，仅供提醒自己一下吧，防止忘记</p></li></ol><p>近期，就这样，还有的就想不起来了。对了，还有就是认真学习，认真生活。</p><p><strong>28日：</strong>去看一下哆啦A梦 伴我同行2</p><p><a href="https://imgtu.com/i/2iNnX9"><img src="https://z3.ax1x.com/2021/05/27/2iNnX9.md.jpg" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/05/27/2iNnX9.md.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="2iNnX9.md.jpg" style="zoom:200%;" /></a></p><p><strong>25~27日：</strong>主要把入党那些材料弄了一下</p><p><strong>23日：</strong>考完电磁场了，题目还是挺难的，但感觉还是复习的不到位，我觉得有些题是可以通过复习做出来的，还是自己没有平衡好电赛和学习之间的关系，捡了芝麻丢了西瓜，到最后芝麻都可能丢了，希望电磁场不要挂….今后要把学习放在首要地位，要平衡好学习与爱好之间的关系，这次算是一个教训吧。其实也想了很多，想到了以后的事，学习还是特别重要的，至少在现阶段是这样的。考完电磁场和室友出去吃了一顿，好好放松了一下，喝了两瓶啤酒，感觉还行，回宿舍后，另外两个室友带了六瓶江小白，又是一顿，喝完还不够，一人又来了半瓶牛栏山，我是从来没喝过那么多酒啊，感觉还将就，一般般吧，就是第二天脑袋疼，东北人是真能喝啊，下次注意，不能再这样喝下去了。</p><p><strong>10~21日：</strong>校电赛</p><p><a href="https://imgtu.com/i/2itFRe"><img src="https://z3.ax1x.com/2021/05/27/2itFRe.md.jpg" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/05/27/2itFRe.md.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="2itFRe.md.jpg" style="zoom: 150%;" /></a></p><p>选的B题，看着简单，做起来是真难啊。。。关键还在电磁场要考试期间，搞得我都迈不开步子去做，只能白天复习，晚上做，</p><p><a href="https://imgtu.com/i/2it8Mj"><img src="https://z3.ax1x.com/2021/05/27/2it8Mj.md.jpg" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/05/27/2it8Mj.md.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="2it8Mj.md.jpg" style="zoom:150%;" /></a>其实白天脑子里也在想着电赛，让我很难受。</p><p>​这次电赛的可见光通信是非常值得研究的，我觉得很有意义，看来两篇毕设论文，理论上实现还是比较容易的，但现实做起来不太容易，和元件特性关系很大，小功率LED下可以实现比较稳定一点的信息传输，但是换成自己做的12V大功率驱动板就不太好用了，干扰很大，不光是自然光影响，还和驱动部分的稳定性有关，这一部分卡了四天，最终不得不放弃了，离考试还剩两天了，还没开始复习….</p><p>推荐一下别人做的可见光通信部分，做的挺好：<a href="https://blog.csdn.net/fengge2018/article/details/108301334?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522162212383916780271591917%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=162212383916780271591917&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-108301334.first_rank_v2_pc_rank_v29&utm_term=%E5%8F%AF%E8%A7%81%E5%85%89%E9%80%9A%E4%BF%A1&spm=1018.2226.3001.4187">可见光通信</a></p><p>后续还会继续搞搞的。今天刚出电赛结果，优秀奖（没办法，谁叫我优秀呢。报销泡汤了，得自己还花呗了。。。）</p><p>对了，HELLO,2021 TI.</p><p><strong>2~5日：</strong>将通信课设（智能温室大棚）完善了一下，具体功能已实现，暂时没有做用户端界面（准备用微信小程序做一个）。采用中国移动onenet-MQTT开源代码+正点原子相关例程，用的是emqx免费的服务器（晚上的时候特别不稳定，调不出来，白天一调就好了，说到底还是免费的）</p><p><a href="https://imgtu.com/i/2iY4rn"><img src="https://z3.ax1x.com/2021/05/27/2iY4rn.md.jpg" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/05/27/2iY4rn.md.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="2iY4rn.md.jpg"  /></a></p><p>另外帮几个同学也做了4份课设，51，32，arduino, esp01s都有的，主要用到了点灯科技的开发文档，挺好用的，也是免费的，也可以连接小爱同学。51那块串口通信具体看了一下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">uart_init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">TMOD=<span class="number">0x20</span>;<span class="comment">//即0010 0000,定时器/计数器1,工作方式2</span></span><br><span class="line">TH1=<span class="number">0xfd</span>;<span class="comment">//设置波特率为9600</span></span><br><span class="line">TL1=<span class="number">0xfd</span>;</span><br><span class="line">TR1=<span class="number">1</span>;<span class="comment">//启动定时器/计数器1</span></span><br><span class="line"></span><br><span class="line">SCON=<span class="number">0x50</span>; <span class="comment">//0101 0000.串口工作方式1，允许串行控制</span></span><br><span class="line">PCON=<span class="number">0x00</span>;<span class="comment">//设置SMOD=0</span></span><br><span class="line">IE=<span class="number">0x90</span>; <span class="comment">//CPU允许中断，串行允许中断</span></span><br><span class="line"></span><br><span class="line">TI=<span class="number">1</span>;<span class="comment">//直接使用printf必须加入此句才能实现发送</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>1日：</strong><img src="https://z3.ax1x.com/2021/05/27/2iJOBt.md.jpg" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/05/27/2iJOBt.md.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="2iJOBt.md.jpg"  /></p><h3 id="4月：-1"><a href="#4月：-1" class="headerlink" title="4月："></a>4月：</h3><p><strong>21日：</strong>最近状态有点不太好，上课心不在焉，感觉人变懒了，不过现在调整的还可以了，要静下心来，好好学习了，突然发现，我几乎没有把平时时间用在专业课学习上，一直混混沌沌的，最近也没有什么要做的事，所以感觉很“闲”，其实还有很多事没做。得好好复习专业课了，现在有的东西还一头雾水（上课时听一点，下课就扔一边了），不能再像以前等到期末再复习了。还有就是兴趣爱好，近期就是把通信课设好好弄一下（带着队友从头开始，这样也能多学一点），顺带着学51（学长建议看32，后期调整一下）。树莓派也买了，到了之后就先当一个小电脑玩玩吧，以后有需要再进一步学习（我觉得以后一定会用到的）（我总是对自己的直觉异常的自信  &gt;&lt;    。。。）额。。。虽然想的很多，还是得脚踏实地啊。还有就是我感觉哈尔滨的春天（也许是夏天）已经到了，傍晚的夕阳还有喷气式飞机的航迹线真的太美了，吃过饭去散步一定很舒服，虽然没去过。。。（我得看看这个博客怎么发表情，要不体现不了我的心情。。。只能省略号代替了）近期的话，就这样，挺好…</p><p>PS: 一首好听的歌：<a href="http://music.163.com/song?id=29375057&userid=2045942784">http://music.163.com/song?id=29375057&amp;userid=2045942784</a></p><img src="https://z3.ax1x.com/2021/04/09/cUYMjS.md.jpg" class="lazyload placeholder" data-srcset="https://z3.ax1x.com/2021/04/09/cUYMjS.md.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="cUYMjS.md.jpg" style="zoom: 200%;" /><h1 id="站点日志"><a href="#站点日志" class="headerlink" title="站点日志"></a>站点日志</h1><p>2024.7.19：重建博客；</p><p>2021.8.25：替换了所有文章的封面图片，更有识别性。</p><p>2021.8.3：博客整体弄完了，接下来就是优化速度和专注学习写博客了。折腾了几天发现我对博客这东西有了更深入的认识，自己还不太好说，来自黑石博客的一位博友说：“Wordpress,hexo都是很不错的博客系统，我觉得虽然现在短视频非常流行，但是要想把学到的知识和技能形成自己真正的能力，减少碎片化信息对大脑的刺激，就必须在一个相对安静的环境中学习。而博客这样的平台可以很好的记录自己的所思所想，也能够形成系统的知识体系。同时，写博客也是不断加深自己对知识理解的程度，有句话说的好：“如果你在学习一项新知识或新技能的同时考虑如何将其教给他人，你吸收内化知识的速度将比你仅仅作为一个学习者要快得多。快速掌握新知识、新技能的方法之一就是学完以后立刻与他人分享。”从这个意义讲，学习——&gt;分享——&gt;反馈——&gt;再学习——&gt;再分享——&gt;再反馈这样一种学习模式，在博客这里就可以很好的体现，我觉得这也是博客的价值所在。许多有价值的问题和回答都是通过博客进行了详细而清楚的说明，所以获取问题答案最快最有效的办法就是看博客。<br>看了网站主人的博客，感触颇深，结合自己也在自学这方面的知识，发表下对博客的一些看法。相互学习，共同进步！”我觉得就是这个意思，接下来更深入的投入学习吧。</p><p> 2021.7.29：整体翻新博客，采用matery主题。</p><p>2021.4.11:新增并完善看板娘功能（看板娘首次登录为默认，可自行切换不同人物，下次打开即为最后一次切换的人物）。</p><p>2021.5.25：新增鼠标点击特效（额外配置时导致文件未备份，中间出了一点小差错，导致网页打开速度慢了一些）。</p><p>2021.5.27：尝试加快网页访问速度（使用hexo-all-minifier，压缩）。</p><p>2021.5.29：配置Markdown语法公式块与Hexo兼容。<a href="https://www.dazhuanlan.com/2020/06/09/5edf70eb9e803/">https://www.dazhuanlan.com/2020/06/09/5edf70eb9e803/</a></p><p>2021.5.31：根据日期top值设定置顶日志，添加左侧Music博客主题音乐。</p><p>2021.6.3:发布一篇新博客2021.6.3。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
